everybody_leave_home:
  alias: Everybody Leave Home
  sequence:
    - data:
        message:
          ":running: :house: :dancer: Everyone has left the house. Running the
          following:"
      service: script.post_to_home_log
    - service: script.turn_everything_off
  mode: single
test:
  alias: Test
  sequence:
    - service: light.turn_on
      data:
        color_name: cyan
        flash: short
        brightness: 255
      target:
        entity_id: light.office_light
  mode: single
post_direct_message_to_danny:
  alias: Post Direct Message to Danny
  sequence:
    - condition: state
      entity_id: input_boolean.enable_direct_notifications
      state: "on"
    - service: notify.mobile_app_dannys_phone
      data:
        message: "{{ message }}"
        title: "{{ title|default('', true) }}"
  mode: single
police_effect:
  alias: Police Effect
  sequence:
    - repeat:
        count: "10"
        sequence:
          - service: scene.turn_on
            target:
              entity_id:
                - scene.landing_set_light_to_blue
                - scene.landing_set_light_to_red
    - service: scene.turn_on
      target:
        entity_id: scene.stairs_light_dim
    - service: scene.turn_on
      target:
        entity_id: scene.stairs_light_off
  mode: single
front_door_open_notification:
  alias: Front Door Open Notification
  sequence:
    - service: scene.create
      data:
        scene_id: current_stairs_light
        snapshot_entities:
          - light.stairs
    - service: scene.create
      data:
        scene_id: current_stairs_light2
        snapshot_entities:
          - light.stairs_2
    - service: scene.create
      data:
        scene_id: current_office_light_1
        snapshot_entities:
          - light.office_light
    - service: scene.turn_on
      target:
        entity_id:
          - scene.front_door_open_notification
  mode: single
  icon: mdi:door-open
porch_override_notification:
  alias: Porch Override Notification
  sequence:
    - repeat:
        count: "2"
        sequence:
          - service: light.turn_on
            data:
              brightness: 255
              color_name: blue
            entity_id: light.porch
          - service: light.turn_on
            data:
              brightness: 178
              color_name: white
            entity_id: light.porch
    - service: scene.turn_on
      target:
        entity_id: scene.porch_light_on
  mode: single
post_rich_notification:
  alias: Post Rich Notification
  sequence:
    - service: notify.slack_notify
      data:
        message: test
        title: test title
        target: "#home_log"
        data:
          attachments:
            - color: "#36a64f"
              pretext: Optional text that appears above the attachment block
              title: Slack API Documentation
              title_link: https://api.slack.com/
              text: Optional text that appears within the attachment
              fields:
                - title: Priority
                  value: High
                  short: false
  mode: single
  icon: mdi:slack
post_actionable_notification_with_2_buttons:
  alias: Post Actionable Notification With 2 Buttons
  fields:
    message:
      description: Message to post
      required: true
    title:
      description: (optional)Header to the message posted.
    action1_title:
      description: First action text.
      required: true
    action1_name:
      description: First vent name if action is selected.
      required: true
    action2_title:
      description: Second action text.
      required: true
    action2_name:
      description: Second event name if action is selected.
      required: true
  sequence:
    - condition: state
      entity_id: input_boolean.enable_direct_notifications
      state: "on"
    - service: notify.mobile_app_dannys_phone
      data:
        message: "{{ message }}"
        title: "{{ title|default('', true) }}"
        data:
          actions:
            - title: "{{ action1_title }}"
              action: "{{ action1_name }}"
            - title: "{{ action2_title }}"
              action: "{{ action2_name }}"
  mode: queued
  max: 10
  icon: mdi:cellphone
post_actionable_notification_with_3_buttons:
  alias: Post Actionable Notification With 3 Buttons
  fields:
    message:
      description: Message to post
      required: true
    title:
      description: (optional)Header to the message posted.
    action1_title:
      description: First action text.
    action1_name:
      description: First vent name if action is selected.
      required: true
    action2_title:
      description: Second action text.
      required: true
    action2_name:
      description: Second event name if action is selected.
      required: true
    action3_title:
      description: Third action text.
      required: true
    action3_name:
      description: Third event name if action is selected.
      required: true
  sequence:
    - condition: state
      entity_id: input_boolean.enable_direct_notifications
      state: "on"
    - service: notify.mobile_app_dannys_phone
      data:
        message: "{{ message }}"
        title: "{{ title|default('', true) }}"
        data:
          actions:
            - title: "{{ action1_title }}"
              action: "{{ action1_name }}"
            - title: "{{ action2_title }}"
              action: "{{ action2_name }}"
            - title: "{{ action3_title }}"
              action: "{{ action3_name }}"
  mode: single
  icon: mdi:cellphone
lounge_flash_lounge_lights_red:
  alias: "Lounge: Flash Lounge Lights Red"
  sequence:
    - service: scene.create
      data:
        scene_id: current_lounge_lights
        snapshot_entities:
          - light.lounge_left_lamp
          - light.lounge_right_lamp
    - service: scene.turn_on
      target:
        entity_id: scene.lounge_lights_red
      data:
        transition: 0
    - delay:
        hours: 0
        minutes: 0
        seconds: 0
        milliseconds: 500
    - service: scene.turn_on
      target:
        entity_id: scene.current_lounge_lights
  mode: single
  icon: mdi:lamp
turn_everything_off:
  alias: Turn Everything Off
  sequence:
    - data:
        message: ":mirror: Turning off Magic Mirror."
      service: script.post_to_home_log
    - service: switch.turn_off
      target:
        entity_id: switch.magic_mirror_screen
    - service: script.post_to_home_log
      data:
        message: ":bulb: Turning off office lights."
    - service: scene.turn_on
      target:
        entity_id: scene.office_all_lights_off
    - service: script.post_to_home_log
      data:
        message: ":bulb: Turning off office, bedroom fans."
    - service: switch.turn_off
      target:
        entity_id:
          - switch.office_fan
          - switch.fan_3
    - service: script.post_to_home_log
      data:
        message: ":bulb: Turning off kitchen lights."
    - service: scene.turn_on
      target:
        entity_id:
          - scene.kitchen_all_lights_off
    - service: script.post_to_home_log
      data:
        message: ":bulb: Turning off lounge lights."
    - service: scene.turn_on
      target:
        entity_id: scene.lounge_lights_off
    - service: script.post_to_home_log
      data:
        message: ":running: :house: :bulb: Turning off conservatory light."
    - service: scene.turn_on
      target:
        entity_id: scene.conservatory_turn_off_light
    - service: script.post_to_home_log
      data:
        message: ":bulb: Turning off stairs light."
    - service: scene.turn_on
      target:
        entity_id:
          - scene.stairs_light_off
          - scene.stairs_light_2_off
    - service: script.post_to_home_log
      data:
        message: ":bulb: Turning off porch light."
    - service: scene.turn_on
      target:
        entity_id: scene.porch_lights_off
    - service: script.post_to_home_log
      data:
        message: ":bulb: Turning off bathroom light."
    - service: scene.turn_on
      target:
        entity_id: scene.bathroom_turn_off_light
  mode: single
nfc_bedroom_right:
  alias: NFC Bedroom Right
  sequence:
    - service: script.post_to_home_log
      data:
        message: Turning everything off.
    - service: script.turn_everything_off
  mode: single
  icon: mdi:nfc
other_bedroom_door_opening_warning:
  alias: Other Bedroom Door Opening Warning
  fields:
    bedroom:
      name: Bedroom
      description: Which bedroom door was opened.
      required: true
  sequence:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{bedroom == 'leo'}}"
          sequence:
            - service: script.bedroom_leos_door_opened_notification
            - service: script.post_to_home_log
              data:
                message:
                  ":boy: :door: Leo's door opened and bedroom light is on. Sending
                  warning."
        - conditions:
            - condition: template
              value_template: "{{bedroom == 'ashlee'}}"
          sequence:
            - service: script.bedroom_ashlees_door_opened_notification
            - service: script.post_to_home_log
              data:
                message:
                  ":girl: :door: Ashlee's door opened and bedroom light is on. Sending
                  warning."
      default: []
    - if:
        - condition: state
          entity_id: media_player.bedroom_chromecast
          state: playing
      then:
        - service: media_player.media_play_pause
          target:
            entity_id: media_player.bedroom_chromecast
        - service: script.post_to_home_log
          data:
            message: ":tv: Bedroom Chromecast was on, pausing TV."
  mode: single
office_pc_turned_off_notification:
  alias: Office PC Turned Off Notification
  sequence:
    - service: scene.turn_on
      data:
        transition: 1
      target:
        entity_id: scene.office_pc_turned_off_notification
    - delay:
        hours: 0
        minutes: 0
        seconds: 1
        milliseconds: 0
    - service: scene.turn_on
      data:
        transition: 1
      target:
        entity_id: scene.office_turn_off_light_notification
  mode: single
office_turn_on_leos_vm:
  alias: "Office: Turn On Leo's VM"
  sequence:
    - choose:
        - conditions:
            - condition: state
              entity_id: switch.turk_docker_deepstack
              state: "on"
          sequence:
            - service: script.post_to_home_log
              data:
                message: ":ship: Turning off Deepstack."
            - service: switch.turn_off
              data: {}
              target:
                entity_id: switch.turk_docker_deepstack
            - wait_for_trigger:
                - platform: state
                  entity_id: switch.turk_docker_deepstack
                  to: "off"
                  for:
                    hours: 0
                    minutes: 0
                    seconds: 0
              continue_on_timeout: false
              timeout: "60"
      default: []
    - service: script.post_to_home_log
      data:
        message: ":computer: Turning on Leo's VM."
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.turk_vm_leos_windows_10
    - wait_for_trigger:
        - platform: state
          entity_id: switch.turk_vm_leos_windows_10
          to: "on"
      timeout: "60"
      continue_on_timeout: false
  mode: single
  icon: mdi:microsoft-windows
