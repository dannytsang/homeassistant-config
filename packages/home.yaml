# Created by Danny Tsang <danny@tsang.uk>
automation:
  # Handle mode changes
  - id: "1631138390675"
    alias: "Home Mode: Changed"
    description: ""
    trigger:
      - platform: state
        entity_id: input_select.home_mode
    condition: []
    action:
      - service: script.send_to_home_log
        data:
          message: ":repeat: Entering {{ states('input_select.home_mode') }} mode."
          title: "Home Mode"
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.home_mode
                state: "Holiday"
            sequence:
              - service: script.home_mode_turn_on_holiday_mode
                data: {}
          - conditions:
              - condition: state
                entity_id: input_select.home_mode
                state: "Normal"
            sequence:
              - service: script.home_mode_turn_on_normal_mode
                data: {}
        default: []
    mode: single
  # Privacy Mode
  - id: "1646257483770"
    alias: "Home: Privacy Mode Turned On"
    description: ""
    trigger:
      - platform: state
        entity_id: input_boolean.privacy_mode
        to: "on"
    condition: []
    action:
      - service: script.send_to_home_log
        data:
          message: ":detective: Privacy mode enabled."
      - service: script.send_to_home_log
        data:
          message: ":camera: Turning conservatory camera recording and detction off."
      - service: script.conservatory_turn_off_camera
        data: {}
      - service: script.send_to_home_log
        data:
          message: ":camera: Turning lounge camera recording and detction off."
      - service: script.lounge_turn_off_camera
        data: {}
    mode: single

script:
  home_mode_turn_on_holiday_mode:
    alias: Home Mode Turn On Holiday Mode
    icon: mdi:airplane
    sequence:
      - parallel:
          - service: script.set_central_heating_to_away_mode
            data: {}
          - service: script.set_how_water_to_away_mode
            data: {}
          - service: script.send_to_home_log
            data:
              message: "Finished setting up :airplane: holiday mode"
              title: Home Mode
    mode: single
  home_mode_turn_on_normal_mode:
    alias: Home Mode Turn On Normal Mode
    icon: mdi:home
    sequence:
      - parallel:
          - service: script.set_central_heating_to_home_mode
            data: {}
          - service: script.set_how_water_to_home_mode
            data: {}
          - service: script.send_to_home_log
            data:
              message: "Finished setting up normal mode"
              title: Home Mode
          - service: script.normal_mode_swtich_on
            data: {}
    mode: single
  # Mode scripts
  holiday_mode_swtich_off:
    alias: Holiday Mode Switch Off
    icon: mdi:power-plug-off
    sequence:
      - service: script.send_to_home_log
        data:
          message: "Turning off Kitchen"
          title: Home Mode
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.coffee_machine
            - switch.kettle
      - service: script.send_to_home_log
        data:
          message: "Turning off Lounge"
          title: Home Mode
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.harmony_hub_plug
            - switch.playstation_plug
      - service: script.send_to_home_log
        data:
          message: "Turning off Office"
          title: Home Mode
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.pc_accessories_plug
  normal_mode_swtich_on:
    alias: Normal Mode Switch On
    icon: mdi:power-plug
    sequence:
      - service: script.send_to_home_log
        data:
          message: "Turning on Kitchen"
          title: Home Mode
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
            - switch.kettle
      - service: script.send_to_home_log
        data:
          message: "Turning on Lounge"
          title: Home Mode
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
            - switch.harmony_hub_plug
            - switch.playstation_plug
      - service: script.send_to_home_log
        data:
          message: "Turning on Office"
          title: Home Mode
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
            - switch.pc_accessories_plug
  turn_everything_off:
    alias: Turn Everything Off
    sequence:
      - alias: Turn off Magic Mirror
        parallel:
          - service: script.send_to_home_log
            data:
              message: ":mirror: Turning off Magic Mirror."
          - service: switch.turn_off
            target:
              entity_id: switch.magic_mirror_screen
      - alias: Turn off office lights
        parallel:
          - service: script.send_to_home_log
            data:
              message: ":bulb: Turning off office lights."
          - service: scene.turn_on
            target:
              entity_id: scene.office_all_lights_off
      - alias: Turn off fans
        parallel:
          - service: script.send_to_home_log
            data:
              message: ":bulb: Turning off office, bedroom fans."
          - service: switch.turn_off
            target:
              entity_id:
                - switch.office_fan
                - switch.fan_3
      - alias: Turn off kitchen lights
        parallel:
          - service: script.send_to_home_log
            data:
              message: ":bulb: Turning off kitchen lights."
          - service: scene.turn_on
            target:
              entity_id:
                - scene.kitchen_all_lights_off
      - alias: Turn off lounge lights
        parallel:
          - service: script.send_to_home_log
            data:
              message: ":bulb: Turning off lounge lights."
          - service: scene.turn_on
            target:
              entity_id: scene.lounge_lights_off
      - alias: Turn off conservatory lights
        parallel:
          - service: script.send_to_home_log
            data:
              message: ":running: :house: :bulb: Turning off conservatory light."
          - service: scene.turn_on
            target:
              entity_id: scene.conservatory_turn_off_light
      - alias: Turn off stairs lights
        parallel:
          - service: script.send_to_home_log
            data:
              message: ":bulb: Turning off stairs light."
          - service: scene.turn_on
            target:
              entity_id:
                - scene.stairs_light_off
                - scene.stairs_light_2_off
      - alias: Turn off porch lights
        parallel:
          - service: script.send_to_home_log
            data:
              message: ":bulb: Turning off porch light."
          - service: scene.turn_on
            target:
              entity_id: scene.porch_lights_off
      - alias: Turn off bathroom lights
        parallel:
          - service: script.send_to_home_log
            data:
              message: ":bulb: Turning off bathroom light."
          - service: scene.turn_on
            target:
              entity_id: scene.bathroom_turn_off_light
      - alias: Turn off streaming devices
        parallel:
          - if:
              - not:
                  - or:
                      - condition: state
                        entity_id: media_player.google_tv
                        state: "off"
                      - condition: state
                        entity_id: media_player.google_tv
                        state: "unavailable"
            then:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: "Turning Google :tv: TV off."
                  - service: media_player.turn_off
                    data: {}
                    target:
                      entity_id: media_player.google_tv
          - if:
              - not:
                  - or:
                      - condition: state
                        entity_id: media_player.lounge_roku_streaming_stick
                        state: "off"
                      - condition: state
                        entity_id: media_player.lounge_roku_streaming_stick
                        state: "unavailable"
            then:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: "Turning Bedroom Chromecast off."
                  - service: media_player.turn_off
                    data: {}
                    target:
                      entity_id: media_player.lounge_roku_streaming_stick
          - if:
              - not:
                  - or:
                      - condition: state
                        entity_id: media_player.bedroom_chromecast
                        state: "off"
                      - condition: state
                        entity_id: media_player.bedroom_chromecast
                        state: "unavailable"
            then:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: "Turning Bedroom Chromecast off."
                  - service: media_player.turn_off
                    data: {}
                    target:
                      entity_id: media_player.bedroom_chromecast
          - if:
              - not:
                  - or:
                      - condition: state
                        entity_id: media_player.bedroom_roku_streaming_stick
                        state: "off"
                      - condition: state
                        entity_id: media_player.bedroom_roku_streaming_stick
                        state: "unavailable"
            then:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: "Turning Bedroom Chromecast off."
                  - service: media_player.turn_off
                    data: {}
                    target:
                      entity_id: media_player.bedroom_roku_streaming_stick
      - alias: Check if lounge TV is on
        if:
          - condition: state
            entity_id: binary_sensor.tv_powered_on
            state: "on"
        then:
          - parallel:
              - service: script.send_to_home_log
                data:
                  message: "Turning :couch_and_lamp: Lounge :tv: TV off."
              - service: remote.turn_off
                data: {}
                target:
                  entity_id: remote.living_room
      - alias: Check if bedroom TV is on
        if:
          - condition: state
            entity_id: binary_sensor.bedroom_tv_powered_on
            state: "on"
        then:
          - parallel:
              - service: script.send_to_home_log
                data:
                  message: "Turning :bed: Bedroom :tv: TV off."
              - service: remote.send_command
                data:
                  device: Bedroom TV
                  command: power
                target:
                  entity_id: remote.bedroom_remote
    mode: single
  asleep_turn_everything_off:
    alias: Asleep Turn Everything Off
    sequence:
      - alias: Turn off Magic Mirror
        parallel:
          - service: script.send_to_home_log
            data:
              message: ":mirror: Turning off Magic Mirror."
          - service: switch.turn_off
            target:
              entity_id: switch.magic_mirror_screen
      - if:
          - not:
              - or:
                  - condition: state
                    entity_id: media_player.bedroom_chromecast
                    state: "off"
                  - condition: state
                    entity_id: media_player.bedroom_chromecast
                    state: "unavailable"
        then:
          - parallel:
              - service: script.send_to_home_log
                data:
                  message: "Turning Bedroom Chromecast off."
              - service: media_player.turn_off
                data: {}
                target:
                  entity_id: media_player.bedroom_chromecast
      - if:
          - not:
              - or:
                  - condition: state
                    entity_id: media_player.bedroom_roku_streaming_stick
                    state: "off"
                  - condition: state
                    entity_id: media_player.bedroom_roku_streaming_stick
                    state: "unavailable"
        then:
          - parallel:
              - service: script.send_to_home_log
                data:
                  message: "Turning Bedroom Chromecast off."
              - service: media_player.turn_off
                data: {}
                target:
                  entity_id: media_player.bedroom_roku_streaming_stick
      - alias: Check if bedroom TV is on
        if:
          - condition: state
            entity_id: binary_sensor.bedroom_tv_powered_on
            state: "on"
        then:
          - parallel:
              - service: script.send_to_home_log
                data:
                  message: "Turning :bed: Bedroom :tv: TV off."
              - service: remote.send_command
                data:
                  device: Bedroom TV
                  command: power
                target:
                  entity_id: remote.bedroom_remote
    mode: single