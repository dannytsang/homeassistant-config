# Created by Danny Tsang <danny@tsang.uk>
automation:
  - id: "1588609147280"
    alias: "People: Someone Arrives Home"
    description: "Someone is home."
    triggers:
      - trigger: state
        entity_id: group.adult_people
        from: "not_home"
        to: "home"
    conditions:
      - condition: state
        entity_id: alarm_control_panel.house_alarm
        state: "armed_away"
      - condition: state
        entity_id: input_boolean.enable_home_presence_detection
        state: "on"
    actions:
      - parallel:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: alarm_control_panel.house_alarm
                    state: "armed_away"
                  - condition: state
                    entity_id: input_boolean.enable_morning_routine
                    state: "off"
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message: ":house: :running: Someone arrived home."
                      log_level: "Debug"
                  - action: script.set_alarm_to_disarmed_mode
              - conditions:
                  - condition: state
                    entity_id: input_boolean.enable_morning_routine
                    state: "on"
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message: ":house: :running: Someone arrived home before :city_sunrise: sunrise."
                      log_level: "Debug"
                  - action: script.set_alarm_to_disarmed_mode
            default: []
          - choose:
              - conditions:
                  - condition: state
                    entity_id: climate.thermostat
                    state: "off"
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message: Heating is off. Turning heating on.
                      title: ":hotsprings: :droplet: Boiler"
                      log_level: "Debug"
                  - action: script.set_central_heating_to_home_mode
            default: []
    mode: single
  - id: "1655063863297"
    alias: "People: Heading Home"
    description:
      Triggers when someone has been away for long distance and heading back
      home.
    triggers:
      - trigger: numeric_state
        entity_id: sensor.danny_home_nearest_distance
        below: input_number.distance_close_to_home
      - trigger: numeric_state
        entity_id: sensor.terina_home_nearest_distance
        below: input_number.distance_close_to_home
    conditions: []
    actions:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.home_mode
                state: "Holiday"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: sensor.danny_home_nearest_direction_of_travel
                    state: "towards"
                  - condition: state
                    entity_id: sensor.terina_home_nearest_direction_of_travel
                    state: "towards"
            sequence:
              - action: input_text.set_value
                data:
                  value: >-
                    {%- if trigger.entity_id == 'sensor.danny_home_nearest_distance' -%}
                    person.danny
                    {%- elif trigger.entity_id == 'sensor.terina_home_nearest_distance' -%}
                    person.terina
                    {%- endif -%}
                target:
                  entity_id: input_text.origin_address
              - action: input_text.set_value
                data:
                  value: zone.home
                target:
                  entity_id: input_text.destination_address
              - action: homeassistant.update_entity
                data: {}
                target:
                  entity_id: sensor.google_travel_time_by_car
              - action: script.send_to_home_log
                data:
                  message: >-
                    {%- if trigger.entity_id == 'sensor.danny_home_nearest_distance' -%}
                    {{ state_attr('person.danny', 'friendly_name') }}
                    {%- elif trigger.entity_id == 'sensor.terina_home_nearest_distance' -%}
                    {{ state_attr('person.terina', 'friendly_name') }}
                    {%- endif -%} is
                    {{ states('trigger.entity_id', with_unit=True) }} from home and will
                    arrive in {{ states('sensor.google_travel_time_by_car', with_unit=True)
                    }}.
                  log_level: "Debug"
              - if:
                  - condition: state
                    entity_id: input_select.home_mode
                    state: "Holiday"
                then:
                  - parallel:
                      - action: script.send_to_home_log
                        data:
                          message: Changing to normal mode
                          log_level: "Debug"
                      - action: input_select.select_option
                        data:
                          option: Normal
                        target:
                          entity_id: input_select.home_mode
          - conditions:
              - condition: state
                entity_id: input_select.home_mode
                state: "Holiday"
            sequence:
              - action: script.send_direct_notification
                data:
                  message: >-
                    {%- if trigger.entity_id == 'sensor.danny_home_nearest_distance' -%}
                    {{ state_attr('person.danny', 'friendly_name') }}
                    {%- elif trigger.entity_id == 'sensor.terina_home_nearest_distance' -%}
                    {{ state_attr('person.terina', 'friendly_name') }}
                    {%- endif -%} is
                    {{ states('trigger.entity_id', with_unit=True) }} from home and will
                    arrive in {{ states('sensor.google_travel_time_by_car', with_unit=True)
                    }}.
                  people:
                    entity_id:
                      - person.danny
        default: []
    mode: single
  - id: "1680450183660"
    alias: "People: Near Home"
    description: ""
    triggers:
      - trigger: numeric_state
        entity_id: sensor.danny_home_nearest_distance
        below: input_number.distance_almost_to_home
      - trigger: numeric_state
        entity_id: sensor.terina_home_nearest_distance
        below: input_number.distance_almost_to_home
    conditions:
      - or:
          - condition: state
            entity_id: sensor.danny_home_nearest_direction_of_travel
            state: "towards"
          - condition: state
            entity_id: sensor.terina_home_nearest_direction_of_travel
            state: "towards"
      - or:
          - condition: state
            entity_id: person.danny
            state: "home"
          - condition: state
            entity_id: person.terina
            state: "home"
    actions:
      - action: input_text.set_value
        data:
          value: >-
            {% if trigger.entity_id == 'sensor.danny_home_nearest_distance' %}
            person.danny
            {% elif trigger.entity_id == 'sensor.terina_home_nearest_distance'%}
            person.terina
            {% endif %}
        target:
          entity_id: input_text.origin_address
      - action: input_text.set_value
        data:
          value: zone.home
        target:
          entity_id: input_text.destination_address
      - action: homeassistant.update_entity
        data: {}
        target:
          entity_id: sensor.google_travel_time_by_car
      - if:
          - condition: state
            entity_id: person.danny
            state: "home"
        then:
          - action: script.send_to_home_log
            data:
              message: >-
                {% if trigger.entity_id == 'sensor.danny_home_nearest_distance' %}
                {{ state_attr('person.danny', 'friendly_name') }}
                {% elif trigger.entity_id == 'sensor.terina_home_nearest_distance'%}
                {{ state_attr('person.terina', 'friendly_name') }}
                {% endif %} is
                {{ states('trigger.entity_id', with_unit=True) }} from home and will
                arrive in {{ states('sensor.google_travel_time_by_car', with_unit=True)
                }}.
              log_level: "Normal"
              people:
                - person.terina
      - if:
          - condition: state
            entity_id: person.terina
            state: "home"
        then:
          - action: script.send_to_home_log
            data:
              message: >-
                {% if trigger.entity_id == 'sensor.danny_home_nearest_distance' %}
                {{ state_attr('person.danny', 'friendly_name') }}
                {% elif trigger.entity_id == 'sensor.terina_home_nearest_distance'%}
                {{ state_attr('person.terina', 'friendly_name') }}
                {% endif %} is
                {{ states('trigger.entity_id', with_unit=True) }} from home and will
                arrive in {{ states('sensor.google_travel_time_by_car', with_unit=True)
                }}.
              log_level: "Normal"
              people:
                - person.danny
    mode: single
  #region Leaving Home
  - id: "1595524992207"
    alias: "People: No One Home"
    description: ""
    triggers:
      - trigger: state
        entity_id: group.adult_people
        for: 00:01:00
        to: "not_home"
    conditions:
      - condition: state
        entity_id: input_boolean.enable_home_presence_detection
        state: "on"
      - not:
          - condition: state
            entity_id: device_tracker.udm_pro
            state: "unavailable"
    actions:
      - parallel:
          - action: script.lock_house
          - action: script.3d_printer_left_unattended
          - action: calendar.get_events
            target:
              entity_id:
                - calendar.tsang_children
                - calendar.family
            data:
              start_date_time: "{{ as_timestamp(now())|timestamp_custom('%Y-%m-%d %H:%M:%S') }}"
              duration:
                hours: 1
                minutes: 0
                seconds: 0
            response_variable: calendar
          - alias: Check if there's a family calendar event.
            choose:
              - conditions:
                  - condition: template
                    value_template: "{{ calendar['calendar.family'].events | count > 0 }}"
                  - condition: template
                    value_template: "{{ calendar['calendar.family'].events[0].location is not defined }}"
                sequence:
                  - action: script.send_direct_notification
                    data:
                      message: >-
                        No one home and there's a family event on:

                        Name: {{ calendar['calendar.family'].events[0].summary }}

                        Location: {{ calendar['calendar.family'].events[0].location | default('', true) }}

                        Start Time: {{ calendar['calendar.family'].events[0].start }}

                        End Time: {{ calendar['calendar.family'].events[0].end }}
                      people:
                        entity_id:
                          - person.danny
            default: []
          - alias: Check if there's a children calendar event.
            choose:
              - conditions:
                  - condition: template
                    value_template: "{{ calendar['calendar.family'].events | count > 0 }}"
                sequence:
                  - action: script.send_direct_notification
                    data:
                      message: >-
                        No one home and there's a childrens' event on:

                        Name: {{ calendar['calendar.tsang_children'].events[0].summary }}

                        Location: {{ calendar['calendar.tsang_children'].events[0].location | default('', true) }}

                        Start Time: {{ calendar['calendar.tsang_children'].events[0].start }}

                        End Time: {{ calendar['calendar.tsang_children'].events[0].end }}
                      people:
                        entity_id:
                          - person.danny
            default: []
  - id: "1655063863296"
    alias: "People: Long Distance Away From Home"
    description: ""
    triggers:
      - trigger: numeric_state
        entity_id: sensor.danny_home_nearest_distance
        above: input_number.long_distance_away_from_home
      - trigger: numeric_state
        entity_id: sensor.terina_home_nearest_distance
        above: input_number.long_distance_away_from_home
    conditions: []
    actions:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.terina_home_nearest_distance
                above: input_number.long_distance_away_from_home
              - condition: numeric_state
                entity_id: sensor.danny_home_nearest_distance
                above: input_number.long_distance_away_from_home
            sequence:
              - parallel:
                  - action: script.send_to_home_log
                    data:
                      message: Everyone is far away from home.
                      log_level: "Normal"
                  - if:
                      - condition: not
                        conditions:
                          - condition: state
                            entity_id: input_select.home_mode
                            state: "Holiday"
                    then:
                      - parallel:
                          - action: script.send_to_home_log
                            data:
                              message: Changing to holiday mode.
                              title: Home Mode
                              log_level: "Normal"
                          - action: input_select.select_option
                            data:
                              option: Holiday
                            target:
                              entity_id: input_select.home_mode
        default: []
    mode: queued
    max: 10
  #endregion
  #region Danny
  - id: "1674735382445"
    alias: "People: Danny Arriving Home"
    description: "Heading towards home and very close."
    triggers:
      - trigger: numeric_state
        entity_id: sensor.danny_home_nearest_distance
        below: input_number.arriving_home_threshold
    conditions:
      - condition: state
        entity_id: input_boolean.enable_alarm_automations
        state: "on"
      - condition: state
        entity_id: alarm_control_panel.house_alarm
        state: "armed_home"
      - condition: state
        entity_id: sensor.danny_home_nearest_direction_of_travel
        state: "towards"
    actions:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: Danny is arriving home. Turning alarm off.
              title: ":man: Danny"
              log_level: "Normal"
          - action: script.set_alarm_to_disarmed_mode
    mode: single
  - id: "1581867286886"
    alias: "People: Danny Arrives Home"
    description: "At Home."
    triggers:
      - trigger: state
        entity_id: person.danny
        from: "not_home"
        to: "home"
    conditions:
      - condition: state
        entity_id: input_boolean.enable_home_presence_detection
        state: "on"
    actions:
      - parallel:
          - if:
              - condition: state
                entity_id: light.living_room_lamps
                state: "off"
            then:
              - action: script.front_door_lock_status
                data: {}
          - action: script.send_to_home_log
            data:
              message: >-
                :house: :running: Arrived home and it's dark.
                Turning Lounge and kitchen ambient lights on.
              title: ":man: Danny"
              log_level: "Normal"
          - action: script.announce_delayed_notifications
            data:
              people:
                - person.danny
              test: false
    mode: single
  - id: "1582456019025"
    alias: "People: Danny Leaves Home"
    description: ""
    triggers:
      - trigger: state
        entity_id: person.danny
        from: "home"
        to: "not_home"
    conditions:
      - condition: state
        entity_id: person.terina
        state: "not_home"
    actions:
      - parallel:
          - action: scene.turn_on
            target:
              entity_id:
                - scene.turn_off_downstairs_lights
                - scene.office_all_lights_off
          - action: script.send_to_home_log
            data:
              message:
                ":running: :house: Danny has left the house and no one is home. Turning
                off lights."
              title: ":man: Danny"
              log_level: "Normal"
  #endregion
  #region Terina
  - id: "1674735382446"
    alias: "People: Terina Arriving Home"
    description: "Heading towards home and very close."
    triggers:
      - trigger: numeric_state
        entity_id: sensor.terina_home_nearest_distance
        below: input_number.arriving_home_threshold
    conditions:
      - condition: state
        entity_id: input_boolean.enable_alarm_automations
        state: "on"
      - condition: state
        entity_id: alarm_control_panel.house_alarm
        state: "armed_home"
      - condition: state
        entity_id: sensor.danny_home_nearest_direction_of_travel
        state: "towards"
    actions:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: Terina is arriving home. Turning alarm off.
              title: ":woman: Terina"
              log_level: "Normal"
          - action: script.set_alarm_to_disarmed_mode
    mode: single
  - id: "1582754128581"
    alias: "People: Terina Arrives Home"
    description: "At Home."
    triggers:
      - trigger: state
        entity_id: person.terina
        from: "not_home"
        to: "home"
    conditions:
      - condition: numeric_state
        entity_id: sensor.living_room_motion_2_illuminance_lux
        below: "55"
    actions:
      - parallel:
          - if:
              - condition: state
                entity_id: light.living_room_lamps
                state: "off"
            then:
              - action: script.front_door_lock_status
                data: {}
          - action: script.send_to_home_log
            data:
              message: >-
                :dancer: :house: :bulb: Arrived home and it's dark.
                Turning Lounge and kitchen ambient lights on.
              title: ":woman: Terina"
              log_level: "Normal"
          - action: script.announce_delayed_notifications
            data:
              people:
                - person.terina
              test: false
  - id: "1582456025977"
    alias: "People: Terina Leaves Home"
    description: "Heading towards home and very close."
    triggers:
      - trigger: state
        entity_id: person.terina
        from: "home"
        to: "not_home"
    conditions:
      - condition: state
        entity_id: person.danny
        state: "not_home"
    actions:
      - action: scene.turn_on
        target:
          entity_id:
            - scene.turn_off_downstairs_lights
            - scene.office_all_lights_off
      - action: script.send_to_home_log
        data:
          message: ":house: :dancer: Left the house and no one is home."
          title: ":woman: Terina"
          log_level: "Normal"
  #endregion
  #region Children
  - id: "1712574983598"
    alias: "People: Children Home And In No Children Mode"
    description: ""
    triggers:
      - trigger: state
        entity_id:
          - device_tracker.leos_nintendo_switch
        to: home
        from: not_home
    conditions: []
    actions:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.home_mode
                state: No Children
            sequence:
              - parallel:
                  - action: script.send_to_home_log
                    metadata: {}
                    data:
                      log_level: Debug
                      message:
                        Leo's Nintendo Switch came home and in No Children mode. Switching
                        to Normal.
                      title: People
                  - action: input_select.select_option
                    metadata: {}
                    data:
                      option: Normal
                    target:
                      entity_id: input_select.home_mode
    mode: single
  #endregion
  - id: "1722162099476"
    alias: "People: Music Follow Danny"
    description: ""
    triggers:
      - trigger: state
        entity_id:
          - sensor.dannys_phone_ble_area
        not_to: unknown
    conditions:
      - condition: state
        entity_id: media_player.spotify_danny
        state: playing
    actions:
      - variables:
          target_source: "{{ states('sensor.dannys_phone_ble_area') }}"
          adjusted_source: >-
            {%- if target_source|lower == 'office' and states('group.jd_computer') == 'home' -%}
            JD
            {%- elif target_source|lower == 'office' -%}
            Office Echo Show
            {%- elif target_source|lower == 'living room' -%}
            DO NOT CAST
            {%- else -%}
            {{ target_source }}
            {%- endif -%}
        continue_on_error: true
      - if:
          - condition: template
            value_template: "{{ adjusted_source|lower != state_attr('media_player.spotify_danny', 'source')|lower }}"
          - condition: template
            value_template: "{{ adjusted_source|lower in state_attr('media_player.spotify_danny', 'source_list')|lower }}"
        then:
          - action: media_player.select_source
            data:
              source: "{{ adjusted_source }}"
            target:
              entity_id: media_player.spotify_danny
    mode: single

group:
  adult_people:
    name: Adults
    icon: mdi:account-multiple
    entities:
      - person.danny
      - person.terina
  all_people:
    name: Anyone Home
    icon: mdi:account-group
    entities:
      - person.danny
      - person.terina
      - person.leo
      - person.ashlee
  children_people:
    name: Children
    icon: mdi:account-multiple
    entities:
      - person.leo
      - person.ashlee
  dannys_work_computer:
    name: Danny's Work Computers
    icon: mdi:laptop
    entities:
      - device_tracker.laptop_5h1t10r6
      - device_tracker.laptop_5h1t10r6_2
  family_computer:
    name: Family Computer
    icon: mdi:desktop-classic
    entities:
      - device_tracker.doug
  jd_computer:
    name: JD Computer
    icon: mdi:desktop-classic
    entities:
      - device_tracker.jd
  sam_computer:
    name: Sam Computer
    icon: mdi:laptop
    entities:
      - device_tracker.sam
      - device_tracker.sam_2
  terinas_work_computer:
    name: Terina's Work Computers
    icon: mdi:laptop
    entities:
      - device_tracker.lap_ctc1404
  turk_computer:
    name: Turk Computer
    icon: mdi:server
    entities:
      - device_tracker.turk

script:
  everybody_leave_home:
    alias: Everybody Leave Home
    sequence:
      - action: script.send_to_home_log
        data:
          message:
            ":running: :house: :dancer: Everyone has left the house. Running the
            following:"
          log_level: "Debug"
      - action: script.turn_everything_off
    mode: single
  front_door_lock_status:
    alias: Front Door Lock Status
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: lock.unified_front_door
                state: locked
            sequence:
              - action: scene.turn_on
                target:
                  entity_id: scene.porch_red_light
          - conditions:
              - condition: state
                entity_id: lock.unified_front_door
                state: unlocked
            sequence:
              - action: scene.turn_on
                target:
                  entity_id: scene.porch_light_green
          - conditions:
              - or:
                  - condition: state
                    entity_id: lock.unified_front_door
                    state: unlocking
                  - condition: state
                    entity_id: lock.unified_front_door
                    state: locking
            sequence:
              - action: scene.turn_on
                target:
                  entity_id: scene.porch_blue_light
    mode: single
  check_terinas_work_laptop_status:
    alias: Check If Terina's Work Laptop Status
    sequence:
      - action: script.send_to_home_log
        data:
          message: "Checking Terina's :briefcase: work :computer: laptop status."
          log_level: "Debug"
      - if:
          - condition: state
            entity_id: group.terinas_work_computer
            state: "home"
        then:
          - action: script.terinas_work_laptop_turned_on
            data: {}
        else:
          - action: script.terinas_work_laptop_turned_off
            data: {}
    mode: single
    icon: mdi:laptop
  terinas_work_laptop_turned_off:
    alias: People Terina's Work Laptop Turned Off
    sequence:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: Setting higher threshold for lounge lights 30 and 25 respectively.
              log_level: "Debug"
          - action: input_number.set_value
            data:
              value: 30
            target:
              entity_id: input_number.living_room_light_level_2_threshold
          - action: input_number.set_value
            data:
              value: 25
            target:
              entity_id: input_number.living_room_light_level_4_threshold
    mode: single
    icon: mdi:laptop-off
  terinas_work_laptop_turned_on:
    alias: People Terina's Work Laptop Turned On
    sequence:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: Setting lower threshold for lounge lights 81 and 65 respectively.
              log_level: "Debug"
          - action: input_number.set_value
            data:
              value: 81
            target:
              entity_id: input_number.living_room_light_level_2_threshold
          - action: input_number.set_value
            data:
              value: 65
            target:
              entity_id: input_number.living_room_light_level_4_threshold
    mode: single
    icon: mdi:laptop
  get_peope_in_group_by_status:
    alias: Get people in group by state
    description: >-
      Returns a list of people in a group with the chosen status.

      Returns data in id:entity_id format. E.g. danny:person.danny
    fields:
      group_id:
        description: group of people to check.
        required: true
        selector:
          target:
            entity:
              - domain: group
      status:
        description: status to find.
        example: home
        required: true
        selector:
          text:
    variables:
      persons: >-
        {%- set people = namespace(home=[]) -%}
        {%- for p in state_attr(group_id, 'entity_id')|default([]) -%}
          {%- if states(p) == status|default('') -%}
            {%- set people.home = people.home + [p] -%}
          {%- endif -%}
        {%- endfor -%}
        {
          {%- for p in people.home -%}
          "{{ state_attr(p, 'id') }}":"{{ p }}"
          {% if not loop.last %},{% endif %}
          {%- endfor -%}
        }
    sequence:
      - stop: "Stop running the rest of the sequence"
        response_variable: "persons"
    mode: single
    icon: mdi:account-multiple

template:
  - sensor:
      - name: "Destination Address"
        unique_id: "f01b1d6b-9bbd-4261-945b-581d864eb4a4"
        icon: mdi:map-marker
        state: "{{ states('input_text.destination_address') }}"
  - sensor:
      - name: "Origin Address"
        unique_id: "71c7a6cb-f480-4835-aed7-6e05a8c53dfe"
        icon: mdi:map-marker-outline
        state: "{{ states('input_text.origin_address') }}"
