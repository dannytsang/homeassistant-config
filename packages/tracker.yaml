# Created by Danny Tsang <danny@tsang.uk>
automation:
  - id: "1588609147280"
    alias: "People: Someone Arrives Home"
    description: "Someone is home."
    trigger:
      - entity_id: group.adult_people
        from: "not_home"
        platform: state
        to: "home"
    condition:
      - condition: state
        entity_id: alarm_control_panel.house_alarm
        state: "armed_away"
      - condition: state
        entity_id: input_boolean.enable_home_presence_detection
        state: "on"
    action:
      - parallel:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: alarm_control_panel.house_alarm
                    state: "armed_away"
                  - condition: state
                    entity_id: input_boolean.enable_morning_routine
                    state: "off"
                sequence:
                  - service: script.send_to_home_log
                    data:
                      message: ":house: :running: Someone arrived home."
                      log_level: "Debug"
                  - service: script.set_alarm_to_disarmed_mode
                  - service: script.lounge_turn_off_camera
              - conditions:
                  - condition: state
                    entity_id: input_boolean.enable_morning_routine
                    state: "on"
                sequence:
                  - service: script.send_to_home_log
                    data:
                      message: ":house: :running: Someone arrived home before :city_sunrise: sunrise."
                      log_level: "Debug"
                  - service: script.set_alarm_to_disarmed_mode
                  - service: script.send_to_home_log
                    data:
                      message: "Turning on downstairs :camera_with_flash: cameras."
                      log_level: "Debug"
                  - service: script.lounge_turn_on_camera
                  - service: script.front_garden_turn_on_camera
            default: []
          - choose:
              - conditions:
                  - condition: state
                    entity_id: climate.thermostat
                    state: "off"
                sequence:
                  - service: script.send_to_home_log
                    data:
                      message: Heating is off. Turning heating on.
                      title: ":hotsprings: :droplet: Boiler"
                      log_level: "Debug"
                  - service: script.set_central_heating_to_home_mode
            default: []
    mode: single
  - id: "1655063863297"
    alias: "People: Heading Home"
    description:
      Triggers when someone has been away for long distance and heading back
      home.
    trigger:
      - platform: numeric_state
        entity_id: proximity.danny_home
        below: input_number.distance_close_to_home
      - platform: numeric_state
        entity_id: proximity.terina_home
        below: input_number.distance_close_to_home
    condition: []
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.home_mode
                state: "Holiday"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: proximity.danny_home
                    attribute: dir_of_travel
                    state: "towards"
                  - condition: state
                    entity_id: proximity.terina_home
                    attribute: dir_of_travel
                    state: "towards"
            sequence:
              - service: input_text.set_value
                data:
                  value: >-
                    {%- if trigger.entity_id == 'proximity.danny_home' -%}
                    person.danny
                    {%- elif trigger.entity_id == 'proximity.terina_home' -%}
                    person.terina
                    {%- endif -%}
                target:
                  entity_id: input_text.origin_address
              - service: input_text.set_value
                data:
                  value: zone.home
                target:
                  entity_id: input_text.destination_address
              - service: homeassistant.update_entity
                data: {}
                target:
                  entity_id: sensor.google_travel_time_by_car
              - service: script.send_to_home_log
                data:
                  message: >-
                    {%- if trigger.entity_id == 'proximity.danny_home' -%}
                    {{ state_attr('person.danny', 'friendly_name') }}
                    {%- elif trigger.entity_id == 'proximity.terina_home' -%}
                    {{ state_attr('person.terina', 'friendly_name') }}
                    {%- endif -%} is
                    {{ states('trigger.entity_id', with_unit=True) }} from home and will
                    arrive in {{ states('sensor.google_travel_time_by_car', with_unit=True)
                    }}.
                  log_level: "Debug"
              - if:
                  - condition: state
                    entity_id: input_select.home_mode
                    state: "Holiday"
                then:
                  - parallel:
                      - service: script.send_to_home_log
                        data:
                          message: Changing to normal mode
                          log_level: "Debug"
                      - service: input_select.select_option
                        data:
                          option: Normal
                        target:
                          entity_id: input_select.home_mode
          - conditions:
              - condition: state
                entity_id: input_select.home_mode
                state: "Holiday"
            sequence:
              - service: script.send_direct_notification
                data:
                  message: >-
                    {%- if trigger.entity_id == 'proximity.danny_home' -%}
                    {{ state_attr('person.danny', 'friendly_name') }}
                    {%- elif trigger.entity_id == 'proximity.terina_home' -%}
                    {{ state_attr('person.terina', 'friendly_name') }}
                    {%- endif -%} is
                    {{ states('trigger.entity_id', with_unit=True) }} from home and will
                    arrive in {{ states('sensor.google_travel_time_by_car', with_unit=True)
                    }}.
                  people:
                    entity_id:
                      - person.danny
        default: []
    mode: single
  - id: "1680450183660"
    alias: "People: Near Home"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: proximity.danny_home
        below: input_number.distance_almost_to_home
      - platform: numeric_state
        entity_id: proximity.terina_home
        below: input_number.distance_almost_to_home
    condition:
      - or:
          - condition: state
            entity_id: proximity.danny_home
            attribute: dir_of_travel
            state: "towards"
          - condition: state
            entity_id: proximity.terina_home
            attribute: dir_of_travel
            state: "towards"
      - or:
          - condition: state
            entity_id: person.danny
            state: "home"
          - condition: state
            entity_id: person.terina
            state: "home"
    action:
      - service: input_text.set_value
        data:
          value: >-
            {% if trigger.entity_id == 'proximity.danny_home' %}
            person.danny
            {% elif trigger.entity_id == 'proximity.terina_home'%}
            person.terina
            {% endif %}
        target:
          entity_id: input_text.origin_address
      - service: input_text.set_value
        data:
          value: zone.home
        target:
          entity_id: input_text.destination_address
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id: sensor.google_travel_time_by_car
      - if:
          - condition: state
            entity_id: person.danny
            state: "home"
        then:
          - service: script.send_to_home_log
            data:
              message: >-
                {% if trigger.entity_id == 'proximity.danny_home' %}
                {{ state_attr('person.danny', 'friendly_name') }}
                {% elif trigger.entity_id == 'proximity.terina_home'%}
                {{ state_attr('person.terina', 'friendly_name') }}
                {% endif %} is
                {{ states('trigger.entity_id', with_unit=True) }} from home and will
                arrive in {{ states('sensor.google_travel_time_by_car', with_unit=True)
                }}.
              log_level: "Normal"
              people:
                - person.terina
      - if:
          - condition: state
            entity_id: person.terina
            state: "home"
        then:
          - service: script.send_to_home_log
            data:
              message: >-
                {% if trigger.entity_id == 'proximity.danny_home' %}
                {{ state_attr('person.danny', 'friendly_name') }}
                {% elif trigger.entity_id == 'proximity.terina_home'%}
                {{ state_attr('person.terina', 'friendly_name') }}
                {% endif %} is
                {{ states('trigger.entity_id', with_unit=True) }} from home and will
                arrive in {{ states('sensor.google_travel_time_by_car', with_unit=True)
                }}.
              log_level: "Normal"
              people:
                - person.danny
    mode: single
  # Leaving Home
  - id: "1595524992208"
    alias: "People: No One Home And Locked"
    description: ""
    trigger:
      - entity_id: group.adult_people
        for: 00:02:00
        platform: state
        to: "not_home"
    condition:
      - condition: state
        entity_id: input_boolean.enable_home_presence_detection
        state: "on"
      - condition: state
        entity_id: binary_sensor.alarmed_doors_and_windows
        state: "off"
      - not:
          - condition: state
            entity_id: device_tracker.udm_pro
            state: "unavailable"
    action:
      - parallel:
          - alias: Set home in away mode
            choose:
              - conditions:
                  - condition: state
                    entity_id: input_select.home_mode
                    state: "Guest"
                  - condition: state
                    entity_id: input_boolean.enable_direct_notifications
                    state: "on"
                sequence:
                  - parallel:
                      - service: script.send_to_home_log
                        data:
                          message: ":warning: Guest mode is active and no one is home."
                          log_level: "Normal"
                      - service: notify.mobile_app_danny_s_phone
                        data:
                          message: Guest mode is on. Do you want to turn on the alarm?
                          title: No One Home In Guest Mode
                          data:
                            actions:
                              - title: Alarm On & Turn Off Devices
                                action: guest_mode_arm_alarm_and_turn_off_devices
                              - title: Alarm On Only
                                action: guest_mode_arm_alarm_away
                              - title: Turn Off Devices Only
                                action: guest_mode_turn_off_devices
                      - service: notify.mobile_app_terina_s_phone
                        data:
                          message: Guest mode is on. Do you want to turn on the alarm?
                          title: No One Home In Guest Mode
                          data:
                            actions:
                              - title: Alarm On & Turn Off Devices
                                action: guest_mode_arm_alarm_and_turn_off_devices
                              - title: Alarm On Only
                                action: guest_mode_arm_alarm_away
                              - title: Turn Off Devices Only
                                action: guest_mode_turn_off_devices
              - conditions:
                  - condition: state
                    entity_id: group.family_computer
                    state: "home"
                  - condition: state
                    entity_id: input_boolean.enable_direct_notifications
                    state: "on"
                sequence:
                  - parallel:
                      - service: script.send_to_home_log
                        data:
                          message: ":warning: Family :computer: computer is on."
                          log_level: "Normal"
                      - service: notify.mobile_app_danny_s_phone
                        data:
                          message: Family computer is on. Do you want to turn on the alarm?
                          title: No One Home Family Computer On
                          data:
                            actions:
                              - title: Alarm On & Turn Off Devices
                                action: guest_mode_arm_alarm_and_turn_off_devices
                              - title: Alarm On Only
                                action: guest_mode_arm_alarm_away
                              - title: Turn Off Devices Only
                                action: guest_mode_turn_off_devices
                      - service: notify.mobile_app_terina_s_phone
                        data:
                          message: Family computer is on. Do you want to turn on the alarm?
                          title: No One Home Family Computer On
                          data:
                            actions:
                              - title: Alarm On & Turn Off Devices
                                action: guest_mode_arm_alarm_and_turn_off_devices
                              - title: Alarm On Only
                                action: guest_mode_arm_alarm_away
                              - title: Turn Off Devices Only
                                action: guest_mode_turn_off_devices
            default:
              - service: script.set_alarm_to_away_mode
              - service: script.lock_front_door
              - choose:
                  - conditions:
                      - condition: state
                        entity_id: binary_sensor.external_doors_and_windows
                        state: "on"
                    sequence:
                      - service: script.send_direct_notification
                        data:
                          message:
                            ":information_source: :door: :window: :bell: Alarm was turned on.
                            The following entrances are still open:\n {% for entity in state_attr('binary_sensor.external_doors_and_windows','entity_id')
                            %}{% if states(entity) == 'on' %}{{ '* ' ~ state_attr(entity, 'friendly_name')
                            }} {% endif %}{% endfor %}\n"
                          title: ":bell: Alarm"
                default:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.enable_direct_notifications
                            state: "on"
                        sequence:
                          - service: script.send_actionable_notification_with_3_buttons
                            data:
                              message: Alarm armed and turning off devices.
                              title: No One Home
                              people:
                                - person.danny
                                - person.terina
                              action1_title: "Disarm"
                              action1_name: disarm
                              action2_title: "Devices On"
                              action2_name: leave_on
                              action3_title: "Disarm & Leave On"
                              action3_name: disarm_leave_on
                          - wait_for_trigger:
                              - platform: event
                                event_type: mobile_app_notification_action
                            timeout: "300"
                            continue_on_timeout: true
                          - choose:
                              - conditions:
                                  - condition: template
                                    value_template: "{{ wait.trigger.event.data.action == 'disarm' }}"
                                sequence:
                                  - service: script.set_alarm_to_disarmed_mode
                              - conditions:
                                  - condition: template
                                    value_template:
                                      "{{ wait.trigger.event.data.action == 'leave_on'
                                      }}"
                                sequence:
                                  - service: script.send_to_home_log
                                    data:
                                      message: Leaving devices on.
                                      log_level: "Normal"
                              - conditions:
                                  - condition: template
                                    value_template:
                                      "{{ wait.trigger.event.data.action == 'disarm_leave_on'
                                      }}"
                                sequence:
                                  - parallel:
                                      - service: script.set_alarm_to_disarmed_mode
                                      - service: script.send_to_home_log
                                        data:
                                          message: Skipping turning off devices.
                                          log_level: "Normal"
                            default:
                              - service: script.everybody_leave_home
                    default:
                      - service: script.everybody_leave_home
          - service: script.3d_printer_left_unattended

          - alias: Check if there's a family calendar event.
            choose:
              - conditions:
                  - condition: template
                    value_template: "{{ now() > strptime(states('sensor.next_family_calendar_event_start_date'), '%Y-%m-%dT%H:%M:%S%z', now()) }}"
                  - condition: template
                    value_template: "{{ now() < strptime(states('sensor.next_family_calendar_event_end_date'), '%Y-%m-%dT%H:%M:%S%z', now()) }}"
                sequence:
                  - service: script.send_direct_notification
                    data:
                      message: >-
                        No one home and there's a family event on:

                        Name: {{ states('sensor.next_family_calendar_event_name') }}

                        All Day: {{ states('sensor.next_family_calendar_event_all_day') }}

                        Location: {{ states('sensor.next_family_calendar_event_location') }}

                        Start Time: {{ states('sensor.next_family_calendar_event_start_date') }}

                        End Time: {{ states('sensor.next_family_calendar_event_end_date') }}
                      people:
                        entity_id:
                          - person.danny
            default: []
          - alias: Check if there's a children calendar event.
            choose:
              - conditions:
                  - condition: template
                    value_template: "{{ now()|as_timestamp > strptime(states('sensor.next_children_calendar_event_start_date'), '%Y-%m-%dT%H:%M:%S%z', now()) }}"
                  - condition: template
                    value_template: "{{ now()|as_timestamp < strptime(states('sensor.next_children_calendar_event_end_date'), '%Y-%m-%dT%H:%M:%S%z', now()) }}"
                sequence:
                  - service: script.send_direct_notification
                    data:
                      message: >-
                        No one home and there's a childrens' event on:

                        Name: {{ states('sensor.next_children_calendar_event_name') }}

                        All Day: {{ states('sensor.next_children_calendar_event_all_day') }}

                        Location: {{ states('sensor.next_children_calendar_event_location') }}

                        Start Time: {{ states('sensor.next_children_calendar_event_start_date') }}

                        End Time: {{ states('sensor.next_children_calendar_event_end_date') }}
                      people:
                        entity_id:
                          - person.danny
            default: []
    mode: single
  - id: "1594554327310"
    alias: "People: No One Home And House Is Not Locked"
    description: ""
    trigger:
      - entity_id: group.adult_people
        for: 00:02:00
        platform: state
        to: "not_home"
    condition:
      - not:
          - condition: state
            entity_id: device_tracker.udm_pro
            state: "unavailable"
      - condition: state
        entity_id: binary_sensor.alarmed_doors_and_windows
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_home_presence_detection
        state: "on"
    action:
      - parallel:
          - choose:
              - conditions:
                  - not:
                      - condition: state
                        entity_id: input_select.home_mode
                        state: "Guest"
                sequence:
                  - service: script.send_direct_notification
                    data:
                      message:
                        "No one is home and couldn't turn on the alarm because
                        the following entrances are still open:
                        {% for entity in state_attr('binary_sensor.alarmed_doors_and_windows','entity_id')
                        %}{% if states(entity) == 'on' %}{{ '\n* ' ~ state_attr(entity, 'friendly_name')
                        }} {% endif %}{% endfor %}"
                      title: ":warning: :bell: Alarm :warning:"
                      people:
                        entity_id:
                          - person.danny
                          - person.terina
            default: []
      - service: script.3d_printer_left_unattended
    mode: single
  - id: "1655063863296"
    alias: "People: Long Distance Away From Home"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: proximity.danny_home
        above: input_number.long_distance_away_from_home
      - platform: numeric_state
        entity_id: proximity.terina_home
        above: input_number.long_distance_away_from_home
    condition: []
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: proximity.terina_home
                above: input_number.long_distance_away_from_home
              - condition: numeric_state
                entity_id: proximity.danny_home
                above: input_number.long_distance_away_from_home
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: Everyone is far away from home.
                      log_level: "Normal"
                  - if:
                      - condition: not
                        conditions:
                          - condition: state
                            entity_id: input_select.home_mode
                            state: "Holiday"
                    then:
                      - parallel:
                          - service: script.send_to_home_log
                            data:
                              message: Changing to holiday mode.
                              title: Home Mode
                              log_level: "Normal"
                          - service: input_select.select_option
                            data:
                              option: Holiday
                            target:
                              entity_id: input_select.home_mode
        default: []
    mode: queued
    max: 10
  # Danny
  - id: "1674735382445"
    alias: "People: Danny Arriving Home"
    description: "Heading towards home and very close."
    trigger:
      - platform: numeric_state
        entity_id: proximity.danny_home
        below: input_number.arriving_home_threshold
    condition:
      - condition: state
        entity_id: input_boolean.enable_alarm_automations
        state: "on"
      - condition: state
        entity_id: alarm_control_panel.house_alarm
        state: "armed_home"
      - condition: state
        entity_id: proximity.danny_home
        attribute: dir_of_travel
        state: "towards"
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: Danny is arriving home. Turning alarm off.
              title: ":man: Danny"
              log_level: "Normal"
          - service: script.set_alarm_to_disarmed_mode
    mode: single
  - id: "1581867286886"
    alias: "People: Danny Arrives Home"
    description: "At Home."
    trigger:
      - entity_id: person.danny
        from: "not_home"
        platform: state
        to: "home"
    condition:
      - condition: state
        entity_id: input_boolean.enable_home_presence_detection
        state: "on"
    action:
      - parallel:
          - if:
              - condition: state
                entity_id: light.lounge_lamps
                state: "off"
            then:
              - service: script.front_door_lock_status
                data: {}
          - if:
              - condition: state
                entity_id: light.kitchen_side_lights
                state: "off"
            then:
              - service: scene.turn_on
                target:
                  entity_id:
                    - scene.kitchen_accent_lights_on
          - service: script.send_to_home_log
            data:
              message: >-
                :house: :running: Arrived home and it's dark.
                Turning Lounge and kitchen ambient lights on.
              title: ":man: Danny"
              log_level: "Normal"
    mode: single
  - id: "1582456019025"
    alias: "People: Danny Leaves Home"
    description: ""
    trigger:
      - entity_id: person.danny
        from: "home"
        platform: state
        to: "not_home"
    condition:
      - condition: state
        entity_id: person.terina
        state: "not_home"
    action:
      - service: scene.turn_on
        target:
          entity_id:
            - scene.turn_off_downstairs_lights
            - scene.office_all_lights_off
      - service: script.send_to_home_log
        data:
          message:
            ":running: :house: Danny has left the house and no one is home. Turning
            off lights."
          title: ":man: Danny"
          log_level: "Normal"
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.update_dannys_car
      - service: timer.start
        data: {}
        target:
          entity_id: timer.update_dannys_car
  # Terina
  - id: "1674735382446"
    alias: "People: Terina Arriving Home"
    description: "Heading towards home and very close."
    trigger:
      - platform: numeric_state
        entity_id: proximity.terina_home
        below: input_number.arriving_home_threshold
    condition:
      - condition: state
        entity_id: input_boolean.enable_alarm_automations
        state: "on"
      - condition: state
        entity_id: alarm_control_panel.house_alarm
        state: "armed_home"
      - condition: state
        entity_id: proximity.danny_home
        attribute: dir_of_travel
        state: "towards"
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: Terina is arriving home. Turning alarm off.
              title: ":woman: Terina"
              log_level: "Normal"
          - service: script.set_alarm_to_disarmed_mode
    mode: single
  - id: "1582754128581"
    alias: "People: Terina Arrives Home"
    description: "At Home."
    trigger:
      - entity_id: person.terina
        from: "not_home"
        platform: state
        to: "home"
    condition:
      - condition: numeric_state
        entity_id: sensor.lounge_motion_2_illuminance_lux
        below: "55"
    action:
      - parallel:
          - if:
              - condition: state
                entity_id: light.lounge_lamps
                state: "off"
            then:
              - service: script.front_door_lock_status
                data: {}
          - if:
              - condition: state
                entity_id: light.kitchen_side_lights
                state: "off"
            then:
              - service: scene.turn_on
                target:
                  entity_id:
                    - scene.kitchen_accent_lights_on
          - service: script.send_to_home_log
            data:
              message: >-
                :dancer: :house: :bulb: Arrived home and it's dark.
                Turning Lounge and kitchen ambient lights on.
              title: ":woman: Terina"
              log_level: "Normal"
  - id: "1582456025977"
    alias: "People: Terina Leaves Home"
    description: "Heading towards home and very close."
    trigger:
      - entity_id: person.terina
        from: "home"
        platform: state
        to: "not_home"
    condition:
      - condition: state
        entity_id: person.danny
        state: "not_home"
    action:
      - service: scene.turn_on
        target:
          entity_id:
            - scene.turn_off_downstairs_lights
            - scene.office_all_lights_off
      - service: script.send_to_home_log
        data:
          message: ":house: :dancer: Left the house and no one is home."
          title: ":woman: Terina"
          log_level: "Normal"
  - id: "1681895229515"
    alias: "Person: Terina Working From Home"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - person.terina
        to: "home"
        for:
          hours: 0
          minutes: 1
          seconds: 0
    condition:
      - condition: time
        weekday:
          - fri
          - thu
          - wed
          - tue
          - mon
        after: 08:30:00
      - condition: time
        before: "14:30:00"
        weekday:
          - fri
          - thu
          - wed
          - tue
          - mon
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message:
                Looks like Terina is working from home. Changing to Terina Working
                from home schedule
              log_level: "Debug"
          - service: switch.turn_off
            data: {}
            target:
              entity_id: switch.schedule_heating_for_{{ now().timestamp() | timestamp_custom('%A') | lower }}
          - service: switch.turn_on
            data: {}
            target:
              entity_id: switch.schedule_terina_working_from_home
    mode: single
  - id: "1681895332881"
    alias: "Person: Terina Working From Home And Left"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - person.terina
        to: "not_home"
        for:
          hours: 0
          minutes: 1
          seconds: 0
    condition:
      - condition: state
        entity_id: switch.schedule_terina_working_from_home
        state: "on"
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: Turning off Terina working from home heating schedule
              log_level: "Debug"
          - sequence:
              - service: switch.turn_off
                data: {}
                target:
                  entity_id: switch.schedule_terina_working_from_home
              - service: script.check_and_run_central_heating
                data: {}
    mode: single

group:
  adult_people:
    name: Adults
    icon: mdi:account-multiple
    entities:
      - person.danny
      - person.terina
  all_people:
    name: Anyone Home
    icon: mdi:account-group
    entities:
      - person.danny
      - person.terina
      - person.leo
      - person.ashlee
  children_people:
    name: Children
    icon: mdi:account-multiple
    entities:
      - person.leo
      - person.ashlee
  dannys_work_computer:
    name: Danny's Work Computers
    icon: mdi:laptop
    entities:
      - device_tracker.laptop_5h1t10r6
  family_computer:
    name: Family Computer
    icon: mdi:desktop-classic
    entities:
      - device_tracker.doug
  jd_computer:
    name: JD Computer
    icon: mdi:desktop-classic
    entities:
      - device_tracker.jd
  sam_computer:
    name: Sam Computer
    icon: mdi:laptop
    entities:
      - device_tracker.sam
      - device_tracker.sam_2
  terinas_work_computer:
    name: Terina's Work Computers
    icon: mdi:laptop
    entities:
      - device_tracker.lap_ctc1404
  turk_computer:
    name: Turk Computer
    icon: mdi:server
    entities:
      - device_tracker.turk

proximity:
  danny_dannys_parents:
    zone: dannys_parents
    devices:
      - device_tracker.dannys_phone
      - device_tracker.dannys_phone
    tolerance: 200
    unit_of_measurement: mi
  danny_home:
    devices:
      - device_tracker.dannys_phone
      - device_tracker.dannys_phone
    tolerance: 200
    unit_of_measurement: mi
  danny_primary_school:
    zone: primary_school
    devices:
      - device_tracker.dannys_phone
      - device_tracker.dannys_phone
    tolerance: 200
    unit_of_measurement: mi
  danny_terinas_parents:
    zone: terinas_parents
    devices:
      - device_tracker.dannys_phone
      - device_tracker.dannys_phone
    tolerance: 200
    unit_of_measurement: mi
  danny_terinas_parents_2:
    zone: terinas_parents_2
    devices:
      - device_tracker.dannys_phone
      - device_tracker.dannys_phone
    tolerance: 200
    unit_of_measurement: mi
  danny_tommys_home:
    zone: tommys_home
    devices:
      - device_tracker.dannys_phone
      - device_tracker.dannys_phone
    tolerance: 200
    unit_of_measurement: mi
  danny_work:
    zone: dannys_work
    devices:
      - device_tracker.dannys_phone
      - device_tracker.dannys_phone
    tolerance: 200
    unit_of_measurement: mi
  terina_dannys_parents:
    zone: dannys_parents
    devices:
      - device_tracker.terinas_phone
      - device_tracker.terinas_mobile_2
    tolerance: 200
    unit_of_measurement: mi
  terina_home:
    devices:
      - device_tracker.terinas_phone
      - device_tracker.terinas_mobile_2
    tolerance: 200
    unit_of_measurement: mi
  terina_primary_school:
    zone: primary_school
    devices:
      - device_tracker.terinas_phone
      - device_tracker.terinas_mobile_2
    tolerance: 200
    unit_of_measurement: mi
  terina_terinas_parents:
    zone: terinas_parents
    devices:
      - device_tracker.terinas_phone
      - device_tracker.terinas_mobile_2
    tolerance: 200
    unit_of_measurement: mi
  terina_terinas_parents_2:
    zone: terinas_parents_2
    devices:
      - device_tracker.terinas_phone
      - device_tracker.terinas_mobile_2
    tolerance: 200
    unit_of_measurement: mi
  terina_tommys_home:
    zone: tommys_home
    devices:
      - device_tracker.terinas_phone
      - device_tracker.terinas_mobile_2
    tolerance: 200
    unit_of_measurement: mi
  terina_work:
    zone: terinas_work
    devices:
      - device_tracker.terinas_phone
      - device_tracker.terinas_mobile_2
    tolerance: 200
    unit_of_measurement: mi

script:
  everybody_leave_home:
    alias: Everybody Leave Home
    sequence:
      - service: script.send_to_home_log
        data:
          message:
            ":running: :house: :dancer: Everyone has left the house. Running the
            following:"
          log_level: "Debug"
      - service: script.turn_everything_off
    mode: single
  front_door_lock_status:
    alias: Front Door Lock Status
    sequence:
      - repeat:
          until:
            - condition: state
              entity_id: binary_sensor.front_door
              state: "on"
          sequence:
            - choose:
                - conditions:
                    - condition: state
                      entity_id: lock.unified_front_door
                      state: locked
                  sequence:
                    - service: scene.turn_on
                      target:
                        entity_id: scene.porch_red_light
                - conditions:
                    - condition: state
                      entity_id: lock.unified_front_door
                      state: unlocked
                  sequence:
                    - service: scene.turn_on
                      target:
                        entity_id: scene.porch_light_green
                - conditions:
                    - or:
                        - condition: state
                          entity_id: lock.unified_front_door
                          state: unlocking
                        - condition: state
                          entity_id: lock.unified_front_door
                          state: locking
                  sequence:
                    - service: scene.turn_on
                      target:
                        entity_id: scene.porch_blue_light
            - delay:
                hours: 0
                minutes: 0
                seconds: 1
                milliseconds: 0
            - service: scene.turn_on
              data:
                transition: 1
              target:
                entity_id: scene.porch_lights_off
      - service: scene.turn_on
        data:
          transition: 2
        target:
          entity_id: scene.porch_light_on
    mode: single
  stop_lock_status_light:
    alias: Stop Lock Status Light
    sequence:
      - service: script.turn_off
        data: {}
        target:
          entity_id: script.front_door_lock_status
    mode: single
    icon: mdi:lock-off
  check_terinas_work_laptop_status:
    alias: Check If Terina's Work Laptop Status
    sequence:
      - service: script.send_to_home_log
        data:
          message: "Checking Terina's :briefcase: work :computer: laptop status."
          log_level: "Debug"
      - if:
          - condition: state
            entity_id: group.terinas_work_computer
            state: "home"
        then:
          - service: script.terinas_work_laptop_turned_on
            data: {}
        else:
          - service: script.terinas_work_laptop_turned_off
            data: {}
    mode: single
    icon: mdi:laptop
  terinas_work_laptop_turned_off:
    alias: People Terina's Work Laptop Turned Off
    sequence:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: Setting higher threshold for lounge lights 30 and 25 respectively.
              log_level: "Debug"
          - service: input_number.set_value
            data:
              value: 30
            target:
              entity_id: input_number.lounge_light_level_2_threshold
          - service: input_number.set_value
            data:
              value: 25
            target:
              entity_id: input_number.lounge_light_level_3_threshold
    mode: single
    icon: mdi:laptop-off
  terinas_work_laptop_turned_on:
    alias: People Terina's Work Laptop Turned On
    sequence:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: Setting lower threshold for lounge lights 81 and 65 respectively.
              log_level: "Debug"
          - service: input_number.set_value
            data:
              value: 81
            target:
              entity_id: input_number.lounge_light_level_2_threshold
          - service: input_number.set_value
            data:
              value: 65
            target:
              entity_id: input_number.lounge_light_level_3_threshold
    mode: single
    icon: mdi:laptop
  get_peope_in_group_by_status:
    alias: Get people in group by state
    description: >-
      Returns a list of people in a group with the chosen status.

      Returns data in id:entity_id format. E.g. danny:person.danny
    fields:
      group_id:
        description: group of people to check.
        required: true
        selector:
          target:
            entity:
              - domain: group
      status:
        description: status to find.
        example: home
        required: true
        selector:
          text:
    variables:
      persons: >-
        {%- set people = namespace(home=[]) -%}
        {%- for p in state_attr(group_id, 'entity_id')|default([]) -%}
          {%- if states(p) == status|default('') -%}
            {%- set people.home = people.home + [p] -%}
          {%- endif -%}
        {%- endfor -%}
        {
          {%- for p in people.home -%}
          "{{ state_attr(p, 'id') }}":"{{ p }}"
          {% if not loop.last %},{% endif %}
          {%- endfor -%}
        }
    sequence:
      - stop: "Stop running the rest of the sequence"
        response_variable: "persons"
    mode: single
    icon: mdi:account-multiple

template:
  - sensor:
      - name: "Destination Address"
        unique_id: "f01b1d6b-9bbd-4261-945b-581d864eb4a4"
        icon: mdi:map-marker
        state: "{{ states('input_text.destination_address') }}"
  - sensor:
      - name: "Origin Address"
        unique_id: "71c7a6cb-f480-4835-aed7-6e05a8c53dfe"
        icon: mdi:map-marker-outline
        state: "{{ states('input_text.origin_address') }}"
