# Created by Danny Tsang <danny@tsang.uk>
automation:
  # Bed
  - id: "1601641236163"
    alias: "Bedroom: Close Blinds When Someone Is In Bed After Sunset"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bed_occupied
        from: "off"
        to: "on"
        for: 00:00:30
    condition:
      - condition: numeric_state
        entity_id: cover.bedroom_blinds
        attribute: current_position
        above: input_number.blind_open_position_threshold
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: sun
        after: sunset
      - condition: state
        entity_id: binary_sensor.bedroom_window_contact
        state: "off"
      - condition: state
        entity_id: input_boolean.enable_bed_sensor
        state: "on"
    action:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: >-
                :sleeping_accommodation: Someone is in bed, :window: window is closed and
                it's getting late. Closing blinds.
              title: ":bed: bedroom"
              log_level: "Debug"
          - action: cover.close_cover
            target:
              entity_id: cover.bedroom_blinds
    mode: single
  - id: "1600127180656"
    alias: "Bedroom: Close Blinds Before Sunrise"
    description: ""
    trigger:
      - event: sunrise
        offset: -02:00:00
        platform: sun
    condition:
      - condition: numeric_state
        entity_id: cover.bedroom_blinds
        attribute: current_position
        above: input_number.blind_open_position_threshold
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: state
        entity_id: binary_sensor.bedroom_window_contact
        state: "off"
    action:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: >-
                :clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and now().minute | int < 35 %}30{% else %}{% endif %}:
                :sunrise: Bedroom blind is open and it's nearly sunrise. Closing blinds.
              title: ":bed: bedroom"
              log_level: "Debug"
          - action: cover.close_cover
            target:
              entity_id: cover.bedroom_blinds
    mode: single
  - id: "1622667464880"
    alias: "Bedroom: Window Closed At Night"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_window_contact
        from: "on"
        to: "off"
    condition:
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: sun
        after: sunset
      - condition: sun
        before: sunrise
      - not:
          - condition: state
            entity_id: cover.bedroom_blinds
            state: "closed"
    action:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: >-
                :window: Window closed and it's after :city_sunset: sunset.
                Closing blinds.
              title: ":bed: bedroom"
              log_level: "Debug"
          - action: cover.set_cover_position
            data:
              position: 50
    mode: single
  - id: "1615689096351"
    alias: "Bedroom: Window Closed And Someone Is In Bed At Night"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_window_contact
        from: "on"
        to: "off"
        for: 00:00:30
    condition:
      - condition: numeric_state
        entity_id: cover.bedroom_blinds
        attribute: current_position
        above: input_number.blind_open_position_threshold
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: sun
        after: sunset
    action:
      - parallel:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.enable_bed_sensor
                    state: "on"
                  - condition: state
                    entity_id: binary_sensor.bed_occupied
                    state: "on"
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        :sleeping_accommodation: :window: Window shut, someone is
                        in bed ({{states('sensor.bed_sensor')}}) and it's after :city_sunset: sunset.
                        Closing blinds.
                      title: ":bed: bedroom"
                      log_level: "Debug"
                  - action: cover.close_cover
                    target:
                      entity_id: cover.bedroom_blinds
              - conditions:
                  - condition: state
                    entity_id: input_boolean.enable_bed_sensor
                    state: "off"
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        :sleeping_accommodation: :window: Bedroom window shut, someone is
                        in bed ({{states('sensor.bed_sensor')}}) and it's after :city_sunset: sunset.
                        Closing blinds.
                      title: ":bed: bedroom"
                      log_level: "Debug"
                  - action: cover.close_cover
                    target:
                      entity_id: cover.bedroom_blinds
            default: []
    mode: single
  - id: "1601641292576"
    alias: "Bedroom: Open Blind When No One Is In Bed"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bed_occupied
        from: "on"
        to: "off"
        for: 00:00:30
    condition:
      - condition: numeric_state
        entity_id: cover.bedroom_blinds
        attribute: current_position
        below: input_number.blind_closed_position_threshold
      - condition: sun
        after: sunrise
        after_offset: -01:00:00
        before: sunset
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_bed_sensor
        state: "on"
    action:
      - delay: 00:01:00
      - parallel:
          - action: script.send_to_home_log
            data:
              message: >-
                No one is in :bed: bed ({{states('sensor.bed_sensor')}}).
                Opening the blinds."
              title: ":bed: bedroom"
              log_level: "Debug"
          - action: cover.open_cover
            target:
              entity_id: cover.bedroom_blinds
    mode: single
  # Door
  - id: "1715955339483"
    alias: "Bedroom: Door Closed"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.bedroom_door_contact
        to: "off"
        for:
          seconds: 10
    condition: []
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.leos_bedroom_door_contact
                state: "off"
              - condition: state
                entity_id: binary_sensor.ashlees_bedroom_door_contact
                state: "off"
              - condition: state
                entity_id: binary_sensor.upstairs_area_motion
                state: "off"
            sequence:
              - parallel:
                  - action: script.send_to_home_log
                    data:
                      message: ":door: door closed."
                      title: ":bed: bedroom"
                      log_level: "Debug"
                  - if:
                      - condition: state
                        entity_id: light.stairs
                        state: "on"
                    then:
                      - action: light.turn_off
                        metadata: {}
                        data:
                          transition: 1
                        target:
                          entity_id: light.stairs
                  - if:
                      - condition: state
                        entity_id: light.stairs_ambient
                        state: "on"
                    then:
                      - action: light.turn_off
                        metadata: {}
                        data:
                          transition: 1
                        target:
                          entity_id: light.stairs_ambient
                  - if:
                      - condition: state
                        entity_id: light.stairs_2
                        state: "on"
                    then:
                      - action: light.turn_off
                        metadata: {}
                        data:
                          transition: 1
                        target:
                          entity_id: light.stairs_2
    mode: single
  - id: "1615209552353"
    alias: "Bedroom: Other Bedroom Door Opens Warning"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.leos_bedroom_door_contact
        from: "off"
        to: "on"
        id: leo
      - platform: state
        entity_id: binary_sensor.ashlees_bedroom_door_contact
        id: ashlee
        from: "off"
        to: "on"
    condition:
      - or:
          - condition: state
            entity_id: light.bedroom_lamps
            state: "on"
          - condition: state
            entity_id: light.bedroom_main_light
            state: "on"
      - condition: time
        after: input_datetime.childrens_bed_time
      - not:
          - condition: state
            entity_id: input_select.home_mode
            state: "Guest"
          - condition: state
            entity_id: input_select.home_mode
            state: "No Children"
    action:
      - parallel:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.enable_bed_sensor
                    state: "on"
                  - condition: state
                    entity_id: binary_sensor.bed_occupied
                    state: "on"
                  - condition: trigger
                    id: leo
                sequence:
                  - action: script.other_bedroom_door_opening_warning
                    data:
                      bedroom: "leo"
              - conditions:
                  - condition: sun
                    after: sunset
                  - condition: trigger
                    id: leo
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message:
                        ":boy: :door: Leo's door opened and bedroom light is on. Sending
                        warning."
                      log_level: "Debug"
                  - action: script.other_bedroom_door_opening_warning
                    data:
                      bedroom: "leo"
              - conditions:
                  - condition: state
                    entity_id: input_boolean.enable_bed_sensor
                    state: "on"
                  - condition: state
                    entity_id: binary_sensor.bed_occupied
                    state: "on"
                  - condition: trigger
                    id: ashlee
                sequence:
                  - action: script.other_bedroom_door_opening_warning
                    data:
                      bedroom: "ashlee"
              - conditions:
                  - condition: sun
                    after: sunset
                  - condition: trigger
                    id: ashlee
                sequence:
                  - action: script.other_bedroom_door_opening_warning
                    data:
                      bedroom: "ashlee"
            default: []
    mode: queued
    max: 10
  - id: "1615209552354"
    alias: "Bedroom: Other Bedroom Door Closes Warning"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.leos_bedroom_door_contact
        from: "on"
        to: "off"
        id: leo
      - platform: state
        entity_id: binary_sensor.ashlees_bedroom_door_contact
        id: ashlee
        from: "on"
        to: "off"
    condition:
      - condition: state
        entity_id: light.bedroom_lamps
        state: "on"
      - condition: time
        after: input_datetime.childrens_bed_time
      - not:
          - condition: state
            entity_id: input_select.home_mode
            state: "Guest"
          - condition: state
            entity_id: input_select.home_mode
            state: "No Children"
    action:
      - parallel:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.enable_bed_sensor
                    state: "on"
                  - condition: state
                    entity_id: binary_sensor.bed_occupied
                    state: "on"
                  - condition: trigger
                    id: leo
                sequence:
                  - action: script.other_bedroom_door_closes_warning
                    data:
                      bedroom: "leo"
              - conditions:
                  - condition: sun
                    after: sunset
                  - condition: trigger
                    id: leo
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message:
                        ":boy: :door: Leo's door opened and bedroom light is on. Sending
                        warning."
                      log_level: "Debug"
                  - action: script.other_bedroom_door_closes_warning
                    data:
                      bedroom: "leo"
              - conditions:
                  - condition: state
                    entity_id: input_boolean.enable_bed_sensor
                    state: "on"
                  - condition: state
                    entity_id: binary_sensor.bed_occupied
                    state: "on"
                  - condition: trigger
                    id: ashlee
                sequence:
                  - action: script.other_bedroom_door_closes_warning
                    data:
                      bedroom: "ashlee"
              - conditions:
                  - condition: sun
                    after: sunset
                  - condition: trigger
                    id: ashlee
                sequence:
                  - action: script.other_bedroom_door_closes_warning
                    data:
                      bedroom: "ashlee"
            default: []
    mode: queued
    max: 10
  - id: "1724001157269"
    alias: "Bedroom: Pause TV When Door Opens At Night"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.bedroom_door_contact
        from: "off"
        to: "on"
    condition:
      - or:
          - condition: time
            after: "22:00:00"
          - condition: time
            before: 02:00:00
      - condition: state
        entity_id: media_player.bedroom_tv
        state: playing
    action:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: >-
                Door opened and :tv: TV was playing. Pausing TV.
              title: ":bed: bedroom"
              log_level: "Debug"
          - action: media_player.media_play_pause
            target:
              entity_id: media_player.bedroom_tv
            data: {}
    mode: single
  # Motion triggers
  - id: "1621713217274"
    alias: "Bedroom: Motion Detected"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.bedroom_motion_occupancy
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.enable_bedroom_motion_trigger
        state: "on"
      - or:
          - condition: template
            value_template: "{{ state_attr('light.under_bed_left','brightness') == none }}"
          - condition: template
            value_template: "{{ state_attr('light.under_bed_right','brightness') == none }}"
          - condition: numeric_state
            entity_id: light.under_bed_left
            below: "100"
            attribute: brightness
          - condition: numeric_state
            entity_id: light.under_bed_right
            below: "100"
            attribute: brightness
    action:
      - parallel:
          - choose:
              - conditions:
                  - condition: numeric_state
                    entity_id: cover.bedroom_blinds
                    attribute: current_position
                    below: "31"
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        :paw_prints: Motion detected and the blinds are down.
                        Dimming ambient :bulb: :low_brightness: lights.
                      title: ":bed: bedroom"
                      log_level: "Debug"
                  - action: scene.turn_on
                    target:
                      entity_id: scene.bedroom_dim_ambient_light
              - conditions:
                  - condition: time
                    after: "08:00:00"
                  - condition: sun
                    before: sunset
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        :paw_prints: Motion detected at :city_sunrise: sunrise.
                        Turning ambient :bulb: :high_brightness: lights on.
                      title: ":bed: bedroom"
                      log_level: "Debug"
                  - action: scene.turn_on
                    target:
                      entity_id: scene.bedroom_turn_on_ambient_light
              - conditions:
                  - or:
                      - condition: sun
                        after: sunset
                      - condition: time
                        before: "08:00:00"
                  - condition: state
                    entity_id: input_boolean.enable_bedroom_motion_trigger
                    state: "on"
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        :paw_prints: Motion detected after :city_sunset: sunset.
                        :bulb: :low_brightness: Dimming ambient lights.
                      title: ":bed: bedroom"
                      log_level: "Debug"
                  - action: scene.turn_on
                    target:
                      entity_id: scene.bedroom_dim_ambient_light
            default: []
          - if:
              - condition: state
                entity_id: light.bedroom_clock_matrix
                state: "off"
            then:
              - action: light.turn_on
                data: {}
                target:
                  entity_id: light.bedroom_clock_matrix
    mode: single
  - id: "1621713867762"
    alias: "Bedroom: No Motion"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.bedroom_motion_occupancy
        from: "on"
        to: "off"
        for: 00:02:00
    condition:
      - or:
          - condition: state
            entity_id: light.under_bed_left
            state: "on"
          - condition: state
            entity_id: light.under_bed_right
            state: "on"
      - condition: state
        entity_id: input_boolean.enable_bedroom_motion_trigger
        state: "on"
    action:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: >-
                :no_pedestrians: No motion detected For 1 minute.
                Turning ambient lights off.
              title: " :bed: Bedroom"
              log_level: "Debug"
          - action: scene.turn_on
            target:
              entity_id: scene.bedroom_turn_off_ambient_light
    mode: single
  - id: "1621713867763"
    alias: "Bedroom: No Motion For Long Time"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_area_motion
        from: "on"
        to: "off"
        for: 00:30:00
    condition:
      - condition: state
        entity_id: light.bedroom_lamps
        state: "off"
      - condition: state
        entity_id: input_boolean.enable_bedroom_motion_trigger
        state: "on"
    action:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: >-
                :no_pedestrians: No motion detected For 1 hour.
                Turning clock off.
              title: " :bed: Bedroom"
              log_level: "Debug"
          - action: light.turn_off
            data: {}
            target:
              entity_id: light.bedroom_clock_matrix
    mode: single
  - id: "1725207477313"
    alias: "Bedroom: No Motion And Fan Is On"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.bedroom_motion_3_presence
        to: "off"
        for:
          hours: 0
          minutes: 5
          seconds: 0
    condition:
      - condition: state
        entity_id: switch.bedroom_fan
        state: "on"
    action:
      - parallel:
          - action: switch.turn_off
            metadata: {}
            data: {}
            target:
              entity_id: switch.bedroom_fan
    mode: single
  # Fan
  - id: "1690844451011"
    alias: "Bedroom: Turn Off Fan"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - switch.bedroom_fan
        to: "on"
        for:
          hours: 2
          minutes: 0
          seconds: 0
    condition: []
    action:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: Bedroom light turned off. Turning stairs lights off.
              title: ":bed: Bedroom"
              log_level: "Debug"
          - action: switch.turn_off
            data: {}
            target:
              entity_id: switch.bedroom_fan
    mode: single
  # Time
  - id: "1621875409014"
    alias: "Bedroom: Morning Timed Open Blinds"
    description: "TODO: Take into account high temperature."
    trigger:
      - platform: time
        at: "08:00:00"
        id: "workday"
      - platform: time
        at: "08:30:00"
        id: "083000"
      - platform: time
        at: "09:00:00"
        id: "090000"
      - platform: time
        at: "09:30:00"
        id: "093000"
    condition:
      - condition: numeric_state
        entity_id: cover.bedroom_blinds
        attribute: current_position
        below: input_number.bedroom_blind_closed_threshold
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: state
        entity_id: binary_sensor.bedroom_tv_powered_on
        state: "off"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.workday_sensor
                state: "on"
                alias: Working day
              # Check if there's an event with "A/L in the work calendar" and the event is on.
              - condition: template
                value_template: >-
                  {{ 'Danny' not in state_attr('calendar.work','message')|string and
                  'A/L' not in state_attr('calendar.work','message')|string and
                  states('calendar.work') == 'off' }}
                alias: No annual leave in calendar
            sequence:
              - action: cover.open_cover
                target:
                  entity_id: cover.bedroom_blinds
              - action: script.send_to_home_log
                data:
                  message: >-
                    :clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and now().minute | int < 35 %}30{% else %}{% endif %}:
                    Opening blinds because it's closed on a working weekday!"
                  title: ":bed: bedroom"
                  log_level: "Debug"
          - conditions:
              # Non workday and no children
              - condition: state
                entity_id: binary_sensor.workday_sensor
                state: "off"
                alias: Non working day
              - not:
                  - condition: state
                    entity_id: input_select.home_mode
                    state: "No Children"
              - condition: trigger
                id: "090000"
            sequence:
              - action: cover.open_cover
                target:
                  entity_id: cover.bedroom_blinds
              - action: script.send_to_home_log
                data:
                  message: >-
                    :clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and now().minute | int < 35 %}30{% else %}{% endif %}:
                    Opening blinds because it's closed and its 09:00 on a weekend!"
                  title: ":bed: bedroom"
                  log_level: "Debug"
          - conditions:
              # Non workday and no children
              - condition: state
                entity_id: binary_sensor.workday_sensor
                state: "off"
                alias: Non working day
              - condition: state
                entity_id: input_select.home_mode
                state: "No Children"
              - condition: trigger
                id: "093000"
            sequence:
              - action: cover.open_cover
                target:
                  entity_id: cover.bedroom_blinds
              - action: script.send_to_home_log
                data:
                  message: >-
                    :clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and now().minute | int < 35 %}30{% else %}{% endif %}:
                    Opening blinds because it's closed, there are no children and its 09:30 on a weekend!"
                  title: ":bed: bedroom"
                  log_level: "Debug"
          - conditions:
              - condition: trigger
                id: "093000"
            sequence:
              - action: cover.open_cover
                target:
                  entity_id: cover.bedroom_blinds
              - action: script.send_to_home_log
                data:
                  message: >-
                    :clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and now().minute | int < 35 %}30{% else %}{% endif %}:
                    Opening blinds because it's closed and its 09:30!"
                  title: ":bed: bedroom"
                  log_level: "Debug"
        default: []
    mode: single
  - id: "1621875567853"
    alias: "Bedroom: Evening Timed Close Blinds"
    description: ""
    trigger:
      - platform: time
        at: "22:00:00"
    condition:
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: numeric_state
        entity_id: cover.bedroom_blinds
        attribute: current_position
        above: input_number.blind_closed_position_threshold
    action:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: >-
                :clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and now().minute | int < 35 %}30{% else %}{% endif %}:
                It's after :city_sunset: sunset, closing bedroom's blinds.
              title: ":bed: bedroom"
              log_level: "Debug"
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.bedroom_window_contact
                    state: "on"
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        :window: Window is still open. Waiting until
                        it's closed before closing blinds.
                      title: ":bed: bedroom"
                      log_level: "Debug"
            default:
              - action: cover.close_cover
                target:
                  entity_id: cover.bedroom_blinds
    mode: single
  # Plugs / switches
  - id: "1581800266867"
    alias: "Bedroom: Turn off Electric Blanket After 1 hour"
    description: ""
    trigger:
      - entity_id: switch.bedroom_blanket
        for: 01:00:00
        platform: state
        to: "'on'"
    condition: []
    action:
      - parallel:
          - action: switch.turn_off
            entity_id: switch.bedroom_blanket
            data: {}
          - action: script.send_to_home_log
            data:
              message: Electric blanket has been on for 1 hour. Turning electric blanket off.
              title: ":bed: bedroom"
              log_level: "Debug"
  - id: "1624194131454"
    alias: "Bedroom: TV Turned On During Bright Day"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_tv_powered_on
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: sun
        before: sunset
        after: sunrise
      - condition: numeric_state
        entity_id: cover.bedroom_blinds
        attribute: current_position
        above: input_number.blind_open_position_threshold
    action:
      - parallel:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.enable_direct_notifications
                    state: "on"
                  - condition: state
                    entity_id: binary_sensor.bedroom_window_contact
                    state: "on"
                sequence:
                  - action: script.send_actionable_notification_with_2_buttons
                    data:
                      message: Do you want to close the blinds?
                      title: 📺🛌TV On & Window Is Open
                      people:
                        - person.danny
                      action1_title: "Yes"
                      action1_name: set_bedroom_blinds_30
                      action2_title: "No"
                      action2_name: ignore
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.bedroom_window_contact
                    state: "off"
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        :bed: Bedroom :tv: TV turned on and it's bright. Lowering bedroom
                        blinds.
                      title: ":bed: bedroom"
                      log_level: "Debug"
                  - action: cover.set_cover_position
                    target:
                      entity_id: cover.bedroom_blinds
                    data:
                      position: 20
            default: []
    mode: single
  # Remotes
  - id: "1699308571385"
    alias: "Bedroom: Remote Button 1"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.bedroom_dial_remote_action
        to: button_1_press_release
    condition: []
    action:
      - action: light.toggle
        data: {}
        target:
          entity_id: light.bedroom_main_light
    mode: single
  - id: "1699308571386"
    alias: "Bedroom: Remote Button 2"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.bedroom_dial_remote_action
        to: button_2_press_release
    condition: []
    action:
      - if:
          - condition: state
            entity_id: light.bedroom_lamps
            state: "off"
        then:
          - action: scene.turn_on
            target:
              entity_id: scene.bedroom_desk_lamps_on
            data:
              transition: 1
        else:
          - action: light.turn_off
            target:
              entity_id: light.bedroom_lamps
            data: {}
    mode: single
  - id: "1699308571387"
    alias: "Bedroom: Remote Button 3"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.bedroom_dial_remote_action
        to: button_3_press_release
    condition: []
    action:
      - action: cover.open_cover
        target:
          entity_id: cover.bedroom_blinds
        data: {}
    mode: single
  - id: "1699308571388"
    alias: "Bedroom: Remote Button 4"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.bedroom_dial_remote_action
        to: button_4_press_release
    condition: []
    action:
      - action: cover.close_cover
        target:
          entity_id: cover.bedroom_blinds
        data: {}
    mode: single
  - id: "1710079376648"
    alias: "Bedroom: Remote Dial Action Right"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.bedroom_dial_remote_action
        to:
          - dial_rotate_right_step
          - dial_rotate_right_fast
          - brightness_step_up
    condition:
      - condition: template
        value_template: "{{ states('sensor.bedroom_dial_remote_action_time')|float(15) > 0}}"
    action:
      - action: light.turn_on
        metadata: {}
        data:
          brightness: >-
            {{ iif((state_attr('light.bedroom_lamps', 'brightness')|int(0) +
            (states('sensor.bedroom_dial_remote_action_time')|float(15)*2)) > 255, 255, state_attr('light.bedroom_lamps', 'brightness')|int(0) +
            states('sensor.bedroom_dial_remote_action_time')|float(15)*2) }}
          transition: 1
        target:
          entity_id:
            - light.bedroom_lamps
    mode: queued
    max: 10
  - id: "1710079376649"
    alias: "Bedroom: Remote Dial Action Left"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.bedroom_dial_remote_action
        to:
          - dial_rotate_left_step
          - dial_rotate_left_fast
          - brightness_step_down
    condition:
      - condition: template
        value_template: "{{ states('sensor.bedroom_dial_remote_action_time')|float(15) > 0}}"
    action:
      - action: light.turn_on
        metadata: {}
        data:
          brightness: >-
            {%- if states('sensor.bedroom_dial_remote_action_time')|float(15)*2 > state_attr('light.bedroom_lamps', 'brightness')|int(0) -%}
            0
            {%- else -%}
            {{ state_attr('light.bedroom_lamps', 'brightness')|int(0) -
            (states('sensor.bedroom_dial_remote_action_time')|float(15)*2) }}
            {%-endif-%}
          transition: 1
        target:
          entity_id:
            - light.bedroom_lamps
    mode: queued
    max: 10
  # Other
  - id: "1624194439043"
    alias: "Bedroom: TV Turned Off"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_tv_powered_on
        from: "on"
        to: "off"
        for: 00:01:00
    condition:
      - condition: numeric_state
        entity_id: cover.bedroom_blinds
        attribute: current_position
        below: input_number.bedroom_blind_closed_threshold
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: sun
        before: sunset
      - condition: sun
        after: sunrise
      - condition: time
        after: "08:30"
    action:
      - action: weather.get_forecasts
        target:
          entity_id: weather.home
        data:
          type: hourly
        response_variable: weather
      - choose:
          - conditions:
              - or:
                  - condition: numeric_state
                    entity_id: weather.home
                    attribute: temperature
                    above: input_number.forecast_high_temperature
                  - condition: template
                    value_template: "{{ weather['weather.home'].forecast[1].temperature > states('input_number.forecast_high_temperature')|float(25) }}"
            sequence:
              - action: script.send_to_home_log
                data:
                  message: >-
                    :tv: TV turned off but above weather is above
                    {{ states('input_number.forecast_high_temperature') }} (
                    {%- if state_attr('weather.home', 'temperature')|float(0) > weather['weather.home'].forecast[1].temperature|float(25) -%}
                    {{ state_attr('weather.home', 'temperature')|float(0) }}
                    {%- else -%}
                    {{ weather['weather.home'].forecast[1].temperature }}
                    {%-endif-%}
                    {{ state_attr('weather.home', 'temperature_unit') }}
                    ). Keeping blinds closed.
                  title: ":bed: bedroom"
                  log_level: "Debug"
        default:
          - parallel:
              - action: script.send_to_home_log
                data:
                  message: ":tv: TV turned off. Opening Blinds."
                  title: ":bed: bedroom"
                  log_level: "Debug"
              - action: cover.open_cover
                target:
                  entity_id: cover.bedroom_blinds
    mode: single
  - id: "1633272413519"
    alias: "Bedroom: Turn Off Heated Blanket"
    description: ""
    trigger:
      - platform: state
        entity_id: switch.bedroom_blanket
        to: "on"
        for:
          hours: 1
          minutes: 0
          seconds: 0
          milliseconds: 0
    condition: []
    action:
      - parallel:
          - action: script.send_to_home_log
            data:
              message:
                ":bed: :hotsprings: Heated blanket has been on for :hourglass: an hour.
                Turning heated blanket off."
              title: ":bed: bedroom"
              log_level: "Debug"
          - action: switch.turn_off
            target:
              entity_id: switch.bedroom_blanket
    mode: single

scene:
  - id: "1621715555428"
    name: "Bedroom: Turn On Ambient Light"
    entities:
      light.under_bed_left:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        supported_color_modes:
          - color_temp
          - hs
        color_mode: color_temp
        brightness: 128
        color_temp: 366
        effect: none
        friendly_name: Under Bed Left
        icon: mdi:led-strip-variant
        supported_features: 63
        state: "on"
      light.under_bed_right:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        supported_color_modes:
          - color_temp
          - hs
        color_mode: color_temp
        brightness: 128
        color_temp: 366
        effect: none
        friendly_name: Under Bed Right
        icon: mdi:led-strip-variant
        supported_features: 63
        state: "on"
    icon: mdi:led-strip-variant
  - id: "1621715588909"
    name: "Bedroom: Dim Ambient Light"
    entities:
      light.under_bed_left:
        min_color_temp_kelvin: 2000
        max_color_temp_kelvin: 6535
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - blink
          - breathe
          - okay
          - channel_change
          - candle
          - fireplace
          - colorloop
          - finish_effect
          - stop_effect
          - stop_hue_effect
        supported_color_modes:
          - color_temp
          - xy
        friendly_name: Under Bed Left
        supported_features: 44
        color_mode: color_temp
        brightness: 15
        color_temp_kelvin: 2732
        color_temp: 366
        hs_color:
          - 28.327
          - 64.71
        rgb_color:
          - 255
          - 167
          - 89
        xy_color:
          - 0.524
          - 0.387
        state: "on"
      light.under_bed_right:
        min_color_temp_kelvin: 2020
        max_color_temp_kelvin: 6329
        min_mireds: 158
        max_mireds: 495
        effect_list:
          - blink
          - breathe
          - okay
          - channel_change
          - finish_effect
          - stop_effect
        supported_color_modes:
          - color_temp
          - xy
        friendly_name: Under Bed Right
        supported_features: 44
        color_mode: xy
        brightness: 10
        hs_color:
          - 22.55
          - 58.431
        rgb_color:
          - 255
          - 162
          - 106
        xy_color:
          - 0.516
          - 0.369
        state: "on"
    icon: mdi:led-strip-variant
    metadata: {}
  - id: "1621715612398"
    name: "Bedroom: Turn Off Ambient Light"
    entities:
      light.under_bed_left:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        supported_color_modes:
          - color_temp
          - hs
        friendly_name: Under Bed Left
        icon: mdi:led-strip-variant
        supported_features: 63
        state: "off"
      light.under_bed_right:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        supported_color_modes:
          - color_temp
          - hs
        friendly_name: Under Bed Right
        icon: mdi:led-strip-variant
        supported_features: 63
        state: "off"
    icon: mdi:led-strip-variant
  - id: "1615211281868"
    name: "Bedroom: Desk Lamps On"
    entities:
      light.bedroom_lamp_left:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        brightness: 200
        hs_color:
          - 38.667
          - 52.941
        rgb_color:
          - 255
          - 207
          - 120
        xy_color:
          - 0.457
          - 0.41
        effect: none
        friendly_name: Light A
        icon: mdi:desk-lamp
        supported_features: 63
        state: "on"
      light.bedroom_lamp_right:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        brightness: 200
        hs_color:
          - 38.667
          - 52.941
        rgb_color:
          - 255
          - 207
          - 120
        xy_color:
          - 0.457
          - 0.41
        effect: none
        friendly_name: Light B
        icon: mdi:desk-lamp
        supported_features: 63
        state: "on"
    icon: mdi:lightbulb
  - id: "1615211309175"
    name: "Bedroom: Desk Lamps Off"
    entities:
      light.bedroom_lamp_left:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        friendly_name: Light A
        icon: mdi:desk-lamp
        supported_features: 63
        state: "off"
      light.bedroom_lamp_right:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        friendly_name: Light B
        icon: mdi:desk-lamp
        supported_features: 63
        state: "off"
    icon: mdi:lightbulb

script:
  bedroom_leos_door_opened_notification:
    alias: Bedroom Leo's Door Opened Notification
    sequence:
      - repeat:
          count: "2"
          sequence:
            - action: light.turn_on
              data:
                color_name: blue
              target:
                entity_id:
                  - light.bedroom_lamp_left
                  - light.bedroom_lamp_right
            - action: light.turn_off
              target:
                entity_id:
                  - light.bedroom_lamp_left
                  - light.bedroom_lamp_right
      - action: scene.turn_on
        target:
          entity_id: scene.bedroom_desk_lamps_on
    mode: single
  bedroom_leos_door_closed_notification:
    alias: Bedroom Leo's Door Opened Notification
    sequence:
      - repeat:
          count: "2"
          sequence:
            - action: light.turn_on
              data:
                color_name: blue
              target:
                entity_id:
                  - light.bedroom_lamp_left
                  - light.bedroom_lamp_right
            - action: light.turn_on
              data:
                color_name: green
              target:
                entity_id:
                  - light.bedroom_lamp_left
                  - light.bedroom_lamp_right
            - action: light.turn_off
              target:
                entity_id:
                  - light.bedroom_lamp_left
                  - light.bedroom_lamp_right
      - action: scene.turn_on
        target:
          entity_id: scene.bedroom_desk_lamps_on
    mode: single
  bedroom_ashlees_door_opened_notification:
    alias: Bedroom Ashlee's Door Opened Notification
    sequence:
      - repeat:
          count: "2"
          sequence:
            - action: light.turn_on
              data:
                color_name: pink
              target:
                entity_id:
                  - light.bedroom_lamp_left
                  - light.bedroom_lamp_right
            - action: light.turn_off
              target:
                entity_id:
                  - light.bedroom_lamp_left
                  - light.bedroom_lamp_right
      - action: scene.turn_on
        target:
          entity_id: scene.bedroom_desk_lamps_on
    mode: single
  bedroom_ashlees_door_closed_notification:
    alias: Bedroom Ashlee's Door Closed Notification
    sequence:
      - repeat:
          count: "2"
          sequence:
            - action: light.turn_on
              data:
                color_name: pink
              target:
                entity_id:
                  - light.bedroom_lamp_left
                  - light.bedroom_lamp_right
            - action: light.turn_on
              data:
                color_name: green
              target:
                entity_id:
                  - light.bedroom_lamp_left
                  - light.bedroom_lamp_right
            - action: light.turn_off
              target:
                entity_id:
                  - light.bedroom_lamp_left
                  - light.bedroom_lamp_right
      - action: scene.turn_on
        target:
          entity_id: scene.bedroom_desk_lamps_on
    mode: single
  other_bedroom_door_opening_warning:
    alias: Other Bedroom Door Opening Warning
    fields:
      bedroom:
        name: Bedroom
        description: Which bedroom door was opened.
        required: true
        selector:
          text:
    sequence:
      - variables:
          lamp_state: "{{ states('light.bedroom_lamps') }}"
      - parallel:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ bedroom == 'leo' }}"
                sequence:
                  - action: script.bedroom_leos_door_opened_notification
                  - action: script.send_to_home_log
                    data:
                      message:
                        ":boy: :door: Leo's door opened and bedroom light is on. Sending
                        warning."
                      log_level: "Normal"
                  - if:
                      - condition: template
                        value_template: "{{ lamp_state == 'off' }}"
                    then:
                      - action: light.turn_off
                        target:
                          entity_id: light.bedroom_lamps
                        data: {}
              - conditions:
                  - condition: template
                    value_template: "{{ bedroom == 'ashlee' }}"
                sequence:
                  - action: script.bedroom_ashlees_door_opened_notification
                  - action: script.send_to_home_log
                    data:
                      message:
                        ":girl: :door: Ashlee's door opened and bedroom light is on. Sending
                        warning."
                      log_level: "Normal"
                  - if:
                      - condition: template
                        value_template: "{{ lamp_state == 'off' }}"
                    then:
                      - action: light.turn_off
                        target:
                          entity_id: light.bedroom_lamps
                        data: {}
            default: []
          - if:
              - condition: state
                entity_id: media_player.bedroom_tv
                state: "playing"
            then:
              - action: media_player.media_play_pause
                target:
                  entity_id: media_player.bedroom_tv
              - action: script.send_to_home_log
                data:
                  message: ":tv: Bedroom Chromecast was on, pausing TV."
                  log_level: "Debug"
    mode: single
  other_bedroom_door_closes_warning:
    alias: Other Bedroom Door Closes Warning
    fields:
      bedroom:
        name: Bedroom
        description: Which bedroom door was opened.
        required: true
        selector:
          text:
    sequence:
      - variables:
          lamp_state: "{{ states('light.bedroom_lamps') }}"
      - parallel:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{bedroom == 'leo'}}"
                sequence:
                  - action: script.bedroom_leos_door_closed_notification
                  - action: script.send_to_home_log
                    data:
                      message:
                        ":boy: :door: Leo's door opened and bedroom light is on. Sending
                        warning."
                      log_level: "Normal"
                  - if:
                      - condition: template
                        value_template: "{{ lamp_state == 'off' }}"
                    then:
                      - action: light.turn_off
                        target:
                          entity_id: light.bedroom_lamps
                        data: {}
              - conditions:
                  - condition: template
                    value_template: "{{bedroom == 'ashlee'}}"
                sequence:
                  - action: script.bedroom_ashlees_door_closed_notification
                  - action: script.send_to_home_log
                    data:
                      message:
                        ":girl: :door: Ashlee's door opened and bedroom light is on. Sending
                        warning."
                      log_level: "Normal"
                  - if:
                      - condition: template
                        value_template: "{{ lamp_state == 'off' }}"
                    then:
                      - action: light.turn_off
                        target:
                          entity_id: light.bedroom_lamps
                        data: {}
            default: []
          - if:
              - condition: state
                entity_id: media_player.bedroom_tv
                state: "paused"
            then:
              - action: media_player.media_play_pause
                target:
                  entity_id: media_player.bedroom_tv
              - action: script.send_to_home_log
                data:
                  message: ":tv: Bedroom Chromecast was on, playing TV."
    mode: single
  bedroom_close_blinds_by_weather:
    alias: Bedroom Close Blinds Based Weather
    description: "Close bedroom blinds depending on the weather."
    fields:
      temperature:
        description: Temperature in celcius.
        required: true
        selector:
          number:
            min: -20
            max: 50
            step: 0.1
            unit_of_measurement: "°c"
            mode: "box"
      weather_condition:
        description: Text weather condition e.g. lightning-rainy
        required: true
        selector:
          text:
    sequence:
      # Only run the weather check if it's during the day otherwise it might be closed for evening.
      - if:
          - condition: sun
            before: sunset
          - condition: state
            entity_id: input_boolean.enable_bedroom_blind_automations
            state: "on"
          - condition: numeric_state
            entity_id: cover.bedroom_blinds
            attribute: current_position
            above: input_number.blind_open_position_threshold
        then:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ weather_condition in ['sunny','partlycloudy'] }}"
                sequence:
                  - choose:
                      # Check if window is open.
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.bedroom_window_contact
                            state: "on"
                        sequence:
                          # TODO: replace with actionable notification
                          - action: script.send_to_home_log
                            data:
                              message: >-
                                It's going to be hot ({{ temperature }} {{ weather_condition }}) and
                                the :window: window is open preventing the blinds from closing.
                              title: ":bed: bedroom"
                              log_level: "Debug"
                    default:
                      - action: script.send_to_home_log
                        data:
                          message: >-
                            It's going to be hot ({{ temperature }} {{ weather_condition }}).
                            Closing blinds.
                          title: ":bed: bedroom"
                          log_level: "Debug"
                      - action: cover.close_cover
                        target:
                          entity_id: cover.bedroom_blinds
            default: []
    mode: single
    icon: mdi:roller-shade-closed
  bedroom_sleep:
    alias: Bedroom Sleep
    sequence:
      - if:
          - condition: state
            entity_id: light.bedroom_clock_matrix
            state: "on"
        then:
          - action: light.turn_off
            data: {}
            target:
              entity_id: light.bedroom_clock_matrix
    mode: single
    icon: mdi:sleep

sensor:
  - platform: history_stats
    name: Bedroom TV Uptime Today
    entity_id: binary_sensor.bedroom_tv_powered_on
    state: "on"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    end: "{{ now() }}"
  - platform: history_stats
    name: Bedroom TV Uptime Yesterday
    entity_id: binary_sensor.bedroom_tv_powered_on
    state: "on"
    type: time
    end: "{{ now().replace(hour=0, minute=0, second=0) }}"
    duration:
      hours: 24
  - platform: history_stats
    name: Bedroom TV Uptime This Week
    entity_id: binary_sensor.bedroom_tv_powered_on
    state: "on"
    type: time
    start: "{{ as_timestamp( now().replace(hour=0, minute=0, second=0) ) - now().weekday() * 86400 }}"
    end: "{{ now() }}"
  - platform: history_stats
    name: Bedroom TV Uptime Last 30 Days
    entity_id: binary_sensor.bedroom_tv_powered_on
    state: "on"
    type: time
    end: "{{ now().replace(hour=0, minute=0, second=0) }}"
    duration:
      days: 30
  # Mould indicator
  - platform: mold_indicator
    name: Bedroom Mould Indicator
    indoor_temp_sensor: sensor.bedroom_door_temperature
    indoor_humidity_sensor: sensor.bedroom_humidity_2
    outdoor_temp_sensor: sensor.gw2000a_outdoor_temperature
    calibration_factor: 1.38

template:
  - binary_sensor:
      - name: Bedroom TV Powered On
        unique_id: 0dcba639-2e46-428e-bb7e-43307fa653b3
        icon: "mdi:television-classic{{ '' if states('sensor.bedroom_tv_plug_power') | float(0) > 40 else '-off' }}"
        device_class: running
        state: "{{ states('sensor.bedroom_tv_plug_power') | float(0) > 40 }}"
      - name: Bed Occupied
        icon: >-
          mdi:bed-double{{ '-outline' if (states('sensor.bed_top_left') | float(0)) >= 0.15
          or (states('sensor.bed_bottom_left') | float(0)) >= 0.15 or
          (states('sensor.bed_top_right') | float(0)) >= 0.15 or
          (states('sensor.bed_bottom_right') | float(0)) >= 0.1 else '' }}
        device_class: occupancy
        state: >-
          {% if (states('sensor.bed_top_left') | float(0)) >= 0.15 or
              (states('sensor.bed_top_right') | float(0)) >= 0.15 or
              (states('sensor.bed_bottom_left') | float(0)) >= 0.15 or
              (states('sensor.bed_bottom_right') | float(0)) >= 0.1 %}
            on
          {% else %}
            off
          {% endif %}
        attributes:
          top_left: "{{ states('sensor.bed_top_left') }}"
          top_right: "{{ states('sensor.bed_top_right') }}"
          bottom_left: "{{ states('sensor.bed_bottom_left') }}"
          bottom_right: "{{ states('sensor.bed_bottom_right') }}"
