# Created by Danny Tsang <danny@tsang.uk>
automation:
  # Bed
  - id: "1601641236163"
    alias: "^Bedroom: Close Blinds When Someone Is In Bed After Sunset"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bed_occupied
        from: "off"
        to: "on"
        for: 00:00:30
    condition:
      - condition: numeric_state
        entity_id: cover.bedroom_blind
        attribute: current_position
        above: input_number.blind_open_position_threshold
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: sun
        after: sunset
      - condition: state
        entity_id: binary_sensor.bedroom_window
        state: "off"
      - condition: state
        entity_id: input_boolean.enable_bed_sensor
        state: "on"
    action:
      - parallel:
        - data:
            message:
              ":sleeping_accommodation: Bedroom :window: window is closed and 
              it's getting late. Closing blinds."
            title: ":bed: Bed occupied in the :bed: bedroom"
          service: script.send_to_home_log
        - service: cover.close_cover
          target:
            entity_id: cover.bedroom_blind
    mode: single
  - id: "1600127180656"
    alias: "^Bedroom: Close Blinds Before Sunrise"
    description: ""
    trigger:
      - event: sunrise
        offset: -02:00:00
        platform: sun
    condition:
      - condition: numeric_state
        entity_id: cover.bedroom_blind
        attribute: current_position
        above: input_number.blind_open_position_threshold
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: state
        entity_id: binary_sensor.bedroom_window
        state: "off"
    action:
      - parallel:
        - data:
            message:
              ":clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and now().minute | int < 35 %}30{% else %}{% endif %}:
              :sunrise: Bedroom blind is open and it's nearly sunrise. Closing
              blinds"
          service: script.send_to_home_log
        - service: cover.close_cover
          target:
            entity_id: cover.bedroom_blind
    mode: single
  - id: "1622667464880"
    alias: "^Bedroom: Window Closed At Night"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_window
        from: "on"
        to: "off"
    condition:
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: sun
        after: sunset
      - condition: sun
        before: sunrise
      - not:
          - condition: state
            entity_id: cover.bedroom_blind
            state: "closed"
    action:
      - parallel:
        - service: script.send_to_home_log
          data:
            message:
              ":window: :city_sunset: Bedroom window closed and it's dark. Closing
              blinds."
        - service: cover.set_cover_position
          data:
            position: 50
    mode: single
  - id: "1615689096351"
    alias: "^Bedroom: Window Closed And Someone Is In Bed At Night"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_window
        from: "on"
        to: "off"
        for: 00:00:30
    condition:
      - condition: numeric_state
        entity_id: cover.bedroom_blind
        attribute: current_position
        above: input_number.blind_open_position_threshold
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: sun
        after: sunset
    action:
      - parallel:
        - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.enable_bed_sensor
                  state: "on"
                - condition: state
                  entity_id: binary_sensor.bed_occupied
                  state: "on"
              sequence:
                - service: script.send_to_home_log
                  data:
                    message:
                      ":sleeping_accommodation: :window: Bedroom window shut, someone is
                      in bed ({{states('sensor.bed_sensor')}}) and it's getting late. Closing
                      blinds."
                    title: "Close :bed: bedroom blinds"
                - service: cover.close_cover
                  target:
                    entity_id: cover.bedroom_blind
            - conditions:
                - condition: state
                  entity_id: input_boolean.enable_bed_sensor
                  state: "off"
              sequence:
                - service: script.send_to_home_log
                  data:
                    message:
                      ":sleeping_accommodation: :window: Bedroom window shut, someone is
                      in bed ({{states('sensor.bed_sensor')}}) and it's getting late. Closing
                      blinds."
                    title: "Close :bed: bedroom blinds"
                - service: cover.close_cover
                  target:
                    entity_id: cover.bedroom_blind
          default: []
    mode: single
  - id: "1601641292576"
    alias: "^Bedroom: Open Blind When No One Is In Bed"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bed_occupied
        from: "on"
        to: "off"
        for: 00:00:30
    condition:
      - condition: numeric_state
        entity_id: cover.bedroom_blind
        attribute: current_position
        below: input_number.blind_closed_position_threshold
      - condition: sun
        after: sunrise
        after_offset: -01:00:00
        before: sunset
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_bed_sensor
        state: "on"
    action:
      - delay: 00:01:00
      - parallel:
        - service: script.send_to_home_log
          data:
            message:
              ":bed: :window: No one is in bed ({{states('sensor.bed_sensor')}}).
              Opening the blinds."
            title: "Open :bed: bedroom blinds"
        - service: cover.open_cover
          target:
            entity_id: cover.bedroom_blind
    mode: single
  # Door
  - id: "1615209552353"
    alias: "^Bedroom: Other Bedroom Door Opens Warning"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.leos_door
        from: "off"
        to: "on"
        id: leo
      - platform: state
        entity_id: binary_sensor.ashlees_door
        id: ashlee
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: light.bedroom_bedside_lights
        state: "on"
      - not:
          - condition: state
            entity_id: input_select.home_mode
            state: Guest
    action:
      - parallel:
        - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.enable_bed_sensor
                  state: "on"
                - condition: state
                  entity_id: binary_sensor.bed_occupied
                  state: "on"
                - condition: trigger
                  id: leo
              sequence:
                - service: script.other_bedroom_door_opening_warning
                  data:
                    bedroom: "leo"
            - conditions:
                - condition: sun
                  after: sunset
                - condition: trigger
                  id: leo
              sequence:
                - service: script.send_to_home_log
                  data:
                    message:
                      ":boy: :door: Leo's door opened and bedroom light is on. Sending
                      warning."
                - service: script.other_bedroom_door_opening_warning
                  data:
                    bedroom: "leo"
            - conditions:
                - condition: state
                  entity_id: input_boolean.enable_bed_sensor
                  state: "on"
                - condition: state
                  entity_id: binary_sensor.bed_occupied
                  state: "on"
                - condition: trigger
                  id: ashlee
              sequence:
                - service: script.other_bedroom_door_opening_warning
                  data:
                    bedroom: "ashlee"
            - conditions:
                - condition: sun
                  after: sunset
                - condition: trigger
                  id: ashlee
              sequence:
                - service: script.other_bedroom_door_opening_warning
                  data:
                    bedroom: "ashlee"
          default: []
    mode: queued
    max: 10
  # Motion triggers
  - id: "1621713217274"
    alias: "^Bedroom: Motion Detected"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_area_motion
        from: "off"
        to: "on"
      - platform: state
        entity_id: input_boolean.enable_bedroom_motion_trigger
        to: "on"
    condition:
      - or:
        - condition: template
          value_template: "{{ state_attr('light.under_bed_light_left','brightness') == none }}"
        - condition: template
          value_template: "{{ state_attr('light.under_bed_light_right','brightness') == none }}"
        - condition: numeric_state
          entity_id: light.under_bed_light_left
          below: "100"
          attribute: brightness
        - condition: numeric_state
          entity_id: light.under_bed_light_right
          below: "100"
          attribute: brightness
    action:
      - parallel:
        - choose:
            - conditions:
              - condition: numeric_state
                entity_id: cover.bedroom_blind
                attribute: current_position
                below: "31"
              sequence:
                - service: script.send_to_home_log
                  data:
                    message:
                      ":paw_prints: :bulb: :low_brightness: Motion detected
                      and the :window: blinds are down. Turning lights on low brightness."
                    title: ":bed: Bedroom"
                - service: scene.turn_on
                  target:
                    entity_id: scene.bedroom_dim_ambient_light
            - conditions:
                - condition: time
                  after: "06:30:00"
                - condition: sun
                  before: sunset
              sequence:
                - service: script.send_to_home_log
                  data:
                    message:
                      ":paw_prints: :bulb: :high_brightness: Motion detected
                      Before sunset. Turning lights on full brightness."
                    title: ":bed: Bedroom"
                - service: scene.turn_on
                  target:
                    entity_id: scene.bedroom_turn_on_ambient_light
            - conditions:
              - or: 
                - condition: sun
                  after: sunset
                - condition: time
                  before: "06:30:00"
              - condition: state
                entity_id: input_boolean.enable_bedroom_motion_trigger
                state: "on"
              sequence:
                - service: script.send_to_home_log
                  data:
                    message:
                      ":paw_prints: :bulb: :low_brightness: Motion detected
                      After sunset. Turning lights on low brightness."
                    title: ":bed: Bedroom"
                - service: scene.turn_on
                  target:
                    entity_id: scene.bedroom_dim_ambient_light
          default: []
    mode: single
  - id: "1621713867762"
    alias: "^Bedroom: No Motion"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_area_motion
        from: "on"
        to: "off"
        for: 00:02:00
    condition:
      - or:
          - condition: state
            entity_id: light.under_bed_light_left
            state: "on"
          - condition: state
            entity_id: light.under_bed_light_right
            state: "on"
      - condition: state
        entity_id: input_boolean.enable_bedroom_motion_trigger
        state: "on"
    action:
      - parallel:
        - service: script.send_to_home_log
          data:
            message: ":no_pedestrians: No motion detected For 1 minute. Turning lights off."
            title: " :bed: Bedroom"
        - service: scene.turn_on
          target:
            entity_id: scene.bedroom_turn_off_ambient_light
    mode: single
  # Time
  - id: "1621875409014"
    alias: "^Bedroom: Morning Timed Open Blinds"
    description: "TODO: Take into account high temperature."
    trigger:
      - platform: time
        at: "08:15:00"
        id: "workday"
      - platform: time
        at: "09:00:00"
        id: "090000"
      - platform: time
        at: "09:30:00"
        id: "093000"
      - platform: time
        at: "10:30:00"
        id: "103000"
    condition:
      - condition: numeric_state
        entity_id: cover.bedroom_blind
        attribute: current_position
        below: input_number.blind_closed_position_threshold
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: state
        entity_id: binary_sensor.bedroom_tv_powered_on
        state: "off"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.workday_sensor
                state: "on"
              # Check if there's an event with "A/L in the work calendar" and the event is on.
              - condition: template
                value_template: "{{ 'Danny' not in state_attr('calendar.work_calendar','message')|string and 
                'A/L' not in state_attr('calendar.work_calendar','message')|string and 
                states('calendar.work_calendar') == 'off' }}"
              - condition: trigger
                id: "workday"
            sequence:
              - service: cover.open_cover
                target:
                  entity_id: cover.bedroom_blind
              - service: script.send_to_home_log
                data:
                  message: ":clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and now().minute | int < 35 %}30{% else %}{% endif %}: 
                  :window: Opening blinds because it's closed and its 08:15 on a weekday!"
                  title: ":bed: Bedroom"
          - conditions:
              # Non workday and no children
              - condition: state
                entity_id: binary_sensor.workday_sensor
                state: "off"
              - not:
                  - condition: state
                    entity_id: input_select.home_mode
                    state: No Children
              - condition: trigger
                id: "093000"
            sequence:
              - service: cover.open_cover
                target:
                  entity_id: cover.bedroom_blind
              - service: script.send_to_home_log
                data:
                  message: ":clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and 
                  now().minute | int < 35 %}30{% else %}{% endif %}: :window: Opening blinds because 
                  it's closed and its 09:30 on a weekend!"
                  title: ":bed: Bedroom"
          - conditions:
              - condition: trigger
                id: "090000"
              - condition: state
                entity_id: group.adult_people
                state: "not_home"
            sequence:
              - service: cover.open_cover
                target:
                  entity_id: cover.bedroom_blind
              - service: script.send_to_home_log
                data:
                  message: ":clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and 
                  now().minute | int < 35 %}30{% else %}{% endif %}: :window: Opening blinds because 
                  it's closed, no one is home and its 09:00!"
                  title: ":bed: Bedroom"
          - conditions:
              - condition: trigger
                id: "103000"
            sequence:
              - service: cover.open_cover
                target:
                  entity_id: cover.bedroom_blind
              - service: script.send_to_home_log
                data:
                  message: ":clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and 
                  now().minute | int < 35 %}30{% else %}{% endif %}: :window: Opening blinds because 
                  it's closed and its 10:30!"
                  title: ":bed: Bedroom"
        default: []
    mode: single
  - id: "1621875567853"
    alias: "^Bedroom: Evening Timed Blinds"
    description: ""
    trigger:
      - platform: time
        at: "22:00:00"
    condition:
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: numeric_state
        entity_id: cover.bedroom_blind
        attribute: current_position
        above: input_number.blind_open_position_threshold
    action:
      - parallel:
        - service: script.send_to_home_log
          data:
            message: ":clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and 
            now().minute | int < 35 %}30{% else %}{% endif %}: 
            :city_sunset: :window: It's getting dark, closing bedroom's blinds."
            title: "Close :bed: bedroom blinds"
        - choose:
            - conditions:
                - condition: state
                  entity_id: binary_sensor.bedroom_window
                  state: "on"
              sequence:
                - service: script.send_to_home_log
                  data:
                    message:
                      ":warning: :window: Bedroom window is still open. Waiting until
                      it's closed before closing blinds. :warning:"
          default:
            - service: cover.close_cover
              target:
                entity_id: cover.bedroom_blind
    mode: single
  # Plugs / switches
  - id: "1581800266867"
    alias: "^Turn off Electric Blanket After 1 hour"
    description: ""
    trigger:
      - entity_id: switch.blanket
        for: 01:00:00
        platform: state
        to: "'on'"
    condition: []
    action:
      - parallel:
        - data: {}
          entity_id: switch.blanket
          service: switch.turn_off
        - data:
            message: Electric blanket has been on for 1 hour. Turning electric blanket off.
            title: ":bed: Bedroom heated blanket"
          service: script.send_to_home_log
  - id: "1624194131454"
    alias: "^Bedroom: TV Turned On During Bright Day"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_tv_powered_on
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: sun
        before: sunset
        after: sunrise
      - condition: numeric_state
        entity_id: cover.bedroom_blind
        attribute: current_position
        above: input_number.blind_open_position_threshold
    action:
      - parallel:
        - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.enable_direct_notifications
                  state: "on"
                - condition: state
                  entity_id: binary_sensor.bedroom_window
                  state: "on"
              sequence:
                - service: script.send_actionable_notification_with_2_buttons
                  data:
                    message: Do you want to close the blinds?
                    title: 📺🛌TV On & Window Is Open
                    people: ['person.danny']
                    action1_title: "Yes"
                    action1_name: set_bedroom_blinds_30
                    action2_title: "No"
                    action2_name: ignore
            - conditions:
                - condition: state
                  entity_id: binary_sensor.bedroom_window
                  state: "off"
              sequence:
                - service: script.send_to_home_log
                  data:
                    message:
                      ":tv: :bed: Bedroom TV turned on and it's bright. Lowering bedroom
                      blinds."
                    title: "Close :bed: bedroom blinds"
                - service: cover.set_cover_position
                  target:
                    entity_id: cover.bedroom_blind
                  data:
                    position: 20
          default: []
    mode: single
  - id: "1624194439043"
    alias: "^Bedroom: TV Turned Off"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_tv_powered_on
        from: "on"
        to: "off"
        for: 00:01:00
    condition:
      - condition: numeric_state
        entity_id: cover.bedroom_blind
        attribute: current_position
        below: input_number.bedroom_blind_open_closed_threshold
      - condition: state
        entity_id: input_boolean.enable_bedroom_blind_automations
        state: "on"
      - condition: sun
        before: sunset
      - condition: sun
        after: sunrise
      - condition: time
        after: "08:30"
    action:
      - choose:
        - conditions:
          - or:
            - condition: numeric_state
              entity_id: weather.home_weather
              attribute: temperature
              above: input_number.forecast_high_temperature
            - condition: numeric_state
              entity_id: weather.home_hourly
              attribute: temperature
              above: input_number.forecast_high_temperature
          sequence:
            - service: script.send_to_home_log
              data:
                message: ":tv: TV turned off but above weather is above 
                {{ states('input_number.forecast_high_temperature') }}
                ({{ state_attr('weather.home_weather', 'temperature')|float(0) 
                if state_attr('weather.home_weather', 'temperature')|float(0) > state_attr('weather.home_hourly', 'temperature')|float(0) 
                else state_attr('weather.home_hourly', 'temperature')|float(0) }} }})
                {{ state_attr('input_number.forecast_high_temperature', 'unit_of_measurement') }}. 
                Keeping blinds closed."
                title: ":bed: Bedroom"
        default:
          - parallel:
            - service: script.send_to_home_log
              data:
                message: ":tv: TV turned off. Opening Blinds."
                title: ":bed: Bedroom"
            - service: cover.open_cover
              target:
                entity_id: cover.bedroom_blind
    mode: single
  - id: "1644769166837"
    alias: "^Bedroom: Danny's Alarm"
    description: ""
    trigger:
      - platform: state
        entity_id: input_text.sleep_as_android
        to: alarm_alert_start
    condition: []
    action:
      - parallel:
        - choose:
            - conditions:
                - condition: state
                  entity_id: person.danny
                  state: home
                - condition: state
                  entity_id: input_boolean.enable_bedroom_blind_automations
                  state: "on"
                - condition: numeric_state
                  entity_id: cover.bedroom_blind
                  attribute: current_position
                  below: input_number.blind_closed_position_threshold
              sequence:
                - service: script.send_to_home_log
                  data:
                    message:
                      ":bed: :alarm_clock: Alarm triggered. Opening bedroom 
                      blinds in 1 minute."
                    title: "Sleep as Android"
                - delay:
                    hours: 0
                    minutes: 5
                    seconds: 0
                    milliseconds: 0
                - service: cover.open_cover
                  data: {}
                  target:
                    entity_id: cover.bedroom_blind
            - conditions:
                - condition: state
                  entity_id: person.danny
                  state: home
              sequence:
                - service: script.send_to_home_log
                  data:
                    message:
                      ":bed: :alarm_clock: alarm triggered."
                    title: "Sleep as Android"
          default: []
    mode: single
  - id: "1633272413519"
    alias: "^Bedroom: Turn Off Heated Blanket"
    description: ""
    trigger:
      - platform: state
        entity_id: switch.blanket
        to: "on"
        for:
          hours: 1
          minutes: 0
          seconds: 0
          milliseconds: 0
    condition: []
    action:
      - parallel:
        - service: script.send_to_home_log
          data:
            message:
              ":bed: :hotsprings: Heated blanket has been on for :hourglass: an hour.
              Turning heated blanket off."
        - service: switch.turn_off
          target:
            entity_id: switch.blanket
    mode: single
  - id: "1656355431187"
    alias: "^Bedroom: Hue Remote"
    description: ""
    trigger:
      - platform: event
        event_type: hue_event
        event_data:
          id: bedroom_switch_button
          type: short_release
    condition: []
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.unique_id == '1'}}"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: Power button pressed.
                  title: ":bed: Bedroom"
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.unique_id == '0'}}"
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: Hue buttom on remote pressed.
                      title: ":bed: Bedroom"
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.unique_id == 'a'}}"
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: Bright buttom on remote pressed.
                      title: ":bed: Bedroom"
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.unique_id == '0'}}"
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: Dim buttom on remote pressed.
                      title: ":bed: Bedroom"
        default:
          - service: script.send_to_home_log
            data:
              message:
                "Hue Remote\n id: {{trigger.event.data.id}}\n type: {{trigger.event.data.type}}\n\
                \ unique ID: {{trigger.event.data.unique_id}}"
              title: ":bed: Bedroom"
    mode: queued
    max: 10

scene:
  - id: "1621715555428"
    name: "Bedroom: Turn On Ambient Light"
    entities:
      light.under_bed_light_left:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        supported_color_modes:
          - color_temp
          - hs
        color_mode: color_temp
        brightness: 128
        color_temp: 366
        effect: none
        friendly_name: Under Bed Left
        icon: mdi:led-strip-variant
        supported_features: 63
        state: "on"
      light.under_bed_light_right:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        supported_color_modes:
          - color_temp
          - hs
        color_mode: color_temp
        brightness: 128
        color_temp: 366
        effect: none
        friendly_name: Under Bed Right
        icon: mdi:led-strip-variant
        supported_features: 63
        state: "on"
    icon: mdi:led-strip-variant
  - id: "1621715588909"
    name: "Bedroom: Dim Ambient Light"
    entities:
      light.under_bed_light_left:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        supported_color_modes:
          - color_temp
          - hs
        color_mode: color_temp
        brightness: 15
        color_temp: 366
        effect: none
        friendly_name: Under Bed Left
        icon: mdi:led-strip-variant
        supported_features: 63
        state: "on"
      light.under_bed_light_right:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        supported_color_modes:
          - color_temp
          - hs
        color_mode: color_temp
        brightness: 15
        color_temp: 366
        effect: none
        friendly_name: Under Bed Right
        icon: mdi:led-strip-variant
        supported_features: 63
        state: "on"
    icon: mdi:led-strip-variant
  - id: "1621715612398"
    name: "Bedroom: Turn Off Ambient Light"
    entities:
      light.under_bed_light_left:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        supported_color_modes:
          - color_temp
          - hs
        friendly_name: Under Bed Left
        icon: mdi:led-strip-variant
        supported_features: 63
        state: "off"
      light.under_bed_light_right:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        supported_color_modes:
          - color_temp
          - hs
        friendly_name: Under Bed Right
        icon: mdi:led-strip-variant
        supported_features: 63
        state: "off"
    icon: mdi:led-strip-variant
  - id: "1615211281868"
    name: "Bedroom: Desk Lamps On"
    entities:
      light.bedroom_left_lamp:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        brightness: 200
        hs_color:
          - 38.667
          - 52.941
        rgb_color:
          - 255
          - 207
          - 120
        xy_color:
          - 0.457
          - 0.41
        effect: none
        friendly_name: Light A
        icon: mdi:desk-lamp
        supported_features: 63
        state: "on"
      light.bedroom_right_lamp:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        brightness: 200
        hs_color:
          - 38.667
          - 52.941
        rgb_color:
          - 255
          - 207
          - 120
        xy_color:
          - 0.457
          - 0.41
        effect: none
        friendly_name: Light B
        icon: mdi:desk-lamp
        supported_features: 63
        state: "on"
    icon: mdi:lightbulb
  - id: "1615211309175"
    name: "Bedroom: Desk Lamps Off"
    entities:
      light.bedroom_left_lamp:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        friendly_name: Light A
        icon: mdi:desk-lamp
        supported_features: 63
        state: "off"
      light.bedroom_right_lamp:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        friendly_name: Light B
        icon: mdi:desk-lamp
        supported_features: 63
        state: "off"
    icon: mdi:lightbulb

script:
  bedroom_leos_door_opened_notification:
    alias: Bedroom Leo's Door Opened Notification
    sequence:
      - repeat:
          count: "2"
          sequence:
            - service: light.turn_on
              data:
                color_name: blue
              target:
                entity_id:
                  - light.bedroom_left_lamp
                  - light.bedroom_right_lamp
            - service: light.turn_off
              target:
                entity_id:
                  - light.bedroom_left_lamp
                  - light.bedroom_right_lamp
      - service: scene.turn_on
        target:
          entity_id: scene.bedroom_desk_lamps_on
    mode: single
  bedroom_ashlees_door_opened_notification:
    alias: Bedroom Ashlee's Door Opened Notification
    sequence:
      - repeat:
          count: "2"
          sequence:
            - service: light.turn_on
              data:
                color_name: pink
              target:
                entity_id:
                  - light.bedroom_left_lamp
                  - light.bedroom_right_lamp
            - service: light.turn_off
              target:
                entity_id:
                  - light.bedroom_left_lamp
                  - light.bedroom_right_lamp
      - service: scene.turn_on
        target:
          entity_id: scene.bedroom_desk_lamps_on
    mode: single
  other_bedroom_door_opening_warning:
    alias: Other Bedroom Door Opening Warning
    fields:
      bedroom:
        name: Bedroom
        description: Which bedroom door was opened.
        required: true
    sequence:
      - parallel:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{bedroom == 'leo'}}"
                sequence:
                  - service: script.bedroom_leos_door_opened_notification
                  - service: script.send_to_home_log
                    data:
                      message:
                        ":boy: :door: Leo's door opened and bedroom light is on. Sending
                        warning."
              - conditions:
                  - condition: template
                    value_template: "{{bedroom == 'ashlee'}}"
                sequence:
                  - service: script.bedroom_ashlees_door_opened_notification
                  - service: script.send_to_home_log
                    data:
                      message:
                        ":girl: :door: Ashlee's door opened and bedroom light is on. Sending
                        warning."
            default: []
          - if:
              - condition: state
                entity_id: media_player.bedroom_chromecast
                state: playing
            then:
              - service: media_player.media_play_pause
                target:
                  entity_id: media_player.bedroom_chromecast
              - service: script.send_to_home_log
                data:
                  message: ":tv: Bedroom Chromecast was on, pausing TV."
    mode: single
  bedroom_close_blinds_by_weather:
    alias: Bedroom Close Blinds Based Weather
    description: "Close bedroom blinds depending on the weather."
    fields:
      temperature:
        description: Temperature in celcius.
        required: true
      weather_condition:
        description: Text weather condition e.g. lightning-rainy
        required: true
    sequence:
      # Only run the weather check if it's during the day otherwise it might be closed for evening.
      - if:
          - condition: sun
            before: sunset
          - condition: state
            entity_id: input_boolean.enable_bedroom_blind_automations
            state: "on"
          - condition: numeric_state
            entity_id: cover.bedroom_blind
            attribute: current_position
            above: input_number.blind_open_position_threshold
        then:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ weather_condition in ['sunny','partlycloudy'] }}"
                sequence:
                  - choose:
                    # Check if window is open.
                    - conditions:
                        - condition: state
                          entity_id: binary_sensor.bedroom_window
                          state: "on"
                      sequence:
                        # TODO: replace with actionable notification
                        - service: script.send_to_home_log
                          data:
                            message:
                              "It's going to be hot ({{ temperature }} {{ weather_condition }}) and 
                              the :window: window is open preventing the blinds from closing."
                            title: ":bed: Bedroom"
                    default:
                      - service: script.send_to_home_log
                        data:
                          message:
                            "It's going to be hot ({{ temperature }} {{ weather_condition }}). Closing blinds."
                          title: ":bed: Bedroom"
                      - service: cover.close_cover
                        target:
                          entity_id: cover.bedroom_blind
            default: []
    mode: single
    icon: mdi:roller-shade-closed
  bedroom_sleep:
    alias: Bedroom Sleep
    sequence:
      - service: script.turn_everything_off
        data: {}
    mode: single
    icon: mdi:sleep

sensor:
  - platform: history_stats
    name: Bedroom TV Uptime Today
    entity_id: binary_sensor.bedroom_tv_powered_on
    state: "on"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    end: "{{ now() }}"
  - platform: history_stats
    name: Bedroom TV Uptime Yesterday
    entity_id: binary_sensor.bedroom_tv_powered_on
    state: "on"
    type: time
    end: "{{ now().replace(hour=0, minute=0, second=0) }}"
    duration:
      hours: 24
  - platform: history_stats
    name: Bedroom TV Uptime This Week
    entity_id: binary_sensor.bedroom_tv_powered_on
    state: "on"
    type: time
    start: "{{ as_timestamp( now().replace(hour=0, minute=0, second=0) ) - now().weekday() * 86400 }}"
    end: "{{ now() }}"
  - platform: history_stats
    name: Bedroom TV Uptime Last 30 Days
    entity_id: binary_sensor.bedroom_tv_powered_on
    state: "on"
    type: time
    end: "{{ now().replace(hour=0, minute=0, second=0) }}"
    duration:
      days: 30

template:
  - binary_sensor:
    - name: Bedroom TV Powered On
      icon: "mdi:television-classic{{ '' if states('sensor.bedroom_right_socket_1_power_meter') | float(0) > 40 else '-off' }}"
      device_class: running
      state: "{{ states('sensor.bedroom_right_socket_1_power_meter') | float(0) > 40 }}"
    - name: Bed Occupied
      icon: >- 
        mdi:bed-double{{ '-outline' if states('sensor.bed_top_left') | float(0) >= 0.15
        or states('sensor.bed_bottom_left') | float(0) >= 0.15 or
        states('sensor.bed_top_right') | float(0) >= 0.15 or
        states('sensor.bed_bottom_right') | float(0) >= 0.1 else '' }}
      device_class: occupancy
      state: >-
        {% if states('sensor.bed_top_left') | float(0) >= 0.15 or
            states('sensor.bed_top_right') | float(0) >= 0.15 or 
            states('sensor.bed_bottom_left') | float(0) >= 0.15 or
            states('sensor.bed_bottom_right') | float(0) >= 0.1 %}
          on
        {% else %}
          off
        {% endif %}
      attributes:
        top_left: "{{ states('sensor.bed_top_left') }}"
        top_right: "{{ states('sensor.bed_top_right') }}"
        bottom_left: "{{ states('sensor.bed_bottom_left') }}"
        bottom_right: "{{ states('sensor.bed_bottom_right') }}"
    - name: Bedroom Blind Anticipated State
      device_class: opening
      state: 
        "{{ states('sensor.front_garden_motion_light_level')|float(0) < states('input_number.close_blinds_brightness_threshold'|float(10000))
        and states('sun.sun') == 'above_horizon' 
        and states('weather.home_weather') < states('input_number.forecast_high_temperature')|float(24) 
        and states('weather.home_hourly') < states('input_number.forecast_high_temperature')|float(24) 
        and states('binary_sensor.bedroom_tv_powered_on') == 'off'
        and weather_condition in ['sunny','partlycloudy'] 
        and states('binary_sensor.bedroom_window') }}"
      attributes:
        brightness: "{{ states('sensor.front_garden_motion_light_level')|float(0) < states('input_number.close_blinds_brightness_threshold'|float(10000)) }}"
        sun: "{{ states('sun.sun') == 'above_horizon' }}"
        temperature_forecast: "{{ states('weather.home_weather') < states('input_number.forecast_high_temperature')|float(24) }}"
        temperature_hour_forecast: "{{ states('weather.home_hourly') < states('input_number.forecast_high_temperature')|float(24) }}"
        tv_running: "{{ states('binary_sensor.bedroom_tv_powered_on') == 'off' }}"
        weather: "{{ weather_condition in ['sunny','partlycloudy'] }}"
        window: "{{ states('binary_sensor.bedroom_window') }}"
