# Created by Danny Tsang <danny@tsang.uk>
automation:
  # Motion
  - id: "1610307951215"
    alias: "^Bathroom: Motion Detected, Light Off And It's Dark"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_light_trigger
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.enable_bathroom_motion_triggers
        state: "on"
      - condition: state
        entity_id: input_boolean.bathroom_light_override
        state: "off"
      - condition: state
        entity_id: light.bathroom
        state: "off"
    action:
      - choose:
          # Bedroom light is on
          - conditions:
              - condition: numeric_state
                entity_id: sensor.bathroom_motion_2_light_level
                below: input_number.bathroom_light_level_threshold
              - or:
                  - condition: sun
                    before: sunrise
                  - condition: time
                    before: "05:30:00"
              - condition: state
                entity_id: light.bedroom_bedside_lights
                state: "on"
            sequence:
              - parallel:
                - service: script.send_to_home_log
                  data:
                    message: ":paw_prints: Motion detected, it's dark ({{ states('sensor.bathroom_motion_light_level') }} < 
                        {{ states('input_number.bathroom_light_level_threshold') }} 
                        {{ state_attr('input_number.bathroom_light_level_threshold','unit_of_measurement') }}) 
                        and it's :clock12: late. :bed: Bedroom lights are still on so turning bathroom :high_brightness: :bulb: light on."
                    title: ":bathtub: Bathroom"
                - service: scene.turn_on
                  target:
                    entity_id: scene.bathroom_light_on
          - conditions:
              - condition: numeric_state
                entity_id: sensor.bathroom_motion_2_light_level
                below: input_number.bathroom_light_level_threshold
              - or:
                  - condition: sun
                    before: sunrise
                  - condition: time
                    before: "05:30:00"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: ":paw_prints: Motion detected, it's dark ({{ states('sensor.bathroom_motion_light_level') }} < 
                      {{ states('input_number.bathroom_light_level_threshold') }} 
                      {{ state_attr('input_number.bathroom_light_level_threshold','unit_of_measurement') }}) and 
                      it's :clock12: late. Turning bathroom night :low_brightness: :bulb: light on."
                  title: ":bathtub: Bathroom"
              - service: scene.turn_on
                target:
                  entity_id: scene.bathroom_night_light
          - conditions:
              - condition: state
                entity_id: input_select.home_mode
                state: Guest
              - condition: numeric_state
                entity_id: sensor.bathroom_motion_2_light_level
                below: input_number.bathroom_light_level_threshold
            sequence:
              - parallel:
                - service: script.send_to_home_log
                  data:
                    message: ":paw_prints: Motion detected, it's dark in :busts_in_silhouette: 
                        guest mode ({{ states('sensor.bathroom_motion_light_level') }} < 
                        {{ states('input_number.bathroom_light_level_threshold') }} 
                        {{ state_attr('input_number.bathroom_light_level_threshold','unit_of_measurement') }}). 
                        Turning :high_brightness: :bulb: lights on."
                    title: ":bathtub: Bathroom"
                - service: scene.turn_on
                  target:
                    entity_id: scene.bathroom_light_on
          - conditions:
              - not:
                  - condition: state
                    entity_id: input_select.home_mode
                    state: Guest
              - condition: numeric_state
                entity_id: sensor.bathroom_motion_2_light_level
                below: input_number.bathroom_light_level_threshold
            sequence:
              - parallel:
                - service: script.send_to_home_log
                  data:
                    message:
                      ":paw_prints: Motion detected, it's dark ({{ states('sensor.bathroom_motion_light_level') }}
                      < {{ states('input_number.bathroom_light_level_threshold') }} 
                      {{ state_attr('input_number.bathroom_light_level_threshold','unit_of_measurement') }}). 
                      Turning :high_brightness: :bulb: lights on."
                    title: ":bathtub: Bathroom"
                - service: scene.turn_on
                  target:
                    entity_id: scene.bathroom_light_on
        default: []
    mode: single
  - id: "1610307951216"
    alias: "^Bathroom: Motion Detected, Light is On And It's Dark"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_light_trigger
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.enable_bathroom_motion_triggers
        state: "on"
      - condition: state
        entity_id: input_boolean.bathroom_light_override
        state: "off"
      - condition: state
        entity_id: light.bathroom
        state: "on"
      - or:
          - condition: numeric_state
            entity_id: light.bathroom
            attribute: brightness
            below: input_number.bathroom_light_level_threshold
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.bathroom_motion_2_light_level
                below: input_number.bathroom_light_level_threshold
              - or:
                  - condition: sun
                    before: sunrise
                  - condition: time
                    before: "05:30:00"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: ":paw_prints: Motion detected, it's dark ({{ states('sensor.bathroom_motion_light_level') }} < 
                      {{ states('input_number.bathroom_light_level_threshold') }} 
                      {{ state_attr('input_number.bathroom_light_level_threshold','unit_of_measurement') }}) 
                      and it's :clock12: late. Turning stairs night :low_brightness: :bulb: light on."
                  title: ":bathtub: Bathroom"
              - service: scene.turn_on
                target:
                  entity_id: scene.bathroom_night_light
          - conditions:
              - condition: state
                entity_id: input_select.home_mode
                state: Guest
              - condition: numeric_state
                entity_id: sensor.bathroom_motion_2_light_level
                below: input_number.bathroom_light_level_threshold
            sequence:
              - service: script.send_to_home_log
                data:
                  message: ":paw_prints: Motion detected, it's dark in :busts_in_silhouette: 
                      guest mode ({{ states('sensor.bathroom_motion_light_level') }} < 
                      {{ states('input_number.bathroom_light_level_threshold') }} 
                      {{ state_attr('input_number.bathroom_light_level_threshold','unit_of_measurement') }}). 
                      Turning :high_brightness: :bulb: lights on."
                  title: ":bathtub: Bathroom"
              - service: scene.turn_on
                target:
                  entity_id: scene.bathroom_light_on
          - conditions:
              - not:
                  - condition: state
                    entity_id: input_select.home_mode
                    state: Guest
              - condition: numeric_state
                entity_id: sensor.bathroom_motion_2_light_level
                below: input_number.bathroom_light_level_threshold
            sequence:
              - service: script.send_to_home_log
                data:
                  message: ":paw_prints: Motion detected, it's dark ({{ states('sensor.bathroom_motion_light_level') }}
                    < {{ states('input_number.bathroom_light_level_threshold') }} 
                    {{ state_attr('input_number.bathroom_light_level_threshold','unit_of_measurement') }}). 
                    Turning :high_brightness: :bulb: lights on."
                  title: ":bathtub: Bathroom"
              - service: scene.turn_on
                target:
                  entity_id: scene.bathroom_light_on
        default: []
    mode: single
  - id: "1610314735644"
    alias: "^Bathroom: No Motion Detected"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_light_trigger
        to: "off"
        for: 00:03:30
        id: door_open
      - platform: state
        entity_id: binary_sensor.bathroom_light_trigger
        to: "off"
        for: 00:05:30
        id: door_open_night
      - platform: state
        entity_id: binary_sensor.bathroom_light_trigger
        to: "off"
        for: 00:12:00
        id: door_closed
    condition:
      - condition: state
        entity_id: light.bathroom
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_bathroom_motion_triggers
        state: "on"
    action:
      - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.bathroom_door
              state: "on"
            - condition: state
              entity_id: input_boolean.bathroom_light_override
              state: "off"
            - condition: trigger
              id: door_open
            - condition: time
              before: "22:00:00"
          sequence:
            - service: script.send_to_home_log
              data:
                message:
                  ":no_pedestrians: No motion again and door is open. Turning bathroom
                  light off."
                title: ":bathtub: Bathroom"
            - service: scene.turn_on
              target:
                entity_id: scene.bathroom_turn_off_light
              data:
                transition: 2
        - conditions:
            - condition: state
              entity_id: binary_sensor.bathroom_door
              state: "on"
            - condition: state
              entity_id: input_boolean.bathroom_light_override
              state: "off"
            - condition: trigger
              id: door_open_night
            - condition: time
              after: "22:00:00"
          sequence:
            - service: script.send_to_home_log
              data:
                message: ":no_pedestrians: No motion and :door: door is open after :clock10: 22:00. Turning 
                  :high_brightness: :bulb: light off."
                title: ":bathtub: Bathroom"
            - service: scene.turn_on
              target:
                entity_id: scene.bathroom_turn_off_light
              data:
                transition: 2
        - conditions:
            - condition: state
              entity_id: binary_sensor.bathroom_door
              state: "off"
            - condition: trigger
              id: door_closed
          sequence:
            - service: script.send_to_home_log
              data:
                message: ":no_pedestrians: No motion. Turning light off."
                title: ":bathtub: Bathroom"
            - service: scene.turn_on
              target:
                entity_id: scene.bathroom_turn_off_light
              data:
                transition: 2
        default: []
    mode: single
  - id: "1611164800136"
    alias: "^Bathroom: No Motion Detected Dimming Lights"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_light_trigger
        to: "off"
        for: 00:03:00
        id: short
      - platform: state
        entity_id: binary_sensor.bathroom_light_trigger
        to: "off"
        for: 00:04:30
        id: evening
      - platform: state
        entity_id: binary_sensor.bathroom_light_trigger
        to: "off"
        for: 00:10:00
        id: long
    condition:
      - condition: state
        entity_id: light.bathroom
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_bathroom_motion_triggers
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.bathroom_door
                state: "on"
              - condition: state
                entity_id: input_boolean.bathroom_light_override
                state: "off"
              - condition: trigger
                id: short
              - condition: time
                before: "22:00:00"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: ":no_pedestrians: No motion and :door: Door is open. Dimming :low_brightness: :bulb: light."
                  title: ":bathtub: Bathroom"
              - service: scene.turn_on
                target:
                  entity_id: scene.bathroom_dim_lights
                data:
                  transition: 2
          - conditions:
              - condition: state
                entity_id: binary_sensor.bathroom_door
                state: "on"
              - condition: state
                entity_id: input_boolean.bathroom_light_override
                state: "off"
              - condition: trigger
                id: evening
              - condition: time
                after: "22:00:00"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: ":no_pedestrians: No motion  and :door: door is open after :clock10: 22:00.
                    Dimming :low_brightness: :bulb: light."
                  title: ":bathtub: Bathroom"
              - service: scene.turn_on
                target:
                  entity_id: scene.bathroom_dim_lights
                data:
                  transition: 2
          - conditions:
              - condition: state
                entity_id: binary_sensor.bathroom_door
                state: "off"
              - condition: trigger
                id: long
            sequence:
              - service: script.send_to_home_log
                data:
                  message:
                    " and :no_pedestrians: No motion :door: door is closed. Dimming :low_brightness: :bulb: light."
                  title: ":bathtub: Bathroom"
              - service: scene.turn_on
                target:
                  entity_id: scene.bathroom_dim_lights
                data:
                  transition: 2
        default: []
    mode: single
  # Door
  - id: "1613684184857"
    alias: "^Bathroom: Door Opened"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_door
        to: "on"
        from: "off"
    condition: []
    action:
      - service: script.send_to_home_log
        data:
          message: ":door: Door opened. Incrementing counter :abacus: from 
            {{ states('counter.bathroom_door_opened_closed') }} to {{ states('counter.bathroom_door_opened_closed')
            | int + state_attr('counter.bathroom_door_opened_closed', 'step') | int }}."
          title: ":bathtub: Bathroom"
      - service: counter.increment
        data: {}
        entity_id: counter.bathroom_door_opened_closed
    mode: single
  - id: "1611164672680"
    alias: "^Bathroom: Door Closed And It's Dark"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_door
        to: "off"
        from: "on"
    condition:
      - condition: state
        entity_id: input_boolean.enable_bathroom_motion_triggers
        state: "on"
      - condition: numeric_state
        entity_id: sensor.bathroom_motion_light_level
        below: input_number.bathroom_light_level_threshold
    action:
      - choose:
        - conditions:
            - or:
                - condition: sun
                  before: sunrise
                - condition: time
                  before: "05:30:00"
          sequence: 
            - service: script.send_to_home_log
              data:
                message: ":paw_prints: Motion detected, it's dark ({{ states('sensor.bathroom_motion_light_level') }} < 
                    {{ states('input_number.bathroom_light_level_threshold') }} 
                    {{ state_attr('input_number.bathroom_light_level_threshold','unit_of_measurement') }}) 
                    and it's :clock12: late. Turning night :low_brightness: :bulb: light on."
                title: ":bathtub: Bathroom"
            - service: scene.turn_on
              target:
                entity_id: scene.bathroom_night_light
        default: 
          - service: script.send_to_home_log
            data:
              message: ":paw_prints: Motion detected, :door: door closed and it's dark
              ({{ states('sensor.bathroom_motion_light_level') }} lux < 30 lux). 
              Turning :high_brightness: :bulb: lights on."
              title: ":bathtub: Bathroom"
          - service: scene.turn_on
            target:
              entity_id: scene.bathroom_light_on
    mode: single
  - id: "1613684645058"
    alias: "Bathroom: Door Opened Once For More than 20 seconds"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_door
        to: "on"
        from: "off"
        for: 00:00:20
    condition:
      - condition: numeric_state
        entity_id: counter.bathroom_door_opened_closed
        below: "2"
    action:
      - service: script.send_to_home_log
        data:
          message: ":door: Door opened for more than 20 secs. Resetting :abacus: counter 
            from {{ states('counter.bathroom_door_opened_closed')
            }} to 0"
          title: ":bathtub: Bathroom"
      - service: counter.reset
        data: {}
        entity_id: counter.bathroom_door_opened_closed
    mode: single
  - id: "1613697803282"
    alias: "^Bathroom: Door Closed And Opened In Succession"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: counter.bathroom_door_opened_closed
        above: "1"
    condition:
      - condition: state
        entity_id: input_boolean.enable_bathroom_light_override
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.bathroom_light_override
                state: "off"
            sequence:
              - service: script.send_to_home_log
                data:
                  message:
                    ":door: Door closed and opened {{ states('counter.bathroom_door_opened_closed')
                    }}x in 30 seconds, keeping :bulb: lights on for 10 minutes."
                  title: ":bathtub: Bathroom"
              - service: script.bathroom_flash_light
                data: {}
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 2
                  milliseconds: 0
              - service: scene.turn_on
                target:
                  entity_id: scene.bathroom_light_on
              - service: counter.reset
                data: {}
                entity_id: counter.bathroom_door_opened_closed
              - service: input_boolean.turn_on
                data: {}
                entity_id: input_boolean.bathroom_light_override
          - conditions:
              - condition: state
                entity_id: input_boolean.bathroom_light_override
                state: "on"
            sequence:
              - service: script.send_to_home_log
                data:
                  message:
                    ":door: Door closed and opened {{ states('counter.bathroom_door_opened_closed')
                    }} in 30 seconds, resetting lights to :paw_prints: motion detection."
                  title: ":bathtub: Bathroom"
              - service: script.bathroom_flash_light
                data: {}
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 2
                  milliseconds: 0
              - service: scene.turn_on
                target:
                  entity_id: scene.bathroom_turn_off_light
                data:
                  transition: 2
              - service: counter.reset
                data: {}
                entity_id: counter.bathroom_door_opened_closed
              - service: input_boolean.turn_off
                data: {}
                entity_id: input_boolean.bathroom_light_override
        default: []
    mode: single
  - id: "1613695680298"
    alias: "^Bathroom: Light Override Dim"
    description: ""
    trigger:
      - platform: state
        entity_id: input_boolean.bathroom_light_override
        to: "on"
        from: "off"
        for: 00:10:00
    condition: []
    action:
      - service: script.send_to_home_log
        data:
          message: "Light override has been on for 10 minutes. Dimming :low_brightness: :bulb: lights."
          title: ":bathtub: Bathroom"
      - service: scene.turn_on
        target:
          entity_id: scene.bathroom_dim_lights
    mode: single
  - id: "1613695788304"
    alias: "^Bathroom: Light Override Turn Off"
    description: ""
    trigger:
      - platform: state
        entity_id: input_boolean.bathroom_light_override
        to: "on"
        for: 00:11:00
    condition: []
    action:
      - service: script.send_to_home_log
        data:
          message: "Light override has been on for 11 minutes. Turning light off."
          title: ":bathtub: Bathroom"
      - service: scene.turn_on
        target:
          entity_id: scene.bathroom_turn_off_light
      - service: input_boolean.turn_off
        data: {}
        entity_id: input_boolean.bathroom_light_override
    mode: single
  # Blinds
  - id: "1621203193434"
    alias: "^Bathroom: Open Blinds In The Morning"
    description: ""
    trigger:
      - platform: time
        at: 07:00:00
    condition:
      - condition: state
        entity_id: input_boolean.enable_bathroom_blind_automations
        state: "on"
    action:
      - service: script.send_to_home_log
        data:
          message: "Opening bathroom :window: blinds"
          title: ":bathtub: Bathroom"
      - service: cover.open_cover
        target:
          entity_id: cover.bathroom_blinds
    mode: single
  - id: "1621203351544"
    alias: "^Bathroom: Close Blinds At Night"
    description: ""
    trigger:
      - platform: time
        at: 00:00:00
    condition:
      - condition: state
        entity_id: input_boolean.enable_bathroom_blind_automations
        state: "on"
    action:
      - service: script.send_to_home_log
        data:
          message: ":city_sunset: :window: It's getting dark, closing bathroom's blinds."
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.bathroom_window
                state: "on"
            sequence:
              - service: script.send_to_home_log
                data:
                  message:
                    ":warning: :window: Bathroom window is still open. Waiting until
                    it's closed before closing blinds. :warning:"
                  title: ":bathtub: Bathroom"
        default:
          - service: script.send_to_home_log
            data:
              message: "Closing bathroom :window: blinds"
              title: ":bathtub: Bathroom"
          - service: cover.set_cover_position
            target:
              entity_id: cover.bathroom_blinds
            data:
              position: input_number.bathroom_blind_closed_preset
    mode: single
  - id: "1624661497604"
    alias: "Bathroom: Window Closed At Night"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_window
        from: "on"
        to: "off"
    condition:
      - condition: time
        after: 00:00:00
      - condition: sun
        before: sunrise
        before_offset: -01:00:00
    action:
      - service: script.send_to_home_log
        data:
          message: ":window: Window closed. Closing blinds."
          title: ":bathtub: Bathroom"
      - service: cover.set_cover_position
        data:
          position: input_number.bathroom_blind_closed_preset
    mode: single

scene:
  - id: "1610310643539"
    name: "Bathroom: Light On"
    entities:
      light.bathroom:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        brightness: 255
        color_temp: 285
        friendly_name: Bathroom Light
        supported_features: 55
        state: "on"
  - id: "1610310671262"
    name: "Bathroom: Turn Off Light"
    entities:
      light.bathroom:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        friendly_name: Bathroom Light
        supported_features: 55
        state: "off"
  - id: "1610310719574"
    name: "Bathroom: Dim Lights"
    entities:
      light.bathroom:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        brightness: 26
        color_temp: 285
        friendly_name: Bathroom Light
        supported_features: 55
        state: "on"
  - id: "1632078596492"
    name: Bathroom Night Light
    entities:
      light.bathroom:
        min_mireds: 153
        max_mireds: 454
        effect_list:
          - effect_pulse
          - effect_stop
        supported_color_modes:
          - color_temp
        color_mode: color_temp
        brightness: 102
        color_temp: 454
        hs_color:
          - 29.79
          - 84.553
        rgb_color:
          - 255
          - 146
          - 39
        xy_color:
          - 0.579
          - 0.388
        friendly_name: Bathroom Light
        supported_features: 39
        state: "on"
    icon: mdi:lightbulb

script:
  bathroom_flash_light:
    alias: Bathroom Flash Light
    sequence:
      - repeat:
          count: "2"
          sequence:
            - service: light.turn_on
              data:
                brightness_pct: 100
              entity_id: light.bathroom
            - service: light.turn_off
              data: {}
              entity_id: light.bathroom
    mode: single
  bathroom_close_blinds_by_weather:
    alias: Bathroom Close Blinds Based Weather
    description: "Close Bathroom blinds depending on the weather."
    fields:
      temperature:
        description: Temperature in celcius.
        required: true
      weather_condition:
        description: Text weather condition e.g. lightning-rainy
        required: true
    sequence:
      # Only run the weather check if it's during the day otherwise it might be closed for evening.
      - if:
          - condition: sun
            before: sunset
          # TODO: Make this dynmaic e.g. season / lux value.
          # Sun reaches the back of the house around this time.
          - condition: time
            after: "14:00:00"
          - condition: state
            entity_id: input_boolean.enable_bathroom_blind_automations
            state: "on"
        then:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ weather_condition in ['sunny','partlycloudy'] }}"
                sequence:
                  - choose:
                      # Check if window is open.
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.bathroom_window
                            state: "on"
                        sequence:
                          # TODO: replace with actionable notification
                          - service: script.send_to_home_log
                            data:
                              message:
                                "It's going to be hot ({{ temperature }} {{ weather_condition }}) and
                                the :window: window is open preventing the blinds from closing."
                              title: ":bathtub: Bathroom"
                    default:
                      - service: script.send_to_home_log
                        data:
                          message: "It's going to be hot ({{ temperature }} {{ weather_condition }}). Closing blinds."
                          title: ":bathtub: Bathroom"
                      - service: cover.set_cover_position
                        target:
                          entity_id: cover.bathroom_blinds
                        data:
                          position: input_number.bathroom_blind_closed_preset
            default: []
    mode: single
    icon: mdi:roller-shade-closed
