# Created by Danny Tsang <danny@tsang.uk>
automation:
  - id: "1606157753577"
    alias: "^Porch: Front Door Open Turn Light On"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door
        to: "on"
    condition: []
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.porch_motion_light_level
                below: "100"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: ":door: :bulb: :high_brightness: It's dark 
                  ({{ states('sensor.porch_motion_light_level') }} < 100). Turning on light."
                  title: "Front door opened"
              - service: scene.turn_on
                target:
                  entity_id: scene.porch_light_on
        default: []
      - service: script.send_to_home_log
        data:
          message:
            ":door: Incrementing front door counter :abacus:
            from {{ states('counter.front_door_opened_closed') }} to {{ states('counter.front_door_opened_closed')
            | int + state_attr('counter.front_door_opened_closed', 'step') | int }}."
          title: "Front door opened"
      - service: counter.increment
        data: {}
        entity_id: counter.front_door_opened_closed
    mode: single
  - id: "1614033445487"
    alias: "^Porch: Front Door Opened Once For More than 20 seconds"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door
        to: "on"
        from: "off"
        for: 00:00:20
    condition:
      - condition: numeric_state
        entity_id: counter.front_door_opened_closed
        below: "2"
    action:
      - service: script.send_to_home_log
        data:
          message:
            ":door: :abacus: Front door has been opened for more than 20 secs.
            Resetting counter  from {{ states('counter.front_door_opened_closed') }} to 0."
          title: "Front door opened"
      - service: counter.reset
        data: {}
        entity_id: counter.front_door_opened_closed
  - id: "1611931052908"
    alias: "^Porch: Front Door Open Indicator"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: group.adult_people
        state: home
    action:
      - parallel:
        - service: script.send_to_home_log
          data:
            message:
              ":people_holding_hands: Someone is home, notifying front :door: door
              is open"
            title: "Front door opened"
        - service: script.front_door_open_notification
          data: {}
    mode: single
  - id: "1615224190495"
    alias: "^Porch: Front Door Closed For More than 20 seconds"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door
        to: "off"
        from: "on"
        for: 00:00:20
    condition: []
    action:
      - parallel:
        - service: script.send_to_home_log
          data:
            message:
              ":abacus: For more than 20 secs.
              Resetting counter  from {{ states('counter.front_door_opened_closed') }} to 0"
            title: "Front door closed"
        - service: counter.reset
          target:
            entity_id: counter.front_door_opened_closed
    mode: single
  - id: "1611931640441"
    alias: "^Porch: Front Door Closed"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door
        from: "on"
        to: "off"
    condition: []
    action:
      - parallel:
        - service: script.send_to_home_log
          data:
            message: ":door: Front door closed."
        - service: script.front_door_closed_notification
          data: {}
    mode: single
  - id: "1606157835544"
    alias: "^Porch: Front Door Closed Turn Off Porch Light"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door
        from: "on"
        to: "off"
        for: 00:01:00
    condition: []
    action:
      - parallel:
        - service: scene.turn_on
          target:
            entity_id: scene.porch_lights_off
        - service: script.send_to_home_log
          data:
            message: "For 1 minute. Turning off porch light."
            title: "Front door closed"
        - choose:
          - conditions:
              - condition: state
                entity_id: light.stairs
                state: "on"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: "Turning stairs light off as fall back."
                  title: "Front door closed"
              - service: scene.turn_on
                target:
                  entity_id:
                    - scene.stairs_light_off
          default: []
        - choose:
          - conditions:
              - condition: state
                entity_id: light.office_light
                state: "on"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: "Turning office light off as fall back."
                  title: "Front door closed"
              - service: scene.turn_on
                target:
                  entity_id:
                    - scene.office_turn_off_light_notification
          default: []
    mode: single

scene:
  - id: "1606157607021"
    name: Porch Lights Off
    entities:
      light.porch:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        friendly_name: Porch
        supported_features: 55
        state: "off"
  - id: "1606157646144"
    name: Porch Light On
    entities:
      light.porch:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        brightness: 178
        color_temp: 285
        friendly_name: Porch
        supported_features: 55
        state: "on"

script:
  front_door_closed_notification:
    alias: Front Door Closed Notification
    sequence:
      - service: scene.turn_on
        target:
          entity_id:
            - scene.current_office_light_1
            - scene.current_stairs_light
            - scene.current_stairs_light2
    mode: single
    icon: mdi:door
  nfc_front_door:
    alias: NFC Front Door
    sequence:
      - choose:
          - conditions:
              - not:
                  - condition: state
                    entity_id: alarm_control_panel.house_alarm
                    state: disarmed
            sequence:
              - service: script.send_to_home_log
                data:
                  message: ":no_bell: Turning off alarm."
              - service: script.set_alarm_to_disarmed_mode
              - service: script.lounge_flash_lounge_lights_green
        default:
          - service: script.send_to_home_log
            data:
              message: ":no_bell: Alarm is not on so nothing to do."
          - service: script.lounge_flash_lounge_lights_red
    mode: single
    icon: mdi:nfc

template:
  # Replicate Switchbot contact sensor to know if someone is entering or leaving. Thanks to @damieng5
  # https://www.switch-bot.com/products/contact-sensor
  - trigger:
    - platform: state
      entity_id: binary_sensor.front_door
    sensor:
    - name: Door Entry Direction
      icon: >-
        mdi:{% if states('binary_sensor.porch_motion') == 'on' %}location-exit
        {% elif states('binary_sensor.porch_motion') == 'on' %}location-enter
        {% else %}alert-circle-outline{% endif %}
      state: >-
        {% if states('binary_sensor.porch_motion') == 'on' %}leaving
        {% elif states('binary_sensor.porch_motion') == 'off' %}entering
        {% else %}unknown{% endif %}
