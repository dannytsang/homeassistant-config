# Created by Danny Tsang <danny@tsang.uk>
automation:
  # Motion
  - id: "1606428361967"
    alias: "^Office: Motion Detected And Light Is On"
    description:
      "Split automation depending on light state due to dynamic attributes based on state.
      See https://community.home-assistant.io/t/dynamic-attributes/93226/2?u=tuxinator94"
    trigger:
      - platform: state
        entity_id: binary_sensor.office_light_trigger
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.enable_office_motion_triggers
        state: "on"
      - or:
          - condition: state
            entity_id: light.office_light_2
            state: "on"
          - condition: state
            entity_id: light.office_light_3
            state: "on"
    action:
      - choose:
          - conditions:
              - and:
                  - or:
                      - condition: numeric_state
                        entity_id: sensor.office_motion_light_level
                        below: input_number.office_light_level_threshold
                      - condition: numeric_state
                        entity_id: sensor.office_motion_2_light_level
                        below: input_number.office_light_level_2_threshold
                  - or:
                      - condition: numeric_state
                        entity_id: light.office_light_2
                        attribute: brightness
                        below: "200"
                      - condition: numeric_state
                        entity_id: light.office_light_3
                        attribute: brightness
                        below: "200"
            sequence:
              - parallel:
                  - service: scene.turn_on
                    target:
                      entity_id: scene.office_main_light_on
                  - service: script.send_to_home_log
                    data:
                      title: Office Motion Detected
                      message: >-
                        :paw_prints: :bulb: :high_brightness: Motion detected in the office
                        and it's dark ({{ states('sensor.office_motion_light_level') }} & 
                        {{ states('sensor.office_motion_2_light_level') }} 
                        {{ state_attr('sensor.office_motion_light_level','unit_of_measurement') }} < 
                        {{ states('input_number.office_light_level_threshold') }}-
                        {{ states('input_number.office_light_level_2_threshold') }}
                        {{ state_attr('input_number.office_light_level_threshold','unit_of_measurement') }}). 
                        Turning office up lights.
          - conditions:
              - and:
                  - condition: numeric_state
                    entity_id: sensor.office_motion_light_level
                    above: input_number.office_light_level_threshold
                  - condition: numeric_state
                    entity_id: sensor.office_motion_2_light_level
                    above: input_number.office_light_level_2_threshold
                  - or:
                      - condition: numeric_state
                        entity_id: light.office_light_2
                        attribute: brightness
                        below: "200"
                      - condition: numeric_state
                        entity_id: light.office_light_3
                        attribute: brightness
                        below: "200"
            sequence:
              - parallel:
                  - service: scene.turn_on
                    target:
                      entity_id: scene.office_main_light_off
                  - service: script.send_to_home_log
                    data:
                      title: Office Motion Detected
                      message: >-
                        :paw_prints: :bulb: :high_brightness: Motion detected in the office
                        and bright ({{ states('sensor.office_motion_light_level') }} & 
                        {{ states('sensor.office_motion_2_light_level') }} 
                        {{ state_attr('sensor.office_motion_light_level','unit_of_measurement') }} < 
                        {{ states('input_number.office_light_level_threshold') }}-
                        {{ states('input_number.office_light_level_2_threshold') }}
                        {{ state_attr('input_number.office_light_level_threshold','unit_of_measurement') }}). 
                        Turning office lights off.
        default: []
    mode: single
  - id: "1632064858461"
    alias: "^Office: Motion Detected And Light Is Off"
    description:
      "Split automation depending on light state due to dynamic attributes based on state.
      See https://community.home-assistant.io/t/dynamic-attributes/93226/2?u=tuxinator94"
    trigger:
      - platform: state
        entity_id: binary_sensor.office_light_trigger
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.enable_office_motion_triggers
        state: "on"
      - or:
          - condition: state
            entity_id: light.office_light_2
            state: "off"
          - condition: state
            entity_id: light.office_light_3
            state: "off"
    action:
      - choose:
          - conditions:
              - and:
                  - or:
                      - condition: numeric_state
                        entity_id: sensor.office_motion_light_level
                        below: input_number.office_light_level_threshold
                      - condition: numeric_state
                        entity_id: sensor.office_motion_2_light_level
                        below: input_number.office_light_level_2_threshold
            sequence:
              - parallel:
                  - service: scene.turn_on
                    target:
                      entity_id: scene.office_main_light_on
                  - service: script.send_to_home_log
                    data:
                      message: >-
                        :paw_prints: :bulb: :high_brightness: Motion detected in the office
                        and it's dark ({{ states('sensor.office_motion_light_level') }} & 
                        {{ states('sensor.office_motion_2_light_level') }} 
                        {{ state_attr('sensor.office_motion_light_level','unit_of_measurement') }} < 
                        {{ states('input_number.office_light_level_threshold') }}-
                        {{ states('input_number.office_light_level_2_threshold') }}
                        {{ state_attr('input_number.office_light_level_threshold','unit_of_measurement') }}). 
                        Turning office lights on.
        default: []
    mode: single
  - id: "1606170234725"
    alias: "^Office: No Motion After 5 Minutes"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.office_light_trigger
        to: "off"
        for: 00:05:00
        from: "on"
    condition:
      - condition: state
        entity_id: input_boolean.enable_office_motion_triggers
        state: "on"
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message:
                ":no_pedestrians: No motion detected in the office after 5 minutes.
                Dimming lights."
          - service: scene.turn_on
            target:
              entity_id: scene.office_main_lights_dim
            data:
              transition: 2
    mode: single
  - id: "1584277767373"
    alias: "^Office: No Motion Detected And Computer Is Off"
    description: ""
    trigger:
      - entity_id: binary_sensor.office_light_trigger
        for: 00:06:00
        platform: state
        to: "off"
    condition:
      - and:
          - condition: state
            entity_id: group.jd_computer
            state: not_home
          - condition: state
            entity_id: group.sam_computer
            state: not_home
          - condition: state
            entity_id: group.work_computer
            state: not_home
      - condition: state
        entity_id: input_boolean.enable_office_motion_triggers
        state: "on"
    action:
      - parallel:
          - data:
              message:
                ":no_pedestrians: :bulb: No motion detected in the office for 6 minutes
                and :desktop_computer: is not connected. Turning office and desk lights off."
            service: script.send_to_home_log
          - service: scene.turn_on
            target:
              entity_id: scene.office_all_lights_off
            data:
              transition: 2
    mode: single
  - id: "1587044886886"
    alias: "^Office: No Motion Detected And Computer Is On"
    description: ""
    trigger:
      - entity_id: binary_sensor.office_light_trigger
        for: 00:10:00
        platform: state
        to: "off"
    condition:
      - condition: state
        entity_id: input_boolean.enable_office_motion_triggers
        state: "on"
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: "For 10 minutes and :desktop_computer: is connected. Turning office light off."
              title: ":no_pedestrians: No motion in the office"
          - service: scene.turn_on
            target:
              entity_id: scene.office_main_light_off
    mode: single
  # Plugs / switches
  - id: "1622584959878"
    alias: "^Office: High Temperature"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: sensor.office_area_mean_temperature
        above: "26"
      - platform: numeric_state
        entity_id: sensor.office_area_mean_temperature
        above: "29"
        for: 00:01:00
      - platform: numeric_state
        entity_id: sensor.office_area_mean_temperature
        for: 00:01:00
        above: "31"
    condition:
      - condition: state
        entity_id: switch.office_fan
        state: "off"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: group.adult_people
                state: home
              - condition: time
                before: "22:00:00"
              - condition: time
                after: "08:30:00"
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message:
                        ":hotsprings: :people_holding_hands: Office temperature is high
                        ({{states('sensor.office_area_mean_temperature') }}c) and someone is home.
                        Turning on fan."
                  - service: switch.turn_on
                    target:
                      entity_id: switch.office_fan
          - conditions:
              - condition: numeric_state
                entity_id: sensor.office_area_mean_temperature
                above: "29"
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message:
                        ":warning: :hotsprings: Office temperature is above 29c ({{states('sensor.office_area_mean_temperature')
                        }}c)."
                  - service: script.send_actionable_notification_with_2_buttons
                    data:
                      message: Turn on office fan?
                      title: ♨️🏢Office temperature is 29c+
                      people: person.danny
                      action1_title: "Yes"
                      action1_name: switch_on_office_fan
                      action2_title: "No"
                      action2_name: ignore
          - conditions:
              - condition: numeric_state
                entity_id: sensor.office_area_mean_temperature
                above: "31"
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message:
                        ":warning: :hotsprings: Office temperature is above 31c. Turning
                        fan on."
                  - service: switch.turn_on
                    target:
                      entity_id: switch.office_fan
        default: []
    mode: single
  - id: "1596190251094"
    alias: "^Office: Turn Fan Off After 1 Hour"
    description: ""
    trigger:
      - entity_id: switch.office_fan
        for: 01:00:00
        platform: state
        to: "on"
        id: 1h
        from: "off"
      - entity_id: switch.office_fan
        for: 02:00:00
        platform: state
        to: "on"
        id: 2h
        from: "off"
    condition: []
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: 1h
            sequence:
              - service: script.send_to_home_log
                data:
                  message: Turned off office Fan after 1 hour.
          - conditions:
              - condition: trigger
                id: 2h
            sequence:
              - service: script.send_to_home_log
                data:
                  message: Turned off office Fan after 2 hours.
        default: []
      - service: switch.turn_off
        target:
          entity_id: switch.office_fan
    mode: single
  - id: "1622666920056"
    alias: "^Office: Window Closed At Night"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.office_windows
        from: "on"
        to: "off"
        for:
          hours: 0
          minutes: 1
          seconds: 0
    condition:
      - condition: state
        entity_id: input_boolean.enable_office_curtain_automations
        state: "on"
      - or:
          - condition: sun
            after: sunset
            after_offset: -01:00:00
          - condition: sun
            before: sunrise
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message:
                ":window: :city_sunset: Office window closed and it's dark. Closing
                curtains."
          - service: script.office_close_curtains
    mode: single
  # Computer related automations
  - id: "1619865008647"
    alias: "^Office: Computer Turned On"
    description: ""
    trigger:
      - platform: state
        entity_id: group.jd_computer
        from: not_home
        to: home
      - platform: state
        entity_id: binary_sensor.microphone
        from: unavailable
        to: "on"
    condition: []
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: "Turned on."
              title: ":desktop_computer: Computer"
          - service: switch.turn_on
            target:
              entity_id: switch.goxlr
          - service: script.send_to_home_log
            data:
              message: ":level_slider: Turned on GoXLR."
              title: ":desktop_computer: Computer"
    mode: single
  - id: "1635673894105"
    alias: "^Office: Computer Turned Off"
    description: ""
    trigger:
      - platform: state
        entity_id: group.jd_computer
        to: not_home
        from: home
        id: router
      - platform: state
        entity_id: sensor.bios_version
        to: unavailable
        id: pc
    condition: []
    action:
      - service: script.send_to_home_log
        data:
          message: ":desktop_computer: :tv: Computer turned off."
      - service: script.office_pc_turned_off_notification
        data: {}
    mode: single
  - id: "1606256309890"
    alias: "^Office: Computer Turned Off For A Period Of Time"
    description: ""
    trigger:
      - platform: state
        entity_id: group.jd_computer
        for: 00:10:00
        to: not_home
        from: home
        id: router
      - platform: state
        entity_id: binary_sensor.microphone
        to: unavailable
        for: "00:10:00"
        id: pc
    condition:
      - not:
          - condition: state
            entity_id: device_tracker.udm_pro
            state: unavailable
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: router
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: "Turned off for more than 10 minutes."
                      title: ":desktop_computer: Computer"
                  - service: scene.turn_on
                    target:
                      entity_id: scene.office_desk_lights_off
                  - service: script.send_to_home_log
                    data:
                      messsage: Turned off desk lights.
                  - service: switch.turn_off
                    target:
                      entity_id: switch.goxlr
                  - service: script.send_to_home_log
                    data:
                      message: "Turned off for more than 10 minutes. Turned
                        off :level_slider: goXLR"
                      title: ":desktop_computer: Computer"
                  - service: script.office_turn_off_backup_drive
          - conditions:
              - condition: trigger
                id: pc
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: ":desktop_computer: :tv: Computer turned off for more than 10 minutes."
                  - service: scene.turn_on
                    target:
                      entity_id: scene.office_desk_lights_off
                  - service: script.send_to_home_log
                    data:
                      messsage: Turned off desk lights.
                  - service: switch.turn_off
                    target:
                      entity_id: switch.goxlr
                  - service: script.send_to_home_log
                    data:
                      message: "Turned off for more than 10 minutes. Turned
                        off :level_slider: goXLR"
                      title: ":desktop_computer: Computer"
                  - service: script.office_turn_off_backup_drive
        default: []
    mode: single
  # Curtains
  - id: "1622374444832"
    alias: "^Office: Open Curtains In The Morning"
    description: ""
    trigger:
      - platform: time
        at: 08:00:00
    condition: []
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: ":clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and now().minute | int < 35 %}30{% else %}{% endif %}: Opening office curtains."
          - service: script.office_open_curtains
    mode: single
  - id: "1622374233310"
    alias: "^Office: Close Office Curtains At Night"
    description: ""
    trigger:
      - platform: sun
        event: sunset
        offset: -01:00:00
        id: summer
      - platform: sun
        event: sunset
        id: winter
    condition:
      - condition: state
        entity_id: input_boolean.enable_office_curtain_automations
        state: "on"
    action:
      - choose:
          - conditions:
              - or:
                  - condition: state
                    entity_id: binary_sensor.office_window_right
                    state: "on"
                  - condition: state
                    entity_id: binary_sensor.office_window_left
                    state: "on"
            sequence:
              - service: script.send_to_home_log
                data:
                  message:
                    ":warning: :window: Office window is still open so not closing
                    curtains. before closing curtains. :warning:"
          - conditions:
              - or:
                  - condition: state
                    entity_id: sensor.season
                    state: spring
                  - condition: state
                    entity_id: sensor.season
                    state: summer
              - condition: trigger
                id: summer
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: ":city_sunset: :leaves: :sun_with_face: :window: It's getting dark, closing office blinds."
                  - service: script.office_close_curtains
          - conditions:
              - or:
                  - condition: state
                    entity_id: sensor.season
                    state: autumn
                  - condition: state
                    entity_id: sensor.season
                    state: winter
              - condition: trigger
                id: winter
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: ":city_sunset: :fallen_leaf: :snowman: :window: It's getting dark, closing office blinds."
                  - service: script.office_close_curtains
        default: []
    mode: single
  - id: "1641549235689"
    alias: "^Office: Close Curtains"
    description: ""
    trigger:
      - platform: webhook
        webhook_id: office_close_curtains
    condition:
      - condition: template
        value_template: "{{ trigger.json.key|string == states('input_text.office_curtains_key') }}"
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: "Webhook: Closing office curtains."
          - service: script.office_close_curtains
    mode: single
  - id: "1641549235690"
    alias: "^Office: Open Curtains"
    description: ""
    trigger:
      - platform: webhook
        webhook_id: office_open_curtains
    condition:
      - condition: template
        value_template: "{{ trigger.json.key|string == states('input_text.office_curtains_key') }}"
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: "Webhook: Closing office curtains."
          - service: script.office_open_curtains
    mode: single
  # Lights
  - id: "1614555883547"
    alias: "^Office: Toggle Key Light"
    description: ""
    trigger:
      - platform: webhook
        webhook_id: keylight_toggle
    condition:
      - condition: template
        value_template: "{{ trigger.json.key|string == states('input_text.office_key_light_key') }}"
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: ":bulb: Toggle Key light"
          - service: light.toggle
            data: {}
            target:
              entity_id:
                - light.elgato_key_light_left
                - light.elgato_key_light_right
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.workday_sensor
                    state: "on"
                  - condition: time
                    after: "09:00:00"
                    before: "17:30:00"
                    weekday:
                      - mon
                      - tue
                      - wed
                      - thu
                      - fri
                  - condition: state
                    entity_id: media_player.spotify_danny
                    state: playing
                sequence:
                  - service: media_player.media_stop
                    data: {}
                    target:
                      entity_id: media_player.spotify_danny
                  - service: script.send_to_home_log
                    data:
                      message: ":stop_button: Turning off music."
            default: []
    mode: single
  # Smoke alarm
  - id: "1646778627153"
    alias: "^Office: Carbon Monoxide Detected"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.nest_protect_office_co_status
        to: "on"
    condition: []
    action:
      - parallel:
          - service: script.send_direct_notification
            data:
              title: ":skull_and_crossbones: CO Detected in the office"
              message: ":skull_and_crossbones: Carbon Monide detected in the :office: office."
          - service: script.send_to_home_log
            data:
              message: ":skull_and_crossbones: Carbon Monide detected in the :office: office."
          - service: script.set_central_heating_to_off
            data: {}
          - service: script.set_how_water_to_home_mode
            data: {}
    mode: single
  - id: "1646778909669"
    alias: "^Office: Smoked Detected"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.nest_protect_office_smoke_status
        to: "on"
    condition: []
    action:
      - parallel:
          - service: script.send_direct_notification
            data:
              title: ":smoking: Smoke detected in the office"
              message: ":smoking: Smoke detected in the :office: office."
          - service: script.send_to_home_log
            data:
              message: ":smoking: Smoke detected in the :office: office."
          - service: script.set_central_heating_to_off
            data: {}
          - service: script.set_how_water_to_home_mode
            data: {}
    mode: single
  # VM
  - id: "1650730028373"
    alias: "^Office: Leo's VM Is Turned Off"
    description: ""
    trigger:
      - platform: state
        entity_id: switch.turk_vm_leos_windows_10
        to: "off"
        for:
          hours: 0
          minutes: 10
          seconds: 0
    condition:
      - not:
          - condition: state
            entity_id: device_tracker.udm_pro
            state: unavailable
      - condition: state
        entity_id: switch.turk_docker_deepstack
        state: "off"
    action:
      - service: script.send_to_home_log
        data:
          message: Leo's VM has turned off for more than 10 minutes. Turnon on Deepstack.
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.turk_docker_deepstack
    mode: single

group:
  jd_computer:
    name: JD Computer
    icon: mdi:desktop-classic
    entities:
      - device_tracker.jd
  office_computers:
    name: Office Computers
    icon: mdi:laptop
    entities:
      - device_tracker.janitor
      - device_tracker.jd
      - device_tracker.gt21_5598
      - device_tracker.sam
      - device_tracker.sam_2
  sam_computer:
    name: Sam Computer
    icon: mdi:laptop
    entities:
      - device_tracker.sam
      - device_tracker.sam_2
  turk_computer:
    name: Turk Computer
    icon: mdi:server
    entities:
      - device_tracker.turk
  work_computer:
    name: Work Computers
    icon: mdi:laptop
    entities:
      - device_tracker.gt21_5598

scene:
  - id: "1600795089307"
    name: "Office: Turn On Main Light"
    entities:
      light.office_light_2:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        brightness: 204
        color_temp: 270
        friendly_name: Office Light 2
        supported_features: 55
        state: "on"
      light.office_light_3:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        brightness: 204
        color_temp: 285
        friendly_name: Office Light 3
        supported_features: 55
        state: "on"
    icon: mdi:lightbulb
  - id: "1606247204381"
    name: Office Turn Off Main Light
    entities:
      light.office_light_2:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        friendly_name: Office Light 2
        supported_features: 55
        state: "off"
      light.office_light:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        friendly_name: Office Light
        supported_features: 55
        state: "off"
      light.office_light_3:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        friendly_name: Office Light 3
        supported_features: 55
        state: "off"
      light.office_light_4:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        friendly_name: Office Light 4
        supported_features: 55
        state: "off"
  - id: "1612921949654"
    name: Office Dim Main Lights
    entities:
      light.office_light_2:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        brightness: 51
        color_temp: 270
        friendly_name: Office Light 2
        supported_features: 55
        state: "on"
      light.office_light_3:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        brightness: 51
        color_temp: 285
        friendly_name: Office Light 3
        supported_features: 55
        state: "on"
  - id: "1606247529306"
    name: Office Turn Off All Lights
    entities:
      light.office_light:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        friendly_name: Office Light
        supported_features: 55
        state: "off"
      light.office_desk_top:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        friendly_name: Office Desk Top
        supported_features: 63
        state: "off"
      light.office_desk_right:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        friendly_name: Right Office Desk
        supported_features: 63
        state: "off"
      light.office_desk_left:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        friendly_name: Left Office Desk
        supported_features: 63
        state: "off"
      light.office_light_2:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        friendly_name: Office Light 2
        supported_features: 55
        state: "off"
      light.office_light_3:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        friendly_name: Office Light 3
        supported_features: 55
        state: "off"
      light.office_light_4:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        friendly_name: Office Light 4
        supported_features: 55
        state: "off"
  - id: "1607645842037"
    name: Office Turn Off Desk Lights
    entities:
      light.office_desk_top:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        friendly_name: Office Desk Top
        supported_features: 63
        state: "off"
      light.office_desk_right:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        friendly_name: Right Office Desk
        supported_features: 63
        state: "off"
      light.office_desk_left:
        min_mireds: 153
        max_mireds: 500
        effect_list:
          - colorloop
          - random
        friendly_name: Left Office Desk
        supported_features: 63
        state: "off"
  - id: "1600776152370"
    name: "Office: Doorbell Notification"
    entities:
      light.office_light:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        brightness: 255
        hs_color:
          - 120
          - 100
        rgb_color:
          - 0
          - 255
          - 0
        xy_color:
          - 0.172
          - 0.747
        friendly_name: Office Light
        supported_features: 55
        state: "on"
    icon: mdi:lightbulb
  - id: "1606170296807"
    name: Office Sun Light
    entities:
      light.office_light:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        brightness: 128
        color_temp: 245
        friendly_name: Office Light
        supported_features: 55
        state: "on"
  - id: "1613476016502"
    name: "Office: Turn Off Light Notification"
    entities:
      light.office_light:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        friendly_name: Office Light
        supported_features: 55
        state: "off"
  - id: "1613476289811"
    name: "Office: Front Door Open Notification"
    entities:
      light.office_light:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        brightness: 255
        hs_color:
          - 240
          - 100
        rgb_color:
          - 0
          - 0
          - 255
        xy_color:
          - 0.136
          - 0.04
        friendly_name: Office Light
        supported_features: 55
        state: "on"
  - id: "1613476535744"
    name: "Office: Front Garden Motion Notification"
    entities:
      light.office_light:
        min_mireds: 111
        max_mireds: 400
        effect_list:
          - effect_colorloop
          - effect_pulse
          - effect_stop
        brightness: 255
        hs_color:
          - 284.995
          - 100
        rgb_color:
          - 191
          - 0
          - 255
        xy_color:
          - 0.301
          - 0.116
        friendly_name: Office Light
        supported_features: 55
        state: "on"
script:
  # Curtains
  office_close_curtains:
    alias: Office Close Curtains
    icon: mdi:curtains-closed
    sequence:
      - service: ifttt.trigger
        data:
          event: close_office_left_curtain
      - service: ifttt.trigger
        data:
          event: close_office_right_curtain
      # There seems to be a delay (with switchbot API?) when curtain position
      # changes making this fairly redundant and leave it on the slow refresh
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id:
            - cover.office_curtains_right
            - cover.office_curtains_left
    mode: single
  office_open_curtains:
    alias: Office Open Curtains
    icon: mdi:curtains
    sequence:
      - service: cover.open_cover
        target:
          entity_id: cover.office_curtains_left
      - service: cover.open_cover
        target:
          entity_id: cover.office_curtains_right
      # There seems to be a delay (with switchbot API?) when curtain position
      # changes making this fairly redundant and leave it on the slow refresh
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id:
            - cover.office_curtains_right
            - cover.office_curtains_left
    mode: single
  office_close_curtains_fallback:
    alias: Office Close Curtains
    icon: mdi:curtains-closed
    sequence:
      - service: cover.open_cover
        target:
          entity_id: cover.office_curtains_left
      - service: cover.open_cover
        target:
          entity_id: cover.office_curtains_right
    mode: single
  office_open_curtains_fallback:
    alias: Office Open Curtains
    icon: mdi:curtains
    sequence:
      - service: ifttt.trigger
        data:
          event: open_office_right_curtain
      - service: ifttt.trigger
        data:
          event: open_office_left_curtain
    mode: single
  # PC
  office_turn_off_backup_drive:
    alias: Office Turn Off Backup Drive
    sequence:
      - and:
          - condition: state
            entity_id: switch.external_hdd
            state: "on"
          - condition: state
            entity_id: group.jd_computer
            state: not_home
      - service: script.send_to_home_log
        data:
          message: ":floppy_disk: Turning off external HDD"
      - service: switch.turn_off
        target:
          entity_id: switch.external_hdd
    mode: single
  office_pc_turned_off_notification:
    alias: Office PC Turned Off Notification
    sequence:
      - service: scene.turn_on
        data:
          transition: 1
        target:
          entity_id: scene.office_pc_turned_off_notification
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - service: scene.turn_on
        data:
          transition: 1
        target:
          entity_id: scene.office_turn_off_light_notification
    mode: single
  # VM
  office_turn_on_leos_vm:
    alias: "Office: Turn On Leo's VM"
    sequence:
      - service: script.send_to_home_log
        data:
          message: ":computer: Turning on Leo's VM."
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.turk_vm_leos_windows_10
      - wait_for_trigger:
          - platform: state
            entity_id: switch.turk_vm_leos_windows_10
            to: "on"
        timeout: "180"
        continue_on_timeout: false
    mode: single
    icon: mdi:microsoft-windows

sensor:
  # historical stats
  # Computer
  - platform: history_stats
    name: JD Computer Usage Today
    entity_id: group.jd_computer
    state: "on"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    end: "{{ now() }}"
  - platform: history_stats
    name: Sam Computer Usage Today
    entity_id: group.sam_computer
    state: "on"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    end: "{{ now() }}"
  - platform: history_stats
    name: JD Computer Usage Yesterday
    entity_id: group.jd_computer
    state: "on"
    type: time
    end: "{{ now().replace(hour=0, minute=0, second=0) }}"
    duration:
      hours: 24
  - platform: history_stats
    name: Sam Computer Usage Yesterday
    entity_id: group.sam_computer
    state: "on"
    type: time
    end: "{{ now().replace(hour=0, minute=0, second=0) }}"
    duration:
      hours: 24
