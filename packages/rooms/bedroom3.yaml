# Created by Danny Tsang <danny@tsang.uk>
automation:
  # Blinds
  - id: "1605925028960"
    alias: "Ashlee's Bedroom: Timed Close Blinds"
    description: ""
    trigger:
      - platform: time
        at: input_datetime.childrens_bed_time
      - platform: time
        at: "22:00:00"
        id: no_children
    condition:
      - condition: numeric_state
        entity_id: cover.ashlees_bedroom_blinds
        attribute: current_position
        above: input_number.blind_closed_position_threshold
      - condition: state
        entity_id: input_boolean.enable_ashlees_blind_automations
        state: "on"
    action:
      - choose:
          # Window is still open
          - conditions:
              - condition: state
                entity_id: binary_sensor.ashlees_bedroom_window_contact
                state: "on"
            sequence:
              - service: script.send_to_home_log
                data:
                  message:
                    ":warning: :clock{{ now().strftime('%I') | int }}{% if now().minute | int
                    > 25 and now().minute | int < 35 %}30{% else %}{% endif %}: :window: Ashlee's window is still open. Waiting until
                    it's closed before closing blinds. :warning:"
                  title: "Ashlee's :bed: bedroom"
                  log_level: "Debug"
          # No children mode
          - conditions:
              - condition: state
                entity_id: input_select.home_mode
                state: "No Children"
              - condition: trigger
                id: no_children
              - condition: state
                entity_id: binary_sensor.ashlees_bedroom_window_contact
                state: "off"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: ":city_sunset: :window: It's getting dark, closing Ashlee's blinds."
                  title: "Ashlee's :bed: bedroom"
                  log_level: "Debug"
              - service: cover.close_cover
                target:
                  entity_id: cover.ashlees_bedroom_blinds
          # Bed sensor enabled
          - conditions:
              - condition: state
                entity_id: input_boolean.enable_ashlees_bed_sensor
                state: "on"
              - condition: state
                entity_id: binary_sensor.ashlees_bedroom_window_contact
                state: "off"
              - condition: trigger
                id: sunset
            sequence:
              - service: script.send_to_home_log
                data:
                  message:
                    ":clock{{ now().strftime('%I') | int }}{% if now().minute | int
                    > 25 and now().minute | int < 35 %}30{% else %}{% endif %}:
                    :city_sunset: :window: It's getting dark and no one is in Ashlee's :bed: bed,
                    closing Ashlee's blinds."
                  title: "Ashlee's :bed: bedroom"
                  log_level: "Debug"
              - service: cover.close_cover
                target:
                  entity_id: cover.ashlees_bedroom_blinds
          # Bed sensor is off
          - conditions:
              - condition: state
                entity_id: binary_sensor.ashlees_bedroom_window_contact
                state: "off"
              - condition: state
                entity_id: input_boolean.enable_ashlees_bed_sensor
                state: "off"
            sequence:
              - service: script.send_to_home_log
                data:
                  message:
                    ":clock{{ now().strftime('%I') | int }}{% if now().minute | int
                    > 25 and now().minute | int < 35 %}30{% else %}{% endif %}: :city_sunset: :window: It's getting dark, closing Ashlee's blinds."
                  title: "Ashlee's :bed: bedroom"
                  log_level: "Debug"
              - service: cover.close_cover
                target:
                  entity_id: cover.ashlees_bedroom_blinds
        default: []
    mode: single
  - id: "1622891806607"
    alias: "Ashlee's Bedroom: Window Closed After Dark"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.ashlees_bedroom_window_contact
        from: "on"
        to: "off"
        for:
          hours: 0
          minutes: 1
          seconds: 0
    condition:
      - condition: numeric_state
        entity_id: cover.ashlees_bedroom_blinds
        attribute: current_position
        above: input_number.bedroom_blind_closed_threshold
      - condition: state
        entity_id: input_boolean.enable_ashlees_blind_automations
        state: "on"
      - condition: time
        after: input_datetime.childrens_bed_time
    action:
      - service: script.send_to_home_log
        data:
          message: ":window: Window closed and it's dark. Closing blinds."
          title: "Ashlee's :bed: bedroom"
          log_level: "Debug"
      - service: cover.close_cover
        target:
          entity_id: cover.ashlees_bedroom_blinds
        data: {}
    mode: single
  - id: "1599994669457"
    alias: "Ashlee's Bedroom: Open Blinds In The Morning"
    description: ""
    trigger:
      - at: "08:00:00"
        platform: time
        id: early
      - at: "09:00:00"
        platform: time
        id: late
    condition:
      - condition: numeric_state
        entity_id: cover.ashlees_bedroom_blinds
        attribute: current_position
        below: input_number.blind_closed_position_threshold
      - condition: state
        entity_id: input_boolean.enable_ashlees_blind_automations
        state: "on"
      - not:
          - condition: state
            entity_id: input_select.home_mode
            state: "Guest"
          - condition: state
            entity_id: input_select.home_mode
            state: "No Children"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.workday_sensor
                state: "off"
              - condition: trigger
                id: late
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message:
                        ":clock{{ now().strftime('%I') | int }}{% if now().minute | int
                        > 25 and now().minute | int < 35 %}30{% else %}{% endif %}: :sunrise: :window: School day. Opening Ashlee's blinds"
                      title: "Ashlee's :bed: bedroom"
                      log_level: "Debug"

                  - service: cover.open_cover
                    target:
                      entity_id: cover.ashlees_bedroom_blinds
          - conditions:
              - condition: state
                entity_id: binary_sensor.workday_sensor
                state: "on"
              - condition: trigger
                id: early
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message:
                        ":clock{{ now().strftime('%I') | int }}{% if now().minute | int
                        > 25 and now().minute | int < 35 %}30{% else %}{% endif %}: :sunrise: :window: Non school day. Opening Ashlee's blinds"
                      title: "Ashlee's :bed: bedroom"
                      log_level: "Debug"
                  - service: cover.open_cover
                    target:
                      entity_id: cover.ashlees_bedroom_blinds
        default: []
    mode: single
  - id: "1599994669458"
    alias: "Ashlee's Bedroom: Open Blinds In The Morning No Children Mode"
    description: ""
    trigger:
      - at: "08:00:00"
        platform: time
        id: workday
      - at: "09:00:00"
        platform: time
        id: non_workday
    condition:
      - condition: state
        entity_id: input_select.home_mode
        state: "No Children"
    action:
      - choose:
          - conditions:
              - condition: state
                state: "off"
                entity_id: binary_sensor.workday_sensor
              - condition: trigger
                id: workday
            sequence:
              - service: script.send_to_home_log
                data:
                  message:
                    ":clock{{ now().strftime('%I') | int }}{% if now().minute | int
                    > 25 and now().minute | int < 35 %}30{% else %}{% endif %}: :window: Opening blinds
                    with {{ states('input_select.home_mode') }} on a non working day."
                  title: "Ashlee's :bed: bedroom"
                  log_level: "Debug"
              - service: cover.open_cover
                target:
                  entity_id: cover.ashlees_bedroom_blinds
          - conditions:
              - condition: state
                state: "on"
                entity_id: binary_sensor.workday_sensor
              - condition: trigger
                id: non_workday
            sequence:
              - service: script.send_to_home_log
                data:
                  message:
                    ":clock{{ now().strftime('%I') | int }}{% if now().minute | int
                    > 25 and now().minute | int < 35 %}30{% else %}{% endif %}: :window: Opening blinds
                    with {{ states('input_select.home_mode') }} on a working day."
                  title: "Ashlee's :bed: bedroom"
                  log_level: "Debug"
              - service: cover.open_cover
                target:
                  entity_id: cover.ashlees_bedroom_blinds
        default: []
    mode: single
  - id: "1655237597647"
    alias: "Ashlee's Bedroom: Someone Is In Bed"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.ashlees_bed_occupied
        from: "off"
        to: "on"
        for:
          hours: 0
          minutes: 0
          seconds: 30
    condition: []
    action:
      - parallel:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.enable_ashlees_bed_sensor
                    state: "on"
                  - condition: state
                    entity_id: input_boolean.enable_ashlees_blind_automations
                    state: "on"
                  - condition: numeric_state
                    entity_id: cover.ashlees_bedroom_blinds
                    attribute: current_position
                    below: input_number.blind_closed_position_threshold
                  - or:
                      - condition: time
                        after: input_datetime.childrens_bed_time
                      - condition: time
                        before: 05:00:00
                  - condition: state
                    entity_id: binary_sensor.ashlees_bedroom_window_contact
                    state: "off"
                sequence:
                  - service: script.send_to_home_log
                    data:
                      message:
                        "Someone is in Ashlee's :bed: bed after :clock730:. Closing
                        blinds."
                      title: "Ashlee's :bed: bedroom"
                      log_level: "Debug"
                  - service: cover.close_cover
                    data: {}
                    target:
                      entity_id: cover.ashlees_bedroom_blinds
            default: []
    mode: single
  # Switches
  - id: "1655235874989"
    alias: "Ashlee's Bedroom: Turn Off Fan After 1 Hour"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - switch.ashlees_bedroom_fan
        to: "on"
        for:
          hours: 1
          minutes: 0
          seconds: 0
    condition: []
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: ":fan: Fan has been on for an hour. Turning fan off."
              title: ":bed: Ashlee's bedroom"
              log_level: "Debug"
          - service: switch.turn_off
            data: {}
            target:
              entity_id: switch.ashlees_bedroom_fan
    mode: single
  # Hue Remote
  - id: "1656355431188"
    alias: "Ashlee's Bedroom: Hue Remote On Button"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.ashlees_bedroom_remote_action
        to: on_press
    condition: []
    action:
      - service: script.send_to_home_log
        data:
          message: "Power button pressed. :bulb: Toggling light."
          title: ":bed: Ashlee's Bedroom"
          log_level: "Debug"
      - service: light.toggle
        data: {}
        target:
          entity_id: light.ashlees_main_light
    mode: queued
    max: 10
  - id: "1656355431189"
    alias: "Ashlee's Bedroom: Hue Remote Up Button"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.ashlees_bedroom_remote_action
        to: up_press
    condition: []
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: "Bright buttom on remote pressed. Opening :window: Ashlee's blinds."
              title: ":bed: Ashlee's Bedroom"
              log_level: "Debug"
          - service: cover.open_cover
            data: {}
            target:
              entity_id: cover.ashlees_bedroom_blinds
    mode: queued
    max: 10
  - id: "1656355431190"
    alias: "Ashlee's Bedroom: Hue Remote Down Button"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.ashlees_bedroom_remote_action
        to: down_press
    condition: []
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: "Dim buttom on remote pressed. Closing :window: Ashlee's blinds."
              title: ":bed: Ashlee's Bedroom"
              log_level: "Debug"
          - service: cover.close_cover
            data: {}
            target:
              entity_id: cover.ashlees_bedroom_blinds
    mode: queued
    max: 10
  - id: "1656355431191"
    alias: "Ashlee's Bedroom: Hue Remote Off Button"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.ashlees_bedroom_remote_action
        to: off_press
    condition: []
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: "Hue buttom on remote pressed. Toggle Ahlee's :bulb: lamp."
              title: ":bed: Ashlee's Bedroom"
              log_level: "Debug"
          - service: switch.toggle
            data: {}
            target:
              entity_id: switch.ashlees_lamp
    mode: queued
    max: 10

script:
  ashlees_bedroom_close_blinds_by_weather:
    alias: Ashlee's Bedroom Close Blinds Based Weather
    description: "Close Leo's bedroom blinds depending on the weather."
    fields:
      temperature:
        description: Temperature in celcius.
        required: true
        selector:
          number:
            min: -20
            max: 50
            step: 0.1
            unit_of_measurement: "°c"
            mode: "box"
      weather_condition:
        description: Text weather condition e.g. lightning-rainy
        required: true
        selector:
          text:
    sequence:
      # Only run the weather check if it's during the day otherwise it might be closed for evening.
      - if:
          - condition: sun
            before: sunset
          - condition: state
            entity_id: input_boolean.enable_ashlees_blind_automations
            state: "on"
          - condition: numeric_state
            entity_id: cover.ashlees_bedroom_blinds
            attribute: current_position
            above: input_number.blind_open_position_threshold
        then:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ weather_condition in ['sunny','partlycloudy'] }}"
                sequence:
                  - choose:
                      # Check if window is open.
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.leos_bedroom_window_contact
                            state: "on"
                        sequence:
                          # TODO: replace with actionable notification
                          - service: script.send_to_home_log
                            data:
                              message:
                                "It's going to be hot ({{ temperature }} {{ weather_condition }}) and
                                the :window: window is open preventing the blinds from closing."
                              title: "Ashlee's :bed: bedroom"
                              log_level: "Debug"
                    default:
                      - service: script.send_to_home_log
                        data:
                          message: "It's going to be hot ({{ temperature }} {{ weather_condition }}). Closing blinds."
                          title: "Ashlee's :bed: bedroom"
                          log_level: "Debug"
                      - service: cover.close_cover
                        target:
                          entity_id: cover.ashlees_bedroom_blinds
            default: []
    mode: single
    icon: mdi:roller-shade-closed

sensor:
  - platform: mold_indicator
    name: Ashlee's Bedroom Mould Indicator
    indoor_temp_sensor: sensor.ashlees_bedroom_door_temperature
    indoor_humidity_sensor: sensor.ashlees_bed_humidity
    outdoor_temp_sensor: sensor.gw2000a_outdoor_temperature
    calibration_factor: 1.55

template:
  - binary_sensor:
      - name: Ashlees Bed Occupied
        unique_id: f884af3a-2eb7-42ee-9d23-4e3dc41e575d
        icon: >-
          mdi:bed-single{{ '-outline' if (states('sensor.ashlees_bed_top') | float(0) >= 0.1) or
          (states('sensor.ashlees_bed_middle_top') | float(0)) >= 0.1 or
          (states('sensor.ashlees_bed_middle_bottom') | float(0)) >= 0.1 or
          (states('sensor.ashlees_bed_bottom') | float(0)) >= 0.1 else '' }}
        device_class: occupancy
        state: >-
          {% if (states('sensor.ashlees_bed_top') | float(0)) >= 0.1 or
              (states('sensor.ashlees_bed_middle_top') | float(0)) >= 0.1 or
              (states('sensor.ashlees_bed_middle_bottom') | float(0)) >= 0.1 or
              (states('sensor.ashlees_bed_bottom') | float(0)) >= 0.1 %}
            on
          {% else %}
            off
          {% endif %}
        attributes:
          top: "{{ states('sensor.ashlees_bed_top') }}"
          top_middle: "{{ states('sensor.ashlees_bed_middle_top') }}"
          bottom_middle: "{{ states('sensor.ashlees_bed_middle_bottom') }}"
          bottom: "{{ states('sensor.ashlees_bed_bottom') }}"
