# Created by Danny Tsang <danny@tsang.uk>
automation:
  - id: "1608489438291"
    alias: "Home Assistant: Shutdown"
    description: ""
    triggers:
      - trigger: homeassistant
        event: shutdown
    conditions: []
    actions:
      - action: script.send_to_home_log
        data:
          message: ":black_square_for_stop: Shutting down."
          title: "Home Assistant"
          log_level: "Debug"
    mode: single
  - id: "1608489396143"
    alias: "Home Assistant: Start Up"
    description: ""
    triggers:
      - trigger: homeassistant
        event: start
    conditions: []
    actions:
      - parallel:
          - action: script.send_to_home_log
            data:
              message: ":arrow_forward: Started."
              title: "Home Assistant"
              log_level: "Debug"
          - alias: Check Solar Assistant
            action: script.solar_assistant_check_charging_mode
            data:
              event: "event"
              current_electricity_import_rate: "{{ states('sensor.electricity_current_rate') }}"
              current_electricity_import_rate_unit: "{{ state_attr('sensor.electricity_current_rate', 'unit_of_measurement') }}"
              current_electricity_export_rate: "{{ states('sensor.electricity_export_current_rate') }}"
          - alias: Check Zappi
            choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.enable_zappi_automations
                    state: "on"
                  - not:
                      - condition: state
                        entity_id: sensor.myenergi_zappi_plug_status
                        state: "EV Disconnected"
                sequence:
                  - action: script.zappi_check_ev_charge
                    data:
                      current_electricity_import_rate: "{{ states('sensor.electricity_current_rate') }}"
                      current_electricity_import_rate_unit: "{{ state_attr('sensor.electricity_current_rate', 'unit_of_measurement') }}"
                      current_electricity_export_rate: "{{ states('sensor.electricity_export_current_rate') }}"
          - alias: Is Terina working from home
            action: script.check_terinas_work_laptop_status
            data: {}
          - alias: Check 3D printer enclosure light
            action: script.3d_printer_check_turn_off_light
            data: {}
          - alias: Check Magic Mirror casting
            choose:
              - conditions:
                  - or:
                      - condition: state
                        entity_id: input_select.home_mode
                        state: "guest"
                      - condition: state
                        entity_id: group.tracked_people
                        state: "home"
                  - not:
                      - condition: state
                        entity_id: alarm_control_panel.house_alarm
                        state: "armed_away"
                sequence:
                  - parallel:
                      - action: script.send_to_home_log
                        data:
                          message: Casting Home Assistant.
                          title: ":mirror: Magic Mirror"
                          log_level: "Debug"
                      - action: cast.show_lovelace_view
                        data:
                          entity_id: media_player.stairs_chromecast
                          dashboard_path: lovelace-magicmirror
                          view_path: home
            default: []
    mode: single
  - id: "1664657264986"
    alias: "Home Assistant: Update Available"
    description: ""
    triggers:
      - trigger: state
        entity_id: update.home_assistant_core_update
        from: "off"
        to: "on"
    conditions:
      - not:
          - condition: state
            entity_id: input_select.home_assistant_automatic_upgrade
            state: "Disabled"
    actions:
      - action: script.upgrade_home_assistant
        data: {}
    mode: single
  - id: "1738875026613"
    alias: "Home Assistant: Weekday Backup"
    description: ""
    triggers:
      - trigger: time
        at: "17:00:00"
    conditions:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
    actions:
      - action: hassio.backup_full
        metadata: {}
        data:
          compressed: true
    mode: single
  - id: "1738875026613"
    alias: "Home Assistant: Weekend Backup"
    description: ""
    triggers:
      - trigger: time
        at: "11:00:00"
    conditions:
      - condition: time
        weekday:
          - sat
          - sun
    actions:
      - action: hassio.backup_full
        metadata: {}
        data:
          compressed: true
    mode: single

script:
  upgrade_home_assistant:
    alias: Upgrade Home Assistant
    description: In HA, dictionaries are immutable e.g https://stackoverflow.com/questions/36886650/how-to-add-a-new-entry-into-a-dictionary-object-while-using-jinja2
    variables:
      installed_version: "{{state_attr('update.home_assistant_core_update', 'installed_version').split('.') }}"
      latest_version: "{{ state_attr('update.home_assistant_core_update', 'latest_version').split('.') }}"
      major_version_changed: "{{ installed_version[0] != latest_version[0] }}"
      minor_version_changed: "{{ installed_version[1] != latest_version[1] }}"
      patch_version_changed: "{{ installed_version[2] != latest_version[2] }}"
    sequence:
      - choose:
          - conditions:
              - not:
                  - condition: state
                    entity_id: input_select.home_assistant_automatic_upgrade
                    state: "Disabled"
              - condition: template
                value_template: "{{ major_version_changed == false and minor_version_changed == false and patch_version_changed }}"
            sequence:
              - action: script.send_actionable_notification_with_2_buttons
                data:
                  message:
                    Patch update from {{ state_attr('update.home_assistant_core_update',
                    'installed_version') }} to {{ state_attr('update.home_assistant_core_update',
                    'latest_version') }}?
                  title: Home Assistant
                  people:
                    entity_id:
                      - person.danny
                  action1_title: "Yes"
                  action1_name: update_home_assistant
                  action2_title: "No"
                  action2_name: ignore
          - conditions:
              - condition: state
                entity_id: input_select.home_assistant_automatic_upgrade
                state: "Minor Versions"
              - condition: template
                value_template: "{{ major_version_changed == false and minor_version_changed }}"
            sequence:
              - action: script.send_actionable_notification_with_2_buttons
                data:
                  message:
                    Minor update from {{ state_attr('update.home_assistant_core_update',
                    'installed_version') }} to {{ state_attr('update.home_assistant_core_update',
                    'latest_version') }}?
                  title: Home Assistant
                  people:
                    entity_id:
                      - person.danny
                  action1_title: "Yes"
                  action1_name: update_home_assistant
                  action2_title: "No"
                  action2_name: ignore
          - conditions:
              - condition: state
                entity_id: input_select.home_assistant_automatic_upgrade
                state: "Major Versions"
              - condition: template
                value_template: "{{ major_version_changed }}"
            sequence:
              - action: script.send_actionable_notification_with_2_buttons
                data:
                  message:
                    Major update from {{ state_attr('update.home_assistant_core_update',
                    'installed_version') }} to {{ state_attr('update.home_assistant_core_update',
                    'latest_version') }}?
                  title: Home Assistant Supervisor
                  people:
                    entity_id:
                      - person.danny
                  action1_title: "Yes"
                  action1_name: update_home_assistant_supervisor
                  action2_title: "No"
                  action2_name: ignore
        default: []
    mode: single
  upgrade_home_assistant_supervisor:
    alias: Upgrade Home Assistant Supervisor
    description: In HA, dictionaries are immutable e.g https://stackoverflow.com/questions/36886650/how-to-add-a-new-entry-into-a-dictionary-object-while-using-jinja2
    variables:
      installed_version: "{{state_attr('update.home_assistant_supervisor_update', 'installed_version').split('.') }}"
      latest_version: "{{ state_attr('update.home_assistant_supervisor_update', 'latest_version').split('.') }}"
      major_version_changed: "{{ installed_version[0] != latest_version[0] }}"
      minor_version_changed: "{{ installed_version[1] != latest_version[1] }}"
      patch_version_changed: "{{ installed_version[2] != latest_version[2] }}"
    sequence:
      - choose:
          - conditions:
              - not:
                  - condition: state
                    entity_id: input_select.home_assistant_automatic_upgrade
                    state: "Disabled"
              - condition: template
                value_template: "{{ major_version_changed == false and minor_version_changed == false and patch_version_changed }}"
            sequence:
              - action: script.send_actionable_notification_with_2_buttons
                data:
                  message:
                    Patch update from {{ state_attr('update.home_assistant_supervisor_update',
                    'installed_version') }} to {{ state_attr('update.home_assistant_supervisor_update',
                    'latest_version') }}?
                  title: Home Assistant
                  people:
                    entity_id:
                      - person.danny
                  action1_title: "Yes"
                  action1_name: update_home_assistant
                  action2_title: "No"
                  action2_name: ignore
          - conditions:
              - condition: state
                entity_id: input_select.home_assistant_automatic_upgrade
                state: "Minor Versions"
              - condition: template
                value_template: "{{ major_version_changed == false and minor_version_changed }}"
            sequence:
              - action: script.send_actionable_notification_with_2_buttons
                data:
                  message:
                    Minor update from {{ state_attr('update.home_assistant_supervisor_update',
                    'installed_version') }} to {{ state_attr('update.home_assistant_supervisor_update',
                    'latest_version') }}?
                  title: Home Assistant
                  people:
                    entity_id:
                      - person.danny
                  action1_title: "Yes"
                  action1_name: update_home_assistant
                  action2_title: "No"
                  action2_name: ignore
          - conditions:
              - condition: state
                entity_id: input_select.home_assistant_automatic_upgrade
                state: "Major Versions"
              - condition: template
                value_template: "{{ major_version_changed }}"
            sequence:
              - action: script.send_actionable_notification_with_2_buttons
                data:
                  message:
                    Major update from {{ state_attr('update.home_assistant_supervisor_update',
                    'installed_version') }} to {{ state_attr('update.home_assistant_supervisor_update',
                    'latest_version') }}?
                  title: Home Assistant
                  people:
                    entity_id:
                      - person.danny
                  action1_title: "Yes"
                  action1_name: update_home_assistant
                  action2_title: "No"
                  action2_name: ignore
        default: []
    mode: single

sensor:
  - platform: template
    sensors:
      # https://www.reddit.com/r/homeassistant/comments/plmy7e/use_this_template_and_show_us_some_details_about/?utm_medium=android_app&utm_source=share
      total_sensors:
        friendly_name: "Total Sensors"
        icon_template: mdi:radio-tower
        value_template: >-
          {% set ns = namespace(domains=[]) %}
          {%- for s in states -%}
          {%- set ns.domains = (ns.domains + [s.domain])|unique|list -%}
          {%- endfor %}
          {{ states|length }}
        attribute_templates:
          break_down: >-
            {% set ns = namespace(domains=[]) %}
            {%- for s in states -%}
            {%- set ns.domains = (ns.domains + [s.domain])|unique|list -%}
            {%- endfor %}
            [{%- for domain in ns.domains %}
              {"{{ domain }}":{{ states[domain]|length }}},
            {%- endfor %}]
