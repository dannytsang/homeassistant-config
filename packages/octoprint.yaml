# Created by Danny Tsang <danny@tsang.uk>
camera:
  - platform: mjpeg
    name: OctoPrint
    still_image_url: !secret octoprint_stream_url
    mjpeg_url: !secret octoprint_stream_url
octoprint:
  host: !secret octoprint
  api_key: !secret octoprint_api
  bed: true
  number_of_tools: 1
automation:
  - id: "1608655560832"
    alias: "^3D Printer: Print Started"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.octoprint_printing
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.enable_3d_printer_automations
        state: "on"
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.prusa_fan
      - service: script.post_to_home_log
        data:
          message: ":printer: 3D printer is priming. Turning on extruder :dash: fan."
      - wait_for_trigger:
          - platform: numeric_state
            entity_id: sensor.octoprint_time_remaining
            above: "0"
        timeout: "60"
      - service: script.post_to_home_log
        data:
          message:
            ":printer: 3D printer has started. Estimated time to completion: {{((now().strftime('%s')
            | int + (states('sensor.octoprint_time_remaining') | int)) | timestamp_custom('%H:%M:%S'))}}
            ({{ ((((states('sensor.octoprint_time_remaining') | int) / 60) | float) /
            60) | round(2) }} hours)."
      - choose:
          - conditions:
              - condition: sun
                after: sunset
            sequence:
              - service: script.post_to_home_log
                data:
                  message:
                    ":printer: :city_sunset: Printing started after sunset. Turning
                    Printer light on."
              - service: scene.turn_on
                target:
                  entity_id: scene.3d_printer_light_on
          - conditions:
              - condition: sun
                before: sunrise
            sequence:
              - service: script.post_to_home_log
                data:
                  message:
                    ":printer: :city_sunset: Printing started before sunrise. Turning
                    Printer light on."
              - service: scene.turn_on
                target:
                  entity_id: scene.3d_printer_light_on
          - conditions:
              - condition: sun
                after: sunrise
                before: sunset
              - condition: state
                entity_id: light.prusa
                state: "on"
            sequence:
              - service: script.post_to_home_log
                data:
                  message:
                    ":printer: :sunny: Printing started during the day. Turning
                    Printer light off."
              - service: scene.turn_on
                target:
                  entity_id: scene.3d_printer_light_off
        default:
          - service: script.post_to_home_log
            data:
              message:
                ":printer: :sunrise: Printing started after sunrise. Not turning
                on printer light."
          - service: scene.turn_on
            target:
              entity_id: scene.3d_printer_light_off
    mode: single
  - id: "1619873649348"
    alias: "^3D Printer: 50% Complete"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: sensor.octoprint_job_percentage
        above: "50"
    condition:
      - condition: state
        entity_id: input_boolean.enable_3d_printer_automations
        state: "on"
    action:
      - service: script.post_to_home_log
        data:
          message:
            "3D printer is 50% complete and due to finish at {{((now().strftime('%s')
            | int + (states('sensor.octoprint_time_remaining') | int)) | timestamp_custom('%H:%M:%S'))}}
            ({{ ((((states('sensor.octoprint_time_remaining') | int) / 60) | float) /
            60) | round(2) }} hours)."
    mode: single
  - id: "1623087278802"
    alias: "^3D Printer: Check If Dark And Printing"
    description: ""
    trigger:
      - platform: time_pattern
        hours: "*"
        seconds: "*"
        minutes: /30
      - platform: sun
        event: sunset
    condition:
      - condition: state
        entity_id: light.prusa
        state: "off"
      - condition: numeric_state
        entity_id: sensor.conservatory_motion_light_level
        below: "100"
      - condition: state
        entity_id: binary_sensor.octoprint_printing
        state: "on"
    action:
      - service: script.post_to_home_log
        data:
          message:
            ":city_sunset: :printer: It's getting dark and 3D printer is printing.
            Turning on lights."
      - service: scene.turn_on
        target:
          entity_id: scene.3d_printer_light_on
    mode: single
  - id: "1613321560216"
    alias: "^3D Printer: Finished Printing"
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.octoprint_printing
        from: "on"
        to: "off"
    condition:
      - condition: state
        entity_id: input_boolean.enable_3d_printer_automations
        state: "on"
    action:
      - service: script.post_to_home_log
        data:
          message: ":printer: :white_check_mark: Completed 3D printing. Total time: {{ (((states('sensor.octoprint_time_elapsed') | int) / 60) | float) / 60 }} hours."
    mode: single
  - id: "1609349959402"
    alias: "^3D Printer: Print Finished And Hot End Cooled"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: sensor.octoprint_actual_tool0_temp
        below: "50"
    condition:
      - condition: state
        entity_id: input_boolean.enable_3d_printer_automations
        state: "on"
    action:
      - service: script.post_to_home_log
        data:
          message:
            ":printer: :snowflake: Hot end cooled down. Turning off extruder fan
            and light."
      - service: switch.turn_off
        target:
          entity_id: switch.prusa_fan
      - service: scene.turn_on
        target:
          entity_id: scene.3d_printer_light_off
    mode: single
input_boolean:
  enable_3d_printer_automations:
    name: Enable 3D printer automations
    icon: mdi:printer-3d
  enable_octoprint_automations:
    name: Enable Octoprint automations
    icon: mdi:printer-3d
