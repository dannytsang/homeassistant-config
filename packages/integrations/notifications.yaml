# Created by Danny Tsang <danny@tsang.uk>
# Integration: https://www.home-assistant.io/integrations/slack/
# Integration: https://www.home-assistant.io/integrations/mobile_app/
# Integration: https://www.home-assistant.io/integrations/telegram/
input_text:
  dannys_telegram_chat_id:
    name: Danny's Telegram Chat ID
    icon: mdi:message-reply-text
    initial: !secret telegram_danny_chat_id

notify:
  - platform: telegram
    name: telegram
    chat_id: !secret telegram_danny_chat_id

script:
  # Encapsulated scripts
  send_to_home_log:
    alias: Send An Entry To Home Log
    icon: mdi:message-outline
    description: "Post a text message to the home_log channel."
    max: 10
    mode: queued
    # https://github.com/home-assistant/frontend/issues/8591
    fields:
      message:
        description: Message to post.
        required: true
      title:
        description: (optional)Title to the message posted.
    sequence:
      - if:
          - condition: state
            entity_id: input_boolean.enable_notifications
            state: "on"
        then:
          - if:
            - condition: template
              value_template: "{{ 'Slack' in states('input_text.home_log_platforms') }}"
            then:
              - service: script.post_slack_notification
                data:
                  message: "{{ message }}"
                  title: "{{ title|default(none, true) }}"
                  target: "{{ states('input_text.slack_home_log_channel_id') }}"
          - if:
            - condition: template
              value_template: "{{ 'Discord' in states('input_text.home_log_platforms') }}"
            then:
              - service: script.post_discord_notification
                data:
                  message: "{{ message }}"
                  title: "{{ title|default(none, true) }}"
                  target: "{{ states('input_text.discord_home_log_channel_id') }}"
  send_direct_notification:
    alias: Send Direct Mesage To a Person
    icon: mdi:message-outline
    description: "Send a direct text message to adults in the house."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: Title to post
      people:
        description:
          (optional)People to message using people entity in a comma separated list.
          If no one is specified, it will go to everyone.
        example: "['person.danny'] or ['person.danny','person.terina']"
    variables:
      # Get people's preferred messaging platform
      slack: "{% set platforms = namespace(slack=[]) %}
        {% for p in people %}
          {% if p == 'person.danny'%}
            {% if 'Slack'|lower in states('input_text.dannys_direct_notification_preference')|lower %}
              {% set platforms.slack = platforms.slack + [p] %}
            {% endif %}
          {% elif p == 'person.terina'%}
            {% if 'Slack'|lower in states('input_text.terinas_direct_notification_preference') %}
              {% set platforms.slack = platforms.slack + [p] %}
            {% endif %}
          {% elif p == 'person.leo'%}
            {% if 'Slack'|lower in states('input_text.leos_direct_notification_preference') %}
              {% set platforms.slack = platforms.slack + [p] %}
            {% endif %}
          {% endif %}
        {% endfor %}
        {{ platforms.slack }}"
      discord: "{% set platforms = namespace(discord=[]) %}
        {% for p in people %}
          {% if p == 'person.danny'%}
            {% if 'Discord'|lower in states('input_text.dannys_direct_notification_preference')|lower %}
              {% set platforms.discord = platforms.discord + [p] %}
            {% endif %}
          {% elif p == 'person.terina'%}
            {% if 'Discord'|lower in states('input_text.terinas_direct_notification_preference')|lower %}
              {% set platforms.discord = platforms.discord + [p] %}
            {% endif %}
          {% elif p == 'person.leo'%}
            {% if 'Discord'|lower in states('input_text.leos_direct_notification_preference')|lower %}
              {% set platforms.discord = platforms.discord + [p] %}
            {% endif %}
          {% endif %}
        {% endfor %}
        {{ platforms.discord }}"
      mobile: "{% set platforms = namespace(mobile=[]) %}
        {% for p in people %}
          {% if p == 'person.danny'%}
            {% if 'Mobile'|lower in states('input_text.dannys_direct_notification_preference')|lower %}
              {% set platforms.mobile = platforms.mobile + [p] %}
            {% endif %}
          {% elif p == 'person.terina'%}
            {% if 'Mobile'|lower in states('input_text.terinas_direct_notification_preference')|lower %}
              {% set platforms.mobile = platforms.mobile + [p] %}
            {% endif %}
          {% elif p == 'person.leo'%}
            {% if 'Mobile'|lower in states('input_text.leos_direct_notification_preference')|lower %}
              {% set platforms.mobile = platforms.mobile + [p] %}
            {% endif %}
          {% endif %}
        {% endfor %}
        {{ platforms.mobile }}"
      telegram: "{% set platforms = namespace(telegram=[]) %}
        {% for p in people %}
          {% if p == 'person.danny'%}
            {% if 'Telegram'|lower in states('input_text.dannys_direct_notification_preference')|lower %}
              {% set platforms.telegram = platforms.telegram + [p] %}
            {% endif %}
          {% elif p == 'person.terina'%}
            {% if 'Telegram'|lower in states('input_text.terinas_direct_notification_preference')|lower %}
              {% set platforms.telegram = platforms.telegram + [p] %}
            {% endif %}
          {% elif p == 'person.leo'%}
            {% if 'Telegram'|lower in states('input_text.leos_direct_notification_preference')|lower %}
              {% set platforms.telegram = platforms.telegram + [p] %}
            {% endif %}
          {% endif %}
        {% endfor %}
        {{ platforms.telegram }}"
    sequence:
      # Check if notifications is turned on.
      - if:
          - condition: state
            entity_id: input_boolean.enable_direct_notifications
            state: "on"
        then:
          # Check if the message is directed at someone.
          - choose:
              # If people parameter is not set
              - conditions:
                  - condition: template
                    value_template: "{{ people is not none or people is not match('person.*') }}"
                sequence:
                  - service: script.post_slack_notification
                    data:
                      message: "{{ message }}"
                      title: "{{ title|default(none, true) }}"
                      target: "general"
                      people: "{{ states('input_text.dannys_slack_id') }} {{ states('input_text.terinas_slack_id') }}"
              # If both adults mentioned.
              - conditions:
                  - condition: template
                    value_template: "{{ 'person.danny' in people.split(',') }}"
                  - condition: template
                    value_template: "{{ 'person.terina' in people.split(',') }}"
                sequence:
                  # Check if both have the same preferred messaging platform.
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ 'Slack' in states('input_text.dannys_direct_notification_preference') }}"
                          - condition: template
                            value_template: "{{ 'Slack' in states('input_text.terinas_direct_notification_preference') }}"
                        sequence:
                          - service: script.post_slack_notification
                            data:
                              message: "{{ message }}"
                              title: "{{ title|default(none, true) }}"
                              target: "general"
                              people: "{{ states('input_text.dannys_slack_id') }} {{ states('input_text.terinas_slack_id') }}"
                    # If not, check each person's preference.
                    default:
                      - service: script.post_direct_notification_by_person
                        data:
                          message: "{{ message }}"
                          title: "{{ title|default(none, true) }}"
                          people: "{{ people }}"
              # Check if the person entity has been passed. 
              # The underly script will notify the right people if it does.
              - conditions:
                  - condition: template
                    value_template: "{{ people is not none and people is match('person.*') }}"
                sequence:
                  # Checked preferred messaging platform.
                  - service: script.post_direct_notification_by_person
                    data:
                      message: "{{ message }}"
                      title: "{{ title|default(none, true) }}"
                      people: "{{ people }}"
            # Catch all but modified message.
            default:
              - service: script.post_direct_notification_by_person
                data:
                  message: ":warning: Unknown recipient.\n
                  message: {{ message }}\n
                  people: {{ people }}"
                  title: "{{ title|default(none, true) }}"
                  people: "person.danny"
    mode: queued
    max: 10
  send_home_log_with_local_attachments:
    alias: Send To Home Log With Local Attachments
    icon: mdi:message-image-outline
    description: "Post a message with a file attachment to the home_log channel."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      filePath:
        description: File path to attach to post.
        required: true
        example: "/config/www/myImage.jpg"
    sequence:
      - if:
          - condition: state
            entity_id: input_boolean.enable_notifications
            state: "on"
        then:
          - parallel:
              - service: script.post_to_slack_with_local_attachments
                data:
                  message: "{{ message }}"
                  title: "{{ title|default(none, true) }}"
                  target: "{{ states('input_text.slack_home_log_channel_id') }}"
                  filePath: "{{ filePath }}"
              - service: script.post_to_discord_with_local_attachments
                data:
                  message: "{{ message }}"
                  title: "{{ title|default(none, true) }}"
                  target: "{{ states('input_text.discord_home_log_channel_id') }}"
                  filePath: "{{ filePath }}"
    mode: queued
    max: 10
  send_home_log_with_url:
    alias: Send To Home Log With URL
    icon: mdi:message-bookmark-outline
    description: "Post a message with a URL to the home_log channel."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      url:
        description: (optional)Link to file.
        required: true
    sequence:
      - if:
          - condition: state
            entity_id: input_boolean.enable_notifications
            state: "on"
        then:
          - parallel:
              - service: script.post_to_slack_with_url_attachment
                data:
                  message: "{{ message }}"
                  title: "{{ title|default(none, true) }}"
                  target: "{{ states('input_text.slack_home_log_channel_id') }}"
                  url: "{{ url }}"
              - service: script.post_to_discord_with_url_attachment
                data:
                  message: "{{ message }}"
                  title: "{{ title|default(none, true) }}"
                  target: "{{ states('input_text.discord_home_log_channel_id') }}"
                  url: "{{ url }}"
    mode: queued
    max: 10
  send_actionable_notification_with_2_buttons:
    alias: Send Actionable Notification With 2 Buttons
    icon: mdi:message-draw
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      people:
        description: People to message e.g. Danny, Terina
        required: true
      action1_title:
        description: First action text.
        required: true
      action1_name:
        description: First vent name if action is selected.
        required: true
      action2_title:
        description: Second action text.
        required: true
      action2_name:
        description: Second event name if action is selected.
        required: true
    sequence:
      - if:
          - condition: state
            entity_id: input_boolean.enable_direct_notifications
            state: "on"
        then:
          - service: script.post_mobile_actionable_notification_with_2_buttons
            data:
              message: "{{ message }}"
              title: "{{ title|default(none, true) }}"
              people: "{{ people }}"
              action1_title: "{{ action1_title }}"
              action1_name: "{{ action1_name }}"
              action2_title: "{{ action2_title }}"
              action2_name: "{{ action2_name }}"
    mode: queued
    max: 10
  send_actionable_notification_with_3_buttons:
    alias: Send Actionable Notification With 3 Buttons
    icon: mdi:message-draw
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      people:
        description: People to message e.g. Danny, Terina
        required: true
      action1_title:
        description: First action text.
      action1_name:
        description: First vent name if action is selected.
        required: true
      action2_title:
        description: Second action text.
        required: true
      action2_name:
        description: Second event name if action is selected.
        required: true
      action3_title:
        description: Third action text.
        required: true
      action3_name:
        description: Third event name if action is selected.
        required: true
    sequence:
      - if:
          - condition: state
            entity_id: input_boolean.enable_direct_notifications
            state: "on"
        then:
          - service: script.post_mobile_actionable_notification_with_3_buttons
            data:
              message: "{{ message }}"
              title: "{{ title|default(none, true) }}"
              people: "{{ people }}"
              data:
                action1_title: "{{ action1_title }}"
                action1_name: "{{ action1_name }}"
                action2_title: "{{ action2_title }}"
                action2_name: "{{ action2_name }}"
                action3_title: "{{ action3_title }}"
                action3_name: "{{ action3_name }}"
    mode: single
  post_direct_notification_by_person:
    alias: "Post a direct message based on a persons selected messaging platform"
    icon: mdi:message-outline
    description: "Post a direct text message to adults in the house. Please use 
    a send script to decouple from the messaging platform."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (Optional)Title to post
      people:
        description:
          (optional)People to message using people entity in a comma separated list.
          If no one is specified, it will go to everyone.
        required: true
        example: person.danny,person.terina
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ 'person.danny' in people.split(',') }}"
            sequence:
              # Checked preferred messaging platform.
              - choose:
                  - conditions:
                      - condition: template
                        value_template: "{{ 'Telegram' in states('input_text.home_log_platforms') }}"
                    sequence:
                      - service: script.post_telegram_direct_notification
                        data:
                          message: "{{ message }}"
                          title: "{{ title|default(none, true) }}"
                  - conditions:
                      - condition: template
                        value_template: "{{ 'Slack' in states('input_text.home_log_platforms') }}"
                    sequence:
                      - service: script.post_slack_notification
                        data:
                          message: "{{ message }}"
                          title: "{{ title|default(none, true) }}"
                          target: "general"
                          people: "{{ states('input_text.dannys_slack_id') }}"
                default: []
          # Check if Terina was mentioned.
          - conditions:
              - condition: template
                value_template: "{{ 'person.terina' in people.split(',') }}"
            sequence:
              - service: script.post_slack_notification
                data:
                  message: "{{ message }}"
                  title: "{{ title|default(none, true) }}"
                  target: "general"
                  people: "{{ states('input_text.terinas_slack_id') }}"
    mode: queued
    max: 10
  # Slack specific Scripts
  post_slack_notification:
    alias: Post Slack Message
    icon: mdi:message-reply
    description: "Post a text message to Slack. Please use a send script to 
    decouple from the messaging platform."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      people:
        description: (optional)Slack user ID to message.
        example: "<@ABCDEFG>"
      target:
        description: Slack channel to post the message to without the hash symbol.
        required: true
        example: "general"
    sequence:
      - choose:
        # Check a title was set
        - conditions:
            - condition: template
              value_template: "{{ title is not none }}"
          sequence:
            - service: notify.danny_tsang
              data:
                message: "{{ iif(people is not none,people|default('', true)+' ','') }}{{ message }}"
                target: "{{ target }}"
                data:
                  blocks:
                    - type: header
                      text:
                        type: "plain_text"
                        text: "{{ title }}"
                        emoji: true
                    - type: section
                      text:
                        type: mrkdwn
                        text: "{{ iif(people is not none,people|default('', true)+' ','') }}{{ message }}"
        default:
          - service: notify.danny_tsang
            data:
              message: "{{ iif(people is not none,people|default('', true)+' ','') }}{{ message }}"
              target: "{{ target }}"
              data:
                blocks:
                - type: section
                  text:
                    type: mrkdwn
                    text: "{{ iif(people is not none,people|default('', true)+' ','') }}{{ message }}"
        continue_on_error: true
    mode: queued
    max: 10
  post_to_slack_with_url_attachment:
    alias: "Post To Slack Home Log With File Or URL Attachments"
    icon: mdi:message-image
    description: "Post a message with a file or URL attachment to the home_log 
    channel. Only a file or URL can be set. Not both or neither. Please use a 
    send script to decouple from the messaging platform."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      target:
        description: Slack channel to post the message to without the hash symbol.
        required: true
        example: "general"
      url:
        description: Link to file.
        example: "https://picsum.photos/200/300"
    sequence:
      # Check if a title has been set
      - choose:
          # Check at least filePath or url is set.
          - conditions:
              - condition: template
                value_template: "{{ title is not none }}"
            sequence:
              - service: notify.danny_tsang
                data:
                  message: "{{ message }}"
                  title: "{{ title|default('', true) }}"
                  target: "{{ target }}"
                  data:
                    blocks:
                      - type: header
                        text:
                          type: "plain_text"
                          text: "{{ title }}"
                          emoji: true
                      - type: section
                        text:
                          type: mrkdwn
                          text: "{{ message }}"
                        accessory:
                          type: image
                          image_url: "{{ url }}"
                          alt_text: "{{ title|default('Failed to load image', true) }}"
        # No title set
        default:
          - service: notify.danny_tsang
            data:
              message: "{{ message }}"
              title: "{{ title|default('', true) }}"
              target: "{{ target }}"
              data:
                blocks:
                  - type: section
                    text:
                      type: mrkdwn
                      text: "{{ message }}"
                    accessory:
                      type: image
                      image_url: "{{ url }}"
                      alt_text: "{{ title|default('Failed to load image', true) }}"
        continue_on_error: true
    mode: queued
    max: 10
  post_to_slack_with_local_attachments:
    alias: "Post To Slack Home Log With File Or URL Attachments"
    icon: mdi:message-image
    description: "Post a message with a file or URL attachment to the home_log 
    channel. Only a file or URL can be set. Not both or neither. Please use a 
    send script to decouple from the messaging platform."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      target:
        description: Slack channel to post the message to without the hash symbol.
        required: true
        example: "general"
      filePath:
        description: File path to attach to post.
        required: true
    sequence:
      - service: notify.danny_tsang
        data:
          message: "{{ message }}"
          title: "{{ title|default('', true) }}"
          target: "{{ target }}"
          data:
            file:
              path: "{{ filePath }}"
        continue_on_error: true
    mode: queued
    max: 10
  # Mobile
  post_mobile_actionable_notification_with_2_buttons:
    alias: "Post Actionable Notification With 2 Buttons"
    description: "Post Actionable Notification With 2 Buttons. Please use a send script to 
    decouple from the messaging platform."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      people:
        description: People to message e.g. person.danny, person.terina
        required: true
      action1_title:
        description: First action text.
        required: true
      action1_name:
        description: First event name if action is selected.
        required: true
      action2_title:
        description: Second action text.
        required: true
      action2_name:
        description: Second event name if action is selected.
        required: true
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ 'person.danny' in people.split(',') }}"
            sequence:
              - service: notify.mobile_app_dannys_phone 
                data:
                  message: "{{ message }}"
                  title: "{{ title|default('', true) }}"
                  data:
                    actions:
                      - title: "{{ action1_title }}"
                        action: "{{ action1_name }}"
                      - title: "{{ action2_title }}"
                        action: "{{ action2_name }}"
          - conditions:
              - condition: template
                value_template: "{{ 'person.terina' in people.split(',') }}"
            sequence:
              - service: notify.mobile_app_terina_s_phone
                data:
                  message: "{{ message }}"
                  title: "{{ title|default('', true) }}"
                  data:
                    actions:
                      - title: "{{ action1_title }}"
                        action: "{{ action1_name }}"
                      - title: "{{ action2_title }}"
                        action: "{{ action2_name }}"
        default: []
    mode: queued
    max: 10
    icon: mdi:forum
  post_mobile_actionable_notification_with_3_buttons:
    alias: "Post Actionable Notification With 3 Buttons"
    description: "Post Actionable Notification With 3 Buttons. Please use a send script to 
    decouple from the messaging platform."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      people:
        description: People to message e.g. person.danny, person.terina
        required: true
      action1_title:
        description: First action text.
      action1_name:
        description: First vent name if action is selected.
        required: true
      action2_title:
        description: Second action text.
        required: true
      action2_name:
        description: Second event name if action is selected.
        required: true
      action3_title:
        description: Third action text.
        required: true
      action3_name:
        description: Third event name if action is selected.
        required: true
    sequence:
      - parallel:
        - choose:
            - conditions:
                - condition: template
                  value_template: "{{ 'person.danny' in people.split(',') }}"
              sequence:
                - service: notify.mobile_app_dannys_phone
                  data:
                    message: "{{ message }}"
                    title: "{{ title|default('', true) }}"
                    data:
                      actions:
                        - title: "{{ action1_title }}"
                          action: "{{ action1_name }}"
                        - title: "{{ action2_title }}"
                          action: "{{ action2_name }}"
                        - title: "{{ action3_title }}"
                          action: "{{ action3_name }}"
          default: []
        - choose:
            - conditions:
                - condition: template
                  value_template: "{{ 'person.terina' in people.split(',') }}"
              sequence:
                - service: notify.mobile_app_terina_s_phone
                  data:
                    message: "{{ message }}"
                    title: "{{ title|default('', true) }}"
                    data:
                      actions:
                        - title: "{{ action1_title }}"
                          action: "{{ action1_name }}"
                        - title: "{{ action2_title }}"
                          action: "{{ action2_name }}"
                        - title: "{{ action3_title }}"
                          action: "{{ action3_name }}"
          default: []
    mode: single
    icon: mdi:forum
  # Telegram specific Scripts
  post_telegram_direct_notification:
    alias: "Send Telegram Direct Message"
    icon: mdi:message-reply-text
    description: "Post a direct text message to adults in the house. Please use 
    a send script to decouple from the messaging platform."
    max: 10
    mode: queued
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: Title of post
      people:
        description: Person to send the message to e.g. person.danny.
          If not specified then it goes to everyone.
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ 'person.danny' in people.split(',') }}"
            sequence:
              - service: telegram_bot.send_message
                data:
                  message: "{{ message }}"
                  title: "{{ title|default('', true) }}"
                  target: "{{ states('input_text.dannys_telegram_chat_id') }}"
                continue_on_error: true
        default:
          - service: telegram_bot.send_message
            data:
              message: "{{ message }}"
              title: "{{ title|default('', true) }}"
              target: "{{ states('input_text.dannys_telegram_chat_id') }}"
            continue_on_error: true
  post_to_telegram_home_log_with_local_attachments:
    alias: "Post To Telegram With Local Attachments"
    icon: mdi:message-reply-text
    description: "Post a message with a file attachment to the home_log channel.
    Please use a send script to decouple from the messaging platform."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      filePath:
        description: File path to attach to post.
        required: true
    sequence:
      - service: notify.danny_tsang
        data:
          message: "{{ message }}"
          title: "{{ title|default('', true) }}"
          file: "{{ filePath }}"
        continue_on_error: true
    mode: queued
    max: 10
  # Discord specific Scripts
  post_discord_notification:
    alias: Post Discord Message
    icon: mdi:message-reply
    description: "Post a text message to Discord. Please use a send script to 
    decouple from the messaging platform."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      people:
        description: (optional)Discord user ID to message e.g. <@123456>
      target:
        description: "List of Discord channel or user ID to post the message to. 
        If a user is set then they will not be tagged but notified of the post."
        required: true
        example: "['1234', '4567']"
    sequence:
      - choose:
        # Check a title was set
        - conditions:
            - condition: template
              value_template: "{{ title is not none }}"
          sequence:
            - service: notify.home_assistant
              data:
                message: "**{{ title|default('', true) }}**
                \n{{ iif(people is not none,people|default('', true)+' ','') }}{{ message }}"
                target: "{{ target }}"
              continue_on_error: true
        default:
          - service: notify.home_assistant
            data:
              message: "{{ iif(people is not none,people|default('', true)+' ','') }}{{ message }}"
              target: "{{ target }}"
            continue_on_error: true
    mode: queued
    max: 10
  post_to_discord_with_url_attachment:
    alias: "Post To Discord a URL Attachments"
    icon: mdi:message-image
    description: "Post a message with a file or URL attachment. Please use a 
    send script to decouple from the messaging platform."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      target:
        description: "List of Discord channel or user ID to post the message to. 
        If a user is set then they will not be tagged but notified of the post."
        required: true
        example: "['1234', '4567']"
      url:
        description: Link to file.
        example: "https://picsum.photos/200/300"
    sequence:
      # Check if a title has been set
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ title is not none }}"
            sequence:
              - service: notify.danny_tsang
                data:
                  message: ""
                  target: "{{ target }}"
                  data:
                    embed:
                      title: "{{ title }}"
                      description: "{{ message }}"
                      image:
                        url: "{{ url }}"
        # No title set
        default:
          - service: notify.danny_tsang
            data:
              message: ""
              target: "{{ target }}"
              data:
                embed:
                  description: "{{ message }}"
                  image:
                    url: "{{ url }}"
        continue_on_error: true
    mode: queued
    max: 10
  post_to_discord_with_local_attachments:
    alias: "Post To Discord Home Log With File Attachments"
    icon: mdi:message-image
    description: "Post a message with a file attachment to the home_log 
    channel. Please use a 
    send script to decouple from the messaging platform."
    fields:
      message:
        description: Message to post
        required: true
      title:
        description: (optional)Title to the message posted.
      people:
        description: (optional)Discord user ID to message.
        example: "<@123456>"
      target:
        description: "List of Discord channel or user ID to post the message to. 
        If a user is set then they will not be tagged but notified of the post."
        required: true
        example: "['1234', '4567']"
      filePath:
        description: File path to attach to post.
        required: true
    sequence:
      - choose:
        # Check a title was set
        - conditions:
            - condition: template
              value_template: "{{ title is not none }}"
          sequence:
            - service: notify.home_assistant
              data:
                message: "**{{ title|default('', true) }}**
                \n{{ iif(people is not none,people|default('', true)+' ','') }}{{ message }}"
                target: "{{ target }}"
                data:
                  images: 
                    - "{{ filePath }}"
              continue_on_error: true
        default:
          - service: notify.home_assistant
            data:
              message: "{{ iif(people is not none,people|default('', true)+' ','') }}{{ message }}"
              target: "{{ target }}"
              data:
                images: 
                  - "{{ filePath }}"
            continue_on_error: true
    mode: queued
    max: 10