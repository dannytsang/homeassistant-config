# Created by Danny Tsang <danny@tsang.uk>
# Integration: https://www.home-assistant.io/integrations/cast/
automation:
  # MagicMirror
  - id: "1647307174048"
    alias: "Stairs: Check Magic Mirror Is Casting Home Assistant"
    description: ""
    trigger:
      - platform: time_pattern
        minutes: "0"
      - platform: homeassistant
        event: start
    condition:
      - or:
          - condition: state
            entity_id: input_select.home_mode
            state: "guest"
          - condition: state
            entity_id: group.adult_people
            state: "home"
      - not:
          - condition: state
            entity_id: alarm_control_panel.house_alarm
            state: "armed_away"
    action:
      parallel:
        - service: script.send_to_home_log
          data:
            message: Casting Home Assistant.
            title: ":mirror: Magic Mirror"
            log_level: "Debug"
        - service: cast.show_lovelace_view
          data:
            entity_id: media_player.stairs_chromecast
            dashboard_path: lovelace-magicmirror
            view_path: home
    mode: single
  # Google TV
  - id: "1672397019956"
    alias: "Chromecast: Google TV Turned Off"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - media_player.lounge_tv
          - media_player.bedroom_tv
        to: "off"
    condition: []
    action:
      - service: script.hyperion_notification
        data:
          entity_id: "{{ trigger.entity_id }}"
          display_state: "turned off"
    mode: queued
    max: 10
  - id: "1672397019957"
    alias: "Chromecast: Google TV Idle"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - media_player.lounge_tv
          - media_player.bedroom_tv
        to: "idle"
    condition: []
    action:
      - service: script.hyperion_notification
        data:
          entity_id: "{{ trigger.entity_id }}"
          display_state: "is playing"
    mode: queued
    max: 10
  - id: "1672397019958"
    alias: "Chromecast: Google TV Paused"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - media_player.lounge_tv
          - media_player.bedroom_tv
        to: "paused"
    condition: []
    action:
      - service: script.hyperion_notification
        data:
          entity_id: "{{ trigger.entity_id }}"
          display_state: "paused"
    mode: queued
    max: 10
  - id: "1672397019959"
    alias: "Chromecast: Google TV Turned Playing"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - media_player.lounge_tv
          - media_player.bedroom_tv
        to: "playing"
      - platform: state
        entity_id:
          - media_player.lounge_tv
          - media_player.bedroom_tv
        attribute: media_title
        to: "playing"
      - platform: state
        entity_id:
          - media_player.lounge_tv
          - media_player.bedroom_tv
        attribute: app_name
        to: "playing"
    condition: []
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: >-
                  {{ state_attr(trigger.entity_id, 'media_position') !=
                  none }}
            sequence:
              - service: script.google_tv_playing_notification
                data:
                  entity_id: "{{ trigger.entity_id }}"
    mode: queued
    max: 10

script:
  google_tv_playing_notification:
    alias: Google TV Basic Notification
    fields:
      entity_id:
        description: Entity ID of the Chromecast player.
        required: true
    variables:
      title: >-
        {%- if entity_id|default('', true) == 'media_player.lounge_tv' -%}
        :couch_and_lamp: Lounge
        {%- elif entity_id|default('', true) == 'media_player.bedroom_tv' -%}
        :bed: Bedroom
        {%- else -%}
        :warning: Unknown device {{ entity_id }}
        {%- endif -%}
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: >-
                  {{ state_attr(entity_id, 'media_position') !=
                  none and
                  camera !=
                  none}}
              - condition: template
                value_template: >-
                  {{ state_attr(entity_id, 'media_duration') !=
                  none and
                  camera !=
                  none}}
            sequence:
              - service: script.send_to_home_log
                data:
                  message: >-
                    Google :tv: TV started playing
                    {{ state_attr(entity_id, 'media_title') }} on {{ state_attr(entity_id, 'app_name') }}
                    and is at
                    {{ state_attr(entity_id, 'media_position')|
                    int|timestamp_custom('%H:%M:%S') }}/{{ state_attr(entity_id, 'media_duration')|
                    int|timestamp_custom('%H:%M:%S') }} ({{ ((state_attr(entity_id, 'media_position')|int
                    / state_attr(entity_id, 'media_duration')|int) * 100)|round(2, 'common') }}%)
                    way through.
                  title: "{{ title }}"
                  log_level: "Debug"
        default:
          - service: script.send_to_home_log
            data:
              message: "Google :tv: TV started playing {{ state_attr(entity_id, 'media_title') }} on {{ state_attr(entity_id, 'app_name') }}"
              title: "{{ title }}"
              log_level: "Debug"
