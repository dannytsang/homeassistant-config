# Created by Danny Tsang <danny@tsang.uk>
# Integration: https://github.com/tsightler/ring-mqtt
automation:
  - id: "1628956688014"
    alias: "^Alarm: Disarmed"
    description: ""
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house_alarm
        to: disarmed
    condition: []
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: ":no_bell: disarmed."
              title: ":bell: Alarm"
          - service: script.send_to_home_log
            data:
              message: ":camera: Turning off indoor cameras."
          - service: script.conservatory_turn_off_camera
          - service: script.kitchen_turn_off_camera
          - service: script.lounge_turn_off_camera
          - service: script.upstairs_turn_off_camera
          - service: script.set_central_heating_to_home_mode
    mode: single
  - id: "1587680439012"
    alias: "^Alarm: Arm Overnight Home Mode"
    description: ""
    trigger:
      - at: 00:00:00
        platform: time
      - at: 01:00:00
        platform: time
      - at: 02:00:00
        platform: time
      - at: 02:05:00
        platform: time
    condition:
      - condition: state
        entity_id: group.adult_people
        state: home
      - condition: state
        entity_id: alarm_control_panel.house_alarm
        state: disarmed
      - condition: state
        entity_id: binary_sensor.alarmed_doors_and_windows
        state: "off"
    action:
      - service: script.arm_alarm_overnight
        data:
          message: "It's late."
    mode: single
  - id: "1587680439013"
    alias: "^Alarm: Arm Overnight When Doors And Windows Shut"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.alarmed_doors_and_windows
        from: "on"
        to: "off"
    condition:
      - condition: state
        entity_id: group.adult_people
        state: home
      - condition: state
        entity_id: alarm_control_panel.house_alarm
        state: disarmed
      - condition: state
        entity_id: binary_sensor.alarmed_doors_and_windows
        state: "off"
      - condition: time
        after: "00:00:00"
      - condition: time
        before: "05:00:00"
    action:
      - service: script.arm_alarm_overnight
        data:
          message: "All alarmed :door: doors and :window: windows are now closed."
    mode: single
  - id: "1630366065607"
    alias: "^Alarm: Armed"
    description: ""
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house_alarm
        to: armed_away
    condition: []
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message:
                " Set to away mode (all sensors on). Turning on all :camera_with_flash: cameras."
              title: ":bell: Alarm"
          - service: script.conservatory_turn_on_camera
          - service: script.kitchen_turn_on_camera
          - service: script.lounge_turn_on_camera
          - service: script.upstairs_turn_on_camera
          - service: script.front_garden_turn_on_camera
    mode: single
  - id: "1614197981954"
    alias: "^Alarm: Disconnected"
    description: ""
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house_alarm
        to: unavailable
    condition: []
    action:
      - service: script.send_to_home_log
        data:
          title: ":bell: Alarm"
          message: ":warning: Disconnected from {{ states('input_text.home_assistant_bot_s_slack_id') }} :warning:"
    mode: single
  - id: "1658658845650"
    alias: "^Alarm: Disconnected For A Period Of Time"
    description: ""
    trigger:
      - platform: state
        entity_id:
        - alarm_control_panel.house_alarm
        to: unavailable
        for:
          hours: 0
          minutes: 5
          seconds: 0
    condition: []
    action:
    - service: script.send_to_home_log
      data:
        message: Alarm has been unavailable for 5 minutes. Restarting Ring MQTT add-on.
        title: ":bell: Alarm"
    - service: hassio.addon_restart
      data:
        addon: fdb328a7_ring_mqtt
    - wait_for_trigger:
        - platform: state
          entity_id:
            - alarm_control_panel.house_alarm
          from: "unavailable"
      timeout: input_number.restart_ring_mqtt_add_on_timeout
      continue_on_timeout: true
    - choose:
      - conditions:
          - condition: state
            entity_id: alarm_control_panel.house_alarm
            state: "unavailable"
        sequence:
          - service: script.send_to_home_log
            data:
              message: Restarting Ring MQTT add-on failed.
      - conditions:
          - condition: not
            conditions:
              - condition: state
                entity_id: alarm_control_panel.house_alarm
                state: "unavailable"
        sequence:
          - service: script.send_to_home_log
            data:
              message: Ring MQTT restarted successfully.
      default: []
    mode: single
  - id: "1589026420341"
    alias: "^Alarm: Triggered"
    description: ""
    trigger:
      - entity_id: alarm_control_panel.house_alarm
        platform: state
        to: triggered
    condition: []
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: Has triggered!
              title: ":rotating_light: Alarm"
          - service: script.send_actionable_notification_with_2_buttons
            data:
              message: Triggered! Turn off
              title: ":rotating_light: Alarm"
              people: "person.danny,person.terina"
              action1_title: "Yes"
              action1_name: switch_off_alarm
              action2_title: "No"
              action2_name: ignore
          - service: script.conservatory_camera_process_image
            data:
              title: ":bell: Alarm"
              message: "Conversatory"
          - service: script.lounge_camera_process_objects
            data:
              title: ":bell: Alarm"
              message: "Lounge"
          - service: script.kitchen_camera_process_image
            data:
              title: ":bell: Alarm"
              message: "Kitchen"
          - service: script.stairs_camera_process_image
            data:
              title: ":bell: Alarm"
              message: "Stairs"
          - service: script.front_garden_door_bell_camera_process_image
            data:
              title: ":bell: Alarm"
              message: "Front Door"
          - service: script.driveway_camera_process_objects
            data:
              title: ":bell: Alarm"
              message: "Driveway"
    mode: single

script:
  # Alarm modes
  set_alarm_to_away_mode:
    alias: Set Alarm To Away
    sequence:
      - parallel:
          - if:
              - alias: "Alarm is not already in away mode."
                not:
                  - condition: state
                    entity_id: alarm_control_panel.house_alarm
                    state: armed_away
            then:
              - service: script.send_to_home_log
                data:
                  message: "Turning :bell: alarm on in away mode."
                  title: ":bell: Alarm"
              - service: alarm_control_panel.alarm_arm_away
                data: {}
                target:
                  entity_id: alarm_control_panel.house_alarm
    mode: single
    icon: mdi:alarm-light
  set_alarm_to_disarmed_mode:
    alias: Set Alarm To Disarmed
    sequence:
      - parallel:
          - if:
              - alias: "Alarm is not turned off already."
                not:
                  - condition: state
                    entity_id: alarm_control_panel.house_alarm
                    state: disarmed
            then:
              - service: script.send_to_home_log
                data:
                  message: "Turning :no_bell: alarm off."
                  title: ":bell: Alarm"
              - service: alarm_control_panel.alarm_disarm
                data: {}
                target:
                  entity_id: alarm_control_panel.house_alarm
    mode: single
    icon: mdi:alarm-light-off
  set_alarm_to_home_mode:
    alias: Set Alarm To Home
    sequence:
      - parallel:
          - if:
              - alias: "Alarm is not already in away mode."
                not:
                  - condition: state
                    entity_id: alarm_control_panel.house_alarm
                    state: armed_home
            then:
              - service: script.send_to_home_log
                data:
                  message: "Changing :bell: alarm to home mode(door sensors only)."
                  title: ":bell: Alarm"
              - service: alarm_control_panel.alarm_arm_home
                data: {}
                target:
                  entity_id: alarm_control_panel.house_alarm
    mode: single
    icon: mdi:alarm-light
  # Turn on alarm on certain conditions
  arm_alarm_overnight:
    alias: Arm Alarm Overnight
    fields:
      message:
        description: Message prefix to post.
        required: true
    sequence:
      - choose:
          # Everyone home
          - conditions:
            - condition: state
              entity_id: person.danny
              state: home
            - condition: state
              entity_id: person.terina
              state: home
            sequence:
              - service: script.send_to_home_log
                data:
                  message: "{{ message }} Turning :bell: alarm on."
                  title: ":bell: Alarm"
              - service: script.set_alarm_to_home_mode
              - service: script.turn_on_downstairs_cameras
          # Danny not home and not long distance
          - conditions:
            - not:
              - condition: state
                entity_id: person.danny
                state: home
              - condition: template
                value_template:
                  "{{ states('proximity.danny_home')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
                  - 1 }}"
            - condition: state
              entity_id: person.terina
              state: home
            - condition: time
              before: "02:00:00"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: "{{ message }} :running: :house_with_garden: Danny is not home. 
                  :no_bell: Alarm not turned on and a check will be performed later."
                  title: ":bell: Alarm"
          # Danny not home and not long distance after last check
          - conditions:
            - not:
              - condition: state
                entity_id: person.danny
                state: home
              - condition: template
                value_template:
                  "{{ states('proximity.danny_home')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
                  - 1 }}"
            - condition: state
              entity_id: person.terina
              state: home
            - condition: time
              before: "02:00:00"
            sequence:
              - service: script.send_direct_notification
                data:
                  message: "{{ message }} :running: :house_with_garden: Danny is not home. 
                  :no_bell: Alarm not turned on."
                  title: ":warning: :bell: Alarm"
                  people: 
                    - person.danny
                    - person.terina
          # Danny not home and long distance away
          - conditions:
            - not:
              - condition: state
                entity_id: person.danny
                state: home
            - condition: template
              value_template:
                "{{ states('proximity.danny_home')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
                - 1 }}"
            - condition: state
              entity_id: person.terina
              state: home
            sequence:
              - service: script.send_to_home_log
                data:
                  message: "{{ message }} :running: :house_with_garden: Danny is not home and more than 
                  {{ states('input_number.long_distance_away_from_home')|int(0) }}miles away
                  ({{ states('proximity.danny_home')|float(0) }}). 
                  Turning alarm on."
                  title: ":bell: Alarm"
              - service: script.set_alarm_to_home_mode
              - service: script.turn_on_downstairs_cameras
          # Terina not home and not long distance
          - conditions:
            - condition: state
              entity_id: person.danny
              state: home
            - not:
              - condition: state
                entity_id: person.terina
                state: home
              - condition: template
                value_template:
                  "{{ states('proximity.terina_home')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
                  - 1 }}"
            - condition: time
              before: "02:00:00"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: "{{ message }} :house_with_garden: :woman_dancing: Terina is not 
                  home. :no_bell: Alarm not turned on and a check will be performed later."
                  title: ":bell: Alarm"
          # Terina not home and not long distance and after last check
          - conditions:
            - condition: state
              entity_id: person.danny
              state: home
            - not:
              - condition: state
                entity_id: person.terina
                state: home
              - condition: template
                value_template:
                  "{{ states('proximity.terina_home')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
                  - 1 }}"
            - condition: time
              after: "02:00:30"
            sequence:
              - service: script.send_direct_notification
                data:
                  message: "{{ message }} :house_with_garden: :woman_dancing: Terina is not 
                  home. :no_bell: Alarm not turned on."
                  title: ":warning: :bell: Alarm"
                  people: 
                    - person.danny
                    - person.terina
          # Terina not home and long distance away
          - conditions:
            - condition: state
              entity_id: person.danny
              state: home
            - not:
              - condition: state
                entity_id: person.terina
                state: home
            - condition: template
              value_template:
                "{{ states('proximity.terina_home')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
                - 1 }}"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: "{{ message }} :house_with_garden: :woman_dancing: Terina is not home and more than 
                  {{ states('input_number.long_distance_away_from_home')|int(0) }}miles away
                  ({{ states('proximity.terina_home')|float(0) }}). 
                  Turning alarm on."
                  title: ":bell: Alarm"
              - service: script.set_alarm_to_home_mode
              - service: script.turn_on_downstairs_cameras
        default: []
    mode: single
    icon: mdi:alarm-light