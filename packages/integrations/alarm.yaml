# Created by Danny Tsang <danny@tsang.uk>
# Integration: https://github.com/tsightler/ring-mqtt
automation:
  - id: "1628956688014"
    alias: "Alarm: Disarmed"
    description: ""
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house_alarm
        to: "disarmed"
    condition:
      - condition: state
        entity_id: input_boolean.enable_alarm_automations
        state: "on"
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: ":no_bell: disarmed."
              title: ":bell: Alarm"
              log_level: "Normal"
          - service: script.send_to_home_log
            data:
              message: ":camera: Turning off indoor cameras."
              log_level: "Debug"
          - service: script.kitchen_turn_off_camera
          - service: script.living_room_turn_off_camera
          - service: script.set_central_heating_to_home_mode
    mode: single
  - id: "1587680439012"
    alias: "Alarm: Arm Overnight Home Mode"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - schedule.alarm_scheduled_home_mode
        from: "off"
        to: "on"
      - platform: time
        at: "00:00:00"
      - platform: time_pattern
        hours: "0"
        minutes: "/30"
      - platform: time
        at: "01:00:00"
      - platform: time_pattern
        hours: "1"
        minutes: "/30"
      - platform: time
        at: "02:00:00"
    condition:
      - or:
          - condition: state
            entity_id: alarm_control_panel.house_alarm
            state: "disarmed"
          - not:
              - condition: state
                entity_id: lock.unified_front_door
                state: "locked"
      - condition: state
        entity_id: input_boolean.enable_alarm_automations
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.alarmed_doors_and_windows
                state: "on"
            sequence:
              - service: script.send_direct_notification
                data:
                  message: >-
                    :clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and now().minute | int < 35 %}30{% else %}{% endif %}:
                    Did not turned on because a door or window is still open.

                    Trying again later.
                  title: ":warning: :bell: Alarm"
                  people:
                    entity_id:
                      - person.danny
                      - person.terina
        default:
          - parallel:
              - service: script.arm_alarm_overnight
                data:
                  message: "It's late."
              - service: script.lock_front_door
    mode: single
  - id: "1587680439015"
    alias: "Alarm: Arm Overnight Home Mode Final Check"
    description: ""
    trigger:
      - at: "02:05:00"
        platform: time
    condition:
      - condition: state
        entity_id: alarm_control_panel.house_alarm
        state: "disarmed"
      - condition: state
        entity_id: input_boolean.enable_alarm_automations
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.alarmed_doors_and_windows
                state: "on"
            sequence:
              - parallel:
                  - service: script.send_direct_notification
                    data:
                      message: >-
                        :clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and now().minute | int < 35 %}30{% else %}{% endif %}:
                        Did not turned on because the following:
                        {% for opening in state_attr('binary_sensor.alarmed_doors_and_windows', 'entity_id') %}{% if states(opening) == 'on' %}
                        {{ '* ' ~ state_attr(opening, 'friendly_name') ~ '\n' }}{% endif %}{% endfor %}
                      title: ":warning: :bell: Alarm :warning:"
                      people:
                        entity_id:
                          - person.danny
                          - person.terina
                  - alias: Turn on bedroom light to warn not all doors/windows are closed.
                    service: light.turn_on
                    data:
                      rgb_color:
                        - 255
                        - 162
                        - 0
                      brightness: 255
                    target:
                      entity_id:
                        - light.under_bed_left
                        - light.under_bed_right
                        - light.bedroom_lamp_left
                        - light.bedroom_lamp_right
          - conditions:
              - condition: state
                entity_id: binary_sensor.alarmed_doors_and_windows
                state: "off"
            sequence:
              - choose:
                  - alias: Danny not home and not long distance after last check
                    conditions:
                      - not:
                          - condition: state
                            entity_id: person.danny
                            state: "home"
                          - condition: template
                            value_template:
                              "{{ states('sensor.danny_home_nearest_distance')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
                              - 1 }}"
                      - condition: state
                        entity_id: person.terina
                        state: "home"
                        for:
                          minutes: "5"
                    sequence:
                      - parallel:
                          - service: script.send_direct_notification
                            data:
                              message: >-
                                Final check for people failed. :running: :house_with_garden: Danny is not home
                                and this is the final check. :no_bell: Alarm turned on.
                              title: ":warning: :bell: Alarm"
                              people:
                                entity_id:
                                  - person.danny
                                  - person.terina
                          - service: script.set_alarm_to_home_mode
                          - service: script.lock_front_door
                  - alias: Terina not home and not long distance and after last check
                    conditions:
                      - condition: state
                        entity_id: person.danny
                        state: "home"
                        for:
                          minutes: "5"
                      - not:
                          - condition: state
                            entity_id: person.terina
                            state: "home"
                          - condition: template
                            value_template:
                              "{{ states('sensor.terina_home_nearest_distance')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
                              - 1 }}"
                    sequence:
                      - parallel:
                          - service: script.send_direct_notification
                            data:
                              message: >-
                                Final check for people failed. :house_with_garden: :woman_dancing: Terina is not
                                home and this is the final check. :no_bell: Alarm turned on.
                              title: ":bell: Alarm"
                              people:
                                entity_id:
                                  - person.danny
                                  - person.terina
                          - service: script.set_alarm_to_home_mode
                          - service: script.lock_front_door
                default: []
    mode: single
  - id: "1587680439013"
    alias: "Alarm: Arm Overnight When Doors And Windows Shut"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.alarmed_doors_and_windows
        from: "on"
        to: "off"
        for: "00:00:30"
    condition:
      - condition: state
        entity_id: group.adult_people
        state: "home"
      - condition: state
        entity_id: alarm_control_panel.house_alarm
        state: "disarmed"
      - condition: state
        entity_id: binary_sensor.alarmed_doors_and_windows
        state: "off"
      - condition: state
        entity_id: schedule.alarm_scheduled_home_mode
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_alarm_automations
        state: "on"
    action:
      - service: script.arm_alarm_overnight
        data:
          message: "All alarmed :door: doors and :window: windows are now closed."
    mode: single
  - id: "1630366065607"
    alias: "Alarm: Armed"
    description: ""
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house_alarm
        to: "armed_away"
    condition:
      - condition: state
        entity_id: input_boolean.enable_alarm_automations
        state: "on"
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: " Set to away mode (all sensors on). Turning on all :camera_with_flash: cameras."
              title: ":bell: Alarm"
              log_level: "Normal"
          - service: script.kitchen_turn_on_camera
          - service: script.living_room_turn_on_camera
          - service: script.front_garden_turn_on_camera
    mode: single
  - id: "1614197981954"
    alias: "Alarm: Disconnected"
    description: ""
    trigger:
      - platform: state
        entity_id: alarm_control_panel.house_alarm
        to: "unavailable"
        for:
          hours: 0
          minutes: 1
          seconds: 0
    condition:
      - condition: state
        entity_id: input_boolean.enable_alarm_automations
        state: "on"
    action:
      - parallel:
          - service: script.send_direct_notification
            data:
              title: ":bell: Alarm"
              message: ":warning: Disconnected from Home Assistant :warning:"
              people:
                entity_id:
                  - person.danny
          - service: script.send_to_computers
            data:
              message: Disconnected
              title: "🚨 Alarm"
              duration: 10
    mode: single
  - id: "1658658845650"
    alias: "Alarm: Disconnected For A Period Of Time"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - alarm_control_panel.house_alarm
        to: "unavailable"
        for:
          hours: 0
          minutes: 5
          seconds: 0
    condition:
      - condition: state
        entity_id: input_boolean.enable_alarm_automations
        state: "on"
    action:
      - service: script.send_to_home_log
        data:
          message: Alarm has been unavailable for 5 minutes. Restarting Ring MQTT add-on.
          title: ":bell: Alarm"
          log_level: "Normal"
      - service: hassio.addon_restart
        data:
          addon: fdb328a7_ring_mqtt
      - wait_for_trigger:
          - platform: state
            entity_id:
              - alarm_control_panel.house_alarm
            from: "unavailable"
        timeout: "{{ states('input_text.restart_ring_mqtt_add_on_timeout') }}"
        continue_on_timeout: true
      - choose:
          - conditions:
              - condition: state
                entity_id: alarm_control_panel.house_alarm
                state: "unavailable"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: Restarting Ring MQTT add-on failed.
                  title: ":bell: Alarm"
                  log_level: "Normal"
          - conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: alarm_control_panel.house_alarm
                    state: "unavailable"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: Ring MQTT restarted successfully.
                  title: ":bell: Alarm"
                  log_level: "Normal"
        default: []
    mode: single
  - id: "1589026420341"
    alias: "Alarm: Triggered"
    description: ""
    trigger:
      - entity_id: alarm_control_panel.house_alarm
        platform: state
        to: "triggered"
    condition:
      - condition: state
        entity_id: input_boolean.enable_alarm_automations
        state: "on"
    action:
      - parallel:
          - service: script.send_direct_notification
            data:
              message: Has triggered!
              title: ":rotating_light: Alarm"
              people:
                entity_id:
                  - person.danny
                  - person.terina
                  - person.leo
          - service: script.send_actionable_notification_with_2_buttons
            data:
              message: Triggered! Turn off?
              title: ":rotating_light: Alarm"
              people:
                - person.danny
                - person.terina
              action1_title: "Yes"
              action1_name: switch_off_alarm
              action2_title: "No"
              action2_name: ignore
          - service: script.post_home_assistant_direct_notification
            data:
              message: Has triggered!
              title: "🚨 Alarm"
              people:
                - person.danny
                - person.terina
                - person.leo
              priority: high
          - service: script.send_to_computers
            data:
              message: Triggered
              title: "🚨 Alarm"
              duration: 10
    mode: single

script:
  # Alarm modes
  set_alarm_to_away_mode:
    alias: Set Alarm To Away
    sequence:
      - parallel:
          - if:
              - alias: "Alarm is not already in away mode."
                not:
                  - condition: state
                    entity_id: alarm_control_panel.house_alarm
                    state: "armed_away"
            then:
              - service: script.send_to_home_log
                data:
                  message: "Turning :bell: alarm on in away mode."
                  title: ":bell: Alarm"
                  log_level: "Normal"
              - service: alarm_control_panel.alarm_arm_away
                data: {}
                target:
                  entity_id: alarm_control_panel.house_alarm
    mode: single
    icon: mdi:alarm-light
  set_alarm_to_disarmed_mode:
    alias: Set Alarm To Disarmed
    sequence:
      - parallel:
          - if:
              - alias: "Alarm is not turned off already."
                not:
                  - condition: state
                    entity_id: alarm_control_panel.house_alarm
                    state: "disarmed"
            then:
              - service: script.send_to_home_log
                data:
                  message: "Turning :no_bell: alarm off."
                  title: ":bell: Alarm"
                  log_level: "Normal"
              - service: alarm_control_panel.alarm_disarm
                data: {}
                target:
                  entity_id: alarm_control_panel.house_alarm
    mode: single
    icon: mdi:alarm-light-off
  set_alarm_to_home_mode:
    alias: Set Alarm To Home
    sequence:
      - parallel:
          - if:
              - alias: "Alarm is not already in away mode."
                not:
                  - condition: state
                    entity_id: alarm_control_panel.house_alarm
                    state: "armed_home"
            then:
              - service: script.send_to_home_log
                data:
                  message: "Changing :bell: alarm to home mode(door sensors only)."
                  title: ":bell: Alarm"
                  log_level: "Normal"
              - service: alarm_control_panel.alarm_arm_home
                data: {}
                target:
                  entity_id: alarm_control_panel.house_alarm
    mode: single
    icon: mdi:alarm-light
  # Turn on alarm on certain conditions
  arm_alarm_overnight:
    alias: Arm Alarm Overnight
    description: >-
      Does not check:
      * alarm automation is enabled
      * alarm state.
    fields:
      message:
        description: Message prefix to post.
        required: true
        selector:
          text:
            multiline: true
    sequence:
      - choose:
          - alias: Everyone home
            conditions:
              - condition: state
                entity_id: group.adult_people
                state: "home"
                for:
                  minutes: "5"
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: "{{ message }} Turning :bell: alarm on."
                      title: ":bell: Alarm"
                      log_level: "Normal"
                  - service: script.set_alarm_to_home_mode
                  - service: script.lock_front_door
          - alias: Danny not home and not long distance
            conditions:
              - not:
                  - condition: state
                    entity_id: person.danny
                    state: "home"
                  - condition: template
                    value_template:
                      "{{ states('sensor.danny_home_nearest_distance')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
                      - 1 }}"
              - condition: state
                entity_id: person.terina
                state: "home"
                for:
                  minutes: "5"
              - condition: time
                before: "02:00:00"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: >-
                    {{ message }} :running: :house_with_garden: Danny is not home.
                    :no_bell: Alarm not turned on and a check will be performed later.
                  title: ":bell: Alarm"
                  log_level: "Normal"
          - alias: Danny not home and long distance away
            conditions:
              - not:
                  - condition: state
                    entity_id: person.danny
                    state: "home"
              - condition: template
                value_template:
                  "{{ states('sensor.danny_home_nearest_distance')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
                  - 1 }}"
              - condition: state
                entity_id: person.terina
                state: "home"
                for:
                  minutes: "5"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: >-
                    {{ message }} :running: :house_with_garden: Danny is not home and more than
                    {{ states('input_number.long_distance_away_from_home')|int(0) }}miles away
                    ({{ states('sensor.danny_home_nearest_distance')|float(0) }}).
                    Turning alarm on.
                  title: ":bell: Alarm"
                  log_level: "Normal"
              - service: script.set_alarm_to_home_mode
          - alias: Terina not home and not long distance
            conditions:
              - condition: state
                entity_id: person.danny
                state: "home"
                for:
                  minutes: "5"
              - not:
                  - condition: state
                    entity_id: person.terina
                    state: "home"
                  - condition: template
                    value_template:
                      "{{ states('sensor.terina_home_nearest_distance')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
                      - 1 }}"
              - condition: time
                before: "02:00:00"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: >-
                    {{ message }} :house_with_garden: :woman_dancing: Terina is not
                    home. :no_bell: Alarm not turned on and a check will be performed later.
                  title: ":bell: Alarm"
                  log_level: "Normal"
          - alias: Terina not home and long distance away
            conditions:
              - condition: state
                entity_id: person.danny
                state: "home"
              - not:
                  - condition: state
                    entity_id: person.terina
                    state: "home"
              - condition: template
                value_template:
                  "{{ states('sensor.terina_home_nearest_distance')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
                  - 1 }}"
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: >-
                        {{ message }} :house_with_garden: :woman_dancing: Terina is not home and more than
                        {{ states('input_number.long_distance_away_from_home')|int(0) }}miles away
                        ({{ states('sensor.terina_home_nearest_distance')|float(0) }}).
                        Turning alarm on.
                      title: ":bell: Alarm"
                      log_level: "Normal"
                  - service: script.set_alarm_to_home_mode
                  - service: script.lock_front_door
        default:
          - service: script.send_direct_notification
            data:
              message: >-
                :clock{{ now().strftime('%I') | int }}{% if now().minute | int > 25 and now().minute | int < 35 %}30{% else %}{% endif %}:
                Did not turned on because not everyone is home yet.

                Trying again later.
              title: ":warning: :bell: Alarm"
              people:
                entity_id:
                  - person.danny
                  - person.terina
    mode: single
    icon: mdi:alarm-light
