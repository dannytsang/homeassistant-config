# Created by Danny Tsang <danny@tsang.uk>
automation:
  # Unit rate related automations
  - id: "1691009694611"
    alias: "Solar Assistant: Check Solar Mode"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: sensor.electricity_current_rate
        below: sensor.electricity_export_current_rate
        id: event
      - platform: state
        entity_id: sensor.electricity_current_rate
        to: sensor.electricity_export_current_rate
        id: event
      - platform: numeric_state
        entity_id: sensor.electricity_current_rate
        below: 0
        id: event
      - platform: state
        entity_id: sensor.electricity_current_rate
        to: "0"
        id: event
      - platform: time_pattern
        minutes: "1"
        id: time
      - platform: time_pattern
        minutes: "5"
        id: time
      - platform: time_pattern
        minutes: "31"
        id: time
      - platform: time_pattern
        minutes: "35"
        id: time
      - platform: homeassistant
        event: start
    condition:
      - condition: state
        entity_id: input_boolean.enable_solar_assistant_automations
        state: "on"
      - not:
          - condition: state
            entity_id: select.growatt_sph_work_mode_priority
            state: "unavailable"
    action:
      - choose:
          - alias: Rates remain above export
            conditions:
              - condition: trigger
                id:
                  - time
              - condition: numeric_state
                entity_id: sensor.electricity_previous_rate
                above: sensor.electricity_export_current_rate
              - condition: numeric_state
                entity_id: sensor.electricity_current_rate
                above: sensor.electricity_export_current_rate
            sequence:
              - service: script.solar_assistant_check_charging_mode
                data:
                  event: "event"
        default:
          - choose:
              - conditions:
                  - condition: trigger
                    id: "time_backup"
                sequence:
                  - service: script.solar_assistant_check_charging_mode
                    data:
                      event: "time"
            default:
              - service: script.solar_assistant_check_charging_mode
                data:
                  event: "event"
    mode: restart
  - id: "1689626117481"
    alias: "Solar Assistant: Electricity Rates Starts To Cost"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: sensor.electricity_current_rate
        above: 0
      - platform: numeric_state
        entity_id: sensor.electricity_current_rate
        above: sensor.electricity_export_current_rate
    condition:
      - condition: state
        entity_id: input_boolean.enable_solar_assistant_automations
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.electricity_current_rate
                below: sensor.electricity_export_current_rate
            sequence:
              - service: script.send_to_home_log
                data:
                  message: >-
                    Electrictity rate has gove above 0
                    ({{ states('sensor.electricity_current_rate', with_unit=True) }})p/kw
                    but below export
                    ({{ states('sensor.electricity_export_current_rate', with_unit=True) }}).
                    Keeping house battery charged.
                  title: Solar Assistant
                  log_level: "Debug"
        default:
          - parallel:
              - service: script.send_to_home_log
                data:
                  message: >-
                    Electrictity rate has gove above 0
                    ({{ states('sensor.electricity_current_rate', with_unit=True) }})p/kw.
                  title: Solar Assistant
                  log_level: "Debug"
              - service: script.load_first_priority_mode
                data: {}
    mode: single
  # Octopus
  - id: "1708679917302"
    alias: Solar Assistant Target Octopus Rate Turned On
    description: ""
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.octopus_energy_target_overnight_home_battery_charge_6_hours
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.charge_octopus_schedule
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_solar_assistant_automations
        state: "on"
    action:
      - parallel:
          - service: script.send_to_home_log
            metadata: {}
            data:
              log_level: Debug
              message: Target battery charge turned on.
              title: Solar Assistant
          - service: script.solar_assistant_check_charging_mode
            data: {}
    mode: single

script:
  battery_first_priority_mode:
    alias: Solar Assistant Battery First Priority Mode
    description: ""
    fields:
      max_charge:
        name: Max Charge
        description: >-
          When battery reaches this charge state,
          it will stop charging and keep it at this level (maintain mode).
        default: 100
        selector:
          number:
            min: 10
            max: 100
            unit_of_measurement: "%"
    sequence:
      - alias: Set battery stop charging %
        service: number.set_value
        target:
          entity_id: number.growatt_sph_battery_first_stop_charge
        data:
          value: >-
            {{ max_charge|default(100, true)|float(100) }}
      - if:
          - condition: state
            entity_id: select.growatt_sph_work_mode_priority
            state: Battery first
        then:
          - service: script.send_to_home_log
            data:
              message: >-
                Priority is already set to battery first. Skipping.
              title: Solar Assistant
              log_level: "Normal"
        else:
          - service: script.send_to_home_log
            data:
              message: >-
                Setting priority from {{ states('sensor.growatt_sph_inverter_mode') }}
                to battery first.
              title: Solar Assistant
              log_level: "Debug"
          - alias: Make sure inverter mode schedules are turned off
            service: script.solar_assistant_turn_off_mode_schedules
            data: {}
          - alias: Set inverter mode to battery first
            service: select.select_option
            target:
              entity_id:
                - select.growatt_sph_work_mode_priority
            data:
              option: Battery first
    mode: single
  grid_first_priority_mode:
    alias: Solar Assistant Grid First Priority Mode
    description: ""
    fields:
      max_discharge:
        name: Max Discharge
        description: >-
          When battery reaches this charge state,
          it will stop exporting and keep it at this level.
        default: 50
        selector:
          number:
            min: 10
            max: 100
            unit_of_measurement: "%"
    sequence:
      - if:
          - condition: state
            entity_id: select.growatt_sph_work_mode_priority
            state: Grid first
        then:
          - service: script.send_to_home_log
            data:
              message: >-
                Priority is already set to grid first. Skipping.
              title: Solar Assistant
              log_level: "Normal"
        else:
          # Do this first so it does not overlap with setting work mode which automatically enable grid schedule 1.
          - alias: Make sure inverter mode schedules are turned off
            service: script.solar_assistant_turn_off_mode_schedules
            data: {}
          - choose:
              - conditions:
                  - not:
                      - condition: state
                        entity_id: select.myenergi_eddi_operating_mode
                        state: "Stopped"
                      - condition: state
                        entity_id: select.myenergi_zappi_charge_mode
                        state: "Stopped"
                      - condition: state
                        entity_id: sensor.myenergi_zappi_plug_status
                        state: EV Disconnected
                sequence:
                  - parallel:
                      - service: script.send_direct_notification
                        data:
                          message: >-
                            Setting priority from {{ states('sensor.growatt_sph_inverter_mode') }}
                            to export(grid) first. Stopping Zappi and Eddi.
                          title: Solar Assistant
                          people:
                            entity_id:
                              - person.danny
                              - person.terina
                      - service: select.select_option
                        data:
                          option: Stopped
                        target:
                          entity_id: select.myenergi_eddi_operating_mode
                      - service: select.select_option
                        data:
                          option: Stopped
                        target:
                          entity_id: select.myenergi_zappi_charge_mode
              - conditions:
                  - not:
                      - condition: state
                        entity_id: select.myenergi_eddi_operating_mode
                        state: "Stopped"
                sequence:
                  - parallel:
                      - service: script.send_direct_notification
                        data:
                          message: >-
                            Setting priority from {{ states('sensor.growatt_sph_inverter_mode') }}
                            to export(grid) first and stopping Eddi.
                          title: Solar Assistant
                          people:
                            entity_id:
                              - person.danny
                      - service: select.select_option
                        data:
                          option: Stopped
                        target:
                          entity_id: select.myenergi_eddi_operating_mode
              - conditions:
                  - not:
                      - condition: state
                        entity_id: select.myenergi_zappi_charge_mode
                        state: "Stopped"
                      - condition: state
                        entity_id: sensor.myenergi_zappi_plug_status
                        state: EV Disconnected
                sequence:
                  - parallel:
                      - service: script.send_direct_notification
                        data:
                          message: >-
                            Setting priority from {{ states('sensor.growatt_sph_inverter_mode') }}
                            to export(grid) first and stopping Zappi.
                          title: Solar Assistant
                          people:
                            entity_id:
                              - person.danny
                              - person.terina
                      - service: select.select_option
                        data:
                          option: Stopped
                        target:
                          entity_id: select.myenergi_zappi_charge_mode
            default:
              - service: script.send_to_home_log
                data:
                  message: >-
                    Setting priority from {{ states('sensor.growatt_sph_inverter_mode') }}
                    to grid first.
                  title: Solar Assistant
                  log_level: "Debug"
          - alias: Set stop charge level
            service: number.set_value
            target:
              entity_id: number.growatt_sph_battery_first_stop_charge
            data:
              value: >-
                {{ states('number.growatt_sph_grid_first_stop_discharge')|default(50, true)|float(100) }}
          - alias: Set inverter mode to export first
            service: select.select_option
            target:
              entity_id:
                - select.growatt_sph_work_mode_priority
            data:
              option: Grid first
    mode: single
  load_first_priority_mode:
    alias: Solar Assistant Load First Priority Mode
    description: >-
      Disable battery first schedule which is automatically
      set when changing work mode to battery first.
    sequence:
      - if:
          - condition: state
            entity_id: select.growatt_sph_work_mode_priority
            state: Load first
          - condition: state
            entity_id: switch.growatt_sph_battery_first_slot_1_enabled
            state: "off"
          - condition: state
            entity_id: switch.growatt_sph_grid_first_slot_1_enabled
            state: "off"
        then:
          - service: script.send_to_home_log
            data:
              message: >-
                Priority is already set to load first. Skipping.
              title: Solar Assistant
              log_level: "Normal"
        else:
          - service: script.send_to_home_log
            data:
              message: >-
                Setting priority from {{ states('sensor.growatt_sph_inverter_mode') }}
                to load first.
              title: Solar Assistant
              log_level: "Debug"
          - alias: Make sure inverter mode schedules are turned off
            service: script.solar_assistant_turn_off_mode_schedules
            data: {}
          - alias: Set inverter mode to load first
            service: select.select_option
            target:
              entity_id:
                - select.growatt_sph_work_mode_priority
            data:
              option: Load first
    mode: single
  solar_assistant_turn_off_mode_schedules:
    alias: Solar Assistant Turn Off Mode Schedules
    description: >-
      Disable battery first schedule which is automatically
      set when changing work mode to battery first.
    sequence:
      - parallel:
          - repeat:
              sequence:
                - service: switch.turn_off
                  target:
                    entity_id: switch.growatt_sph_battery_first_slot_1_enabled
                  data: {}
                - delay:
                    seconds: 5
              until:
                - condition: state
                  entity_id: switch.growatt_sph_battery_first_slot_1_enabled
                  state: "off"
                  for:
                    seconds: 30
          - repeat:
              sequence:
                - service: switch.turn_off
                  target:
                    entity_id: switch.growatt_sph_grid_first_slot_1_enabled
                  data: {}
                - delay:
                    seconds: 5
              until:
                - condition: state
                  entity_id: switch.growatt_sph_grid_first_slot_1_enabled
                  state: "off"
                  for:
                    seconds: 30
    mode: single
  maintain_battery_soc:
    alias: Solar Assistant Maintain Battery SOC
    description: "Used in UI"
    sequence:
      - alias: Set battery stop charging %
        service: number.set_value
        target:
          entity_id: number.growatt_sph_battery_first_stop_charge
        data:
          value: "{{ states('sensor.growatt_sph_battery_state_of_charge')|float(100) }}"
      - alias: Make sure inverter mode schedules are turned off
        service: script.solar_assistant_turn_off_mode_schedules
        data: {}
      - if:
          - or:
              - not:
                  - condition: state
                    entity_id: select.growatt_sph_work_mode_priority
                    state: Battery first
              - condition: numeric_state
                entity_id: number.growatt_sph_battery_first_stop_charge
                above: sensor.growatt_sph_battery_state_of_charge
        then:
          - parallel:
              - service: script.send_to_home_log
                data:
                  message: >-
                    Set battery first stop charging to {{ states('sensor.growatt_sph_battery_state_of_charge', with_unit=True) }}.
                    Setting priority from {{ states('sensor.growatt_sph_inverter_mode') }}
                    to battery first.
                  title: Solar Assistant
                  log_level: "Debug"
              - alias: Set inverter mode to battery first
                service: script.battery_first_priority_mode
                data:
                  max_charge: "{{ states('sensor.growatt_sph_battery_state_of_charge')|int(100) }}"
        else:
          - service: script.send_to_home_log
            data:
              message: >-
                Set battery first stop charging to {{ states('sensor.growatt_sph_battery_state_of_charge', with_unit=True) }}.
                Already in battery first mode.
              title: Solar Assistant
              log_level: "Debug"

    mode: single
  solar_assistant_check_charging_mode:
    alias: Solar Assistant Check Charging Mode
    description: ""
    trace:
      stored_traces: 80
    fields:
      event:
        description: The trigger for running an electricity rate check.
        example: time
        required: true
        selector:
          select:
            options:
              - event
              - time
    sequence:
      - if:
          - condition: time
            after: "00:00:00"
            before: "08:00:00"
        then:
          - service: script.todays_solar_forecast_data
            response_variable: solar_forecast_data
        else:
          - service: script.tomorrows_solar_forecast_data
            response_variable: solar_forecast_data
      - choose:
          - alias: Battery First Schedule
            conditions:
              - or:
                  - and:
                      - condition: state
                        entity_id: input_boolean.enable_battery_first_schedule_1
                        state: "on"
                      - condition: state
                        entity_id: binary_sensor.battery_first_schedule_1
                        state: "on"
                  - and:
                      - condition: state
                        entity_id: input_boolean.enable_battery_first_schedule_2
                        state: "on"
                      - condition: state
                        entity_id: binary_sensor.battery_first_schedule_2
                        state: "on"
            sequence:
              - if:
                  - not:
                      - condition: state
                        entity_id: sensor.growatt_sph_inverter_mode
                        state: "Battery first"
                then:
                  - parallel:
                      - service: script.send_direct_notification
                        data:
                          message: >-
                            Battery schedule is enabled and on. Switching from
                            {{ states('sensor.growatt_sph_inverter_mode') }} to battery first mode.
                          title: Solar Assistant
                          people:
                            entity_id:
                              - person.danny
                      - service: script.battery_first_priority_mode
                        data: {}
          - alias: Grid First Schedule
            conditions:
              - or:
                  - and:
                      - condition: state
                        entity_id: input_boolean.enable_grid_first_schedule_1
                        state: "on"
                      - condition: state
                        entity_id: binary_sensor.grid_first_schedule_1
                        state: "on"
            sequence:
              - if:
                  - not:
                      - condition: state
                        entity_id: sensor.growatt_sph_inverter_mode
                        state: "Grid first"
                then:
                  - parallel:
                      - service: script.send_direct_notification
                        data:
                          message: >-
                            Grid schedule is enabled and on. Switching from
                            {{ states('sensor.growatt_sph_inverter_mode') }} to load first mode.
                          title: Solar Assistant
                          people:
                            entity_id:
                              - person.danny
                      - service: script.grid_first_priority_mode
                        data: {}
          - alias: Maintenance First Schedule
            conditions:
              - or:
                  - and:
                      - condition: state
                        entity_id: input_boolean.enable_maintain_charge_first_schedule_1
                        state: "on"
                      - condition: state
                        entity_id: binary_sensor.maintain_charge_first_schedule_1
                        state: "on"
                  - and:
                      - condition: state
                        entity_id: input_boolean.enable_maintain_charge_first_schedule_2
                        state: "on"
                      - condition: state
                        entity_id: binary_sensor.maintain_charge_first_schedule_2
                        state: "on"
            sequence:
              - if:
                  - not:
                      - condition: state
                        entity_id: sensor.growatt_sph_inverter_mode
                        state: "Maintain"
                then:
                  - parallel:
                      - service: script.send_direct_notification
                        data:
                          message: >-
                            Maintenancce schedule is enabled and on. Switching from
                            {{ states('sensor.growatt_sph_inverter_mode') }} to maintenance first mode.
                          title: Solar Assistant
                          people:
                            entity_id:
                              - person.danny
                      - service: script.battery_first_priority_mode
                        data:
                          max_charge: "{{ states('sensor.growatt_sph_battery_state_of_charge')|float(100) }}"
          - alias: "Unit rate is 0p/kw"
            conditions:
              - condition: state
                entity_id: sensor.electricity_current_rate
                state: "0.0"
              - condition: state
                entity_id: input_boolean.solar_assistant_charge_electricity_cost_nothing
                state: "on"
            sequence:
              - if:
                  - not:
                      - condition: state
                        entity_id: sensor.growatt_sph_inverter_mode
                        state: "Battery first"
                then:
                  - parallel:
                      - choose:
                          - conditions:
                              - condition: template
                                value_template: "{{ event == 'time'}}"
                            sequence:
                              - service: script.send_direct_notification
                                data:
                                  message: >-
                                    Electrictity rate is
                                    ({{ states('sensor.electricity_current_rate', with_unit=True) }})p/kw
                                    and inverter has not switched from
                                    {{ states('sensor.growatt_sph_inverter_mode') }} to load first mode.
                                  title: Solar Assistant
                                  people:
                                    entity_id:
                                      - person.danny
                        default:
                          - service: script.send_direct_notification
                            data:
                              message: >-
                                Electrictity rate costs nothing
                                ({{ states('sensor.electricity_export_current_rate', with_unit=True) }}).
                                Charging house battery.
                              title: Solar Assistant
                              people:
                                entity_id:
                                  - person.danny
                      - service: number.set_value
                        target:
                          entity_id: number.growatt_sph_battery_first_stop_charge
                        data:
                          value: "100"
                      - service: script.battery_first_priority_mode
                        data: {}
          - alias: "Unit rate is below 0p/kw"
            conditions:
              - condition: numeric_state
                entity_id: sensor.electricity_current_rate
                below: "0"
              - condition: state
                entity_id: input_boolean.solar_assistant_charge_electricity_cost_below_nothing
                state: "on"
            sequence:
              - if:
                  - not:
                      - condition: state
                        entity_id: sensor.growatt_sph_inverter_mode
                        state: "Battery first"
                then:
                  - parallel:
                      - choose:
                          - conditions:
                              - condition: template
                                value_template: "{{ event == 'time'}}"
                            sequence:
                              - service: script.send_direct_notification
                                data:
                                  message: >-
                                    Electrictity rate has gove below 0
                                    ({{ states('sensor.electricity_current_rate', with_unit=True) }})p/kw
                                    and inverter has not switched from
                                    {{ states('sensor.growatt_sph_inverter_mode') }} to load first mode.
                                  title: Solar Assistant
                                  people:
                                    entity_id:
                                      - person.danny
                        default:
                          - service: script.send_direct_notification
                            data:
                              message: >-
                                Electrictity rate
                                ({{ states('sensor.electricity_current_rate', with_unit=True) }}) has fallen
                                below 0.00 GBP/kWh.
                                Charging house battery.
                              title: Solar Assistant
                              people:
                                entity_id:
                                  - person.danny
                      - service: number.set_value
                        target:
                          entity_id: number.growatt_sph_battery_first_stop_charge
                        data:
                          value: "100"
                      - service: script.battery_first_priority_mode
                        data: {}
          - alias: Unit rate below export and charge below export enabled
            conditions:
              - condition: numeric_state
                entity_id: sensor.electricity_current_rate
                below: sensor.electricity_export_current_rate
              - condition: numeric_state
                entity_id: sensor.electricity_current_rate
                above: 0
              - or:
                  - condition: state
                    entity_id: input_boolean.enable_permanent_charge_below_export
                    state: "on"
                  - and:
                      - condition: state
                        entity_id: input_boolean.enable_charge_below_export_schedule_1
                        state: "on"
                      - condition: state
                        entity_id: binary_sensor.charge_below_export_schedule_1
                        state: "on"
                  - and:
                      - condition: state
                        entity_id: input_boolean.enable_charge_below_export_schedule_2
                        state: "on"
                      - condition: state
                        entity_id: binary_sensor.charge_below_export_schedule_2
                        state: "on"
                  - and:
                      - condition: state
                        entity_id: input_boolean.enable_charge_below_export_schedule_3
                        state: "on"
                      - condition: state
                        entity_id: binary_sensor.charge_below_export_schedule_3
                        state: "on"
            sequence:
              - if:
                  - not:
                      - condition: state
                        entity_id: sensor.growatt_sph_inverter_mode
                        state: "Battery first"
                then:
                  - parallel:
                      - choose:
                          - conditions:
                              - condition: template
                                value_template: "{{ event == 'time'}}"
                            sequence:
                              - service: script.send_direct_notification
                                data:
                                  message: >-
                                    Electrictity rate
                                    ({{ states('sensor.electricity_current_rate', with_unit=True) }}) has fallen
                                    below export ({{ states('sensor.electricity_export_current_rate', with_unit=True) }})
                                    and inverter has not switched to battery first mode.
                                  title: Solar Assistant
                                  people:
                                    entity_id:
                                      - person.danny
                        default:
                          - service: script.send_to_home_log
                            data:
                              message: >-
                                Electricity unit rate is below export rate
                                ({{ states('sensor.electricity_current_rate') ~'<=' ~
                                states('sensor.electricity_export_current_rate') }}). Charging house battery.
                              title: Solar Assistant
                              debug: "Debug"
                      - service: number.set_value
                        target:
                          entity_id: number.growatt_sph_battery_first_stop_charge
                        data:
                          value: "100"
                      - service: script.battery_first_priority_mode
                        data: {}
          - alias: Octopus scheduled charge enabled
            conditions:
              - condition: numeric_state
                entity_id: sensor.electricity_current_rate
                below: sensor.electricity_export_current_rate
              - condition: numeric_state
                entity_id: sensor.electricity_current_rate
                above: 0
              - condition: state
                entity_id: input_boolean.charge_octopus_schedule
                state: "on"
              - or:
                  - and:
                      - condition: template
                        value_template: "{{ solar_forecast_data.charge_hours_rounded == 1 }}"
                      - condition: state
                        entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_1_hour
                        state: "on"
                  - and:
                      - condition: template
                        value_template: "{{ solar_forecast_data.charge_hours_rounded == 1.5 }}"
                      - condition: state
                        entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_1_5_hours
                        state: "on"
                  - and:
                      - condition: template
                        value_template: "{{ solar_forecast_data.charge_hours_rounded == 2 }}"
                      - condition: state
                        entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_2_hours
                        state: "on"
                  - and:
                      - condition: template
                        value_template: "{{ solar_forecast_data.charge_hours_rounded == 2.5 }}"
                      - condition: state
                        entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_2_5_hours
                        state: "on"
                  - and:
                      - condition: template
                        value_template: "{{ solar_forecast_data.charge_hours_rounded == 3 }}"
                      - condition: state
                        entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_3_hours
                        state: "on"
                  - and:
                      - condition: template
                        value_template: "{{ solar_forecast_data.charge_hours_rounded == 3.5 }}"
                      - condition: state
                        entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_3_5_hours
                        state: "on"
                  - and:
                      - condition: template
                        value_template: "{{ solar_forecast_data.charge_hours_rounded == 4 }}"
                      - condition: state
                        entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_4_hours
                        state: "on"
                  - and:
                      - condition: template
                        value_template: "{{ solar_forecast_data.charge_hours_rounded == 4.5 }}"
                      - condition: state
                        entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_4_5_hours
                        state: "on"
                  - and:
                      - condition: template
                        value_template: "{{ solar_forecast_data.charge_hours_rounded == 5 }}"
                      - condition: state
                        entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_5_hours
                        state: "on"
                  - and:
                      - condition: template
                        value_template: "{{ solar_forecast_data.charge_hours_rounded == 5.5 }}"
                      - condition: state
                        entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_5_5_hours
                        state: "on"
                  - and:
                      - condition: template
                        value_template: "{{ solar_forecast_data.charge_hours_rounded == 6 }}"
                      - condition: state
                        entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_6_hours
                        state: "on"
            sequence:
              - if:
                  - not:
                      - condition: state
                        entity_id: sensor.growatt_sph_inverter_mode
                        state: "Battery first"
                then:
                  - if:
                      - or:
                          - and:
                              - condition: template
                                value_template: "{{ solar_forecast_data.charge_hours_rounded == 1 }}"
                              - condition: state
                                entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_1_hour
                                state: "on"
                          - and:
                              - condition: template
                                value_template: "{{ solar_forecast_data.charge_hours_rounded == 1.5 }}"
                              - condition: state
                                entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_1_5_hours
                                state: "on"
                          - and:
                              - condition: template
                                value_template: "{{ solar_forecast_data.charge_hours_rounded == 2 }}"
                              - condition: state
                                entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_2_hours
                                state: "on"
                          - and:
                              - condition: template
                                value_template: "{{ solar_forecast_data.charge_hours_rounded == 2.5 }}"
                              - condition: state
                                entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_2_5_hours
                                state: "on"
                          - and:
                              - condition: template
                                value_template: "{{ solar_forecast_data.charge_hours_rounded == 3 }}"
                              - condition: state
                                entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_3_hours
                                state: "on"
                          - and:
                              - condition: template
                                value_template: "{{ solar_forecast_data.charge_hours_rounded == 3.5 }}"
                              - condition: state
                                entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_3_5_hours
                                state: "on"
                          - and:
                              - condition: template
                                value_template: "{{ solar_forecast_data.charge_hours_rounded == 4 }}"
                              - condition: state
                                entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_4_hours
                                state: "on"
                          - and:
                              - condition: template
                                value_template: "{{ solar_forecast_data.charge_hours_rounded == 4.5 }}"
                              - condition: state
                                entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_4_5_hours
                                state: "on"
                          - and:
                              - condition: template
                                value_template: "{{ solar_forecast_data.charge_hours_rounded == 5 }}"
                              - condition: state
                                entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_5_hours
                                state: "on"
                          - and:
                              - condition: template
                                value_template: "{{ solar_forecast_data.charge_hours_rounded == 5.5 }}"
                              - condition: state
                                entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_5_5_hours
                                state: "on"
                          - and:
                              - condition: template
                                value_template: "{{ solar_forecast_data.charge_hours_rounded == 6 }}"
                              - condition: state
                                entity_id: binary_sensor.octopus_energy_target_overnight_home_battery_charge_6_hours
                                state: "on"
                    then:
                      - service: weather.get_forecasts
                        target:
                          entity_id: weather.home
                        data:
                          type: daily
                        response_variable: weather
                      - variables:
                          runtime: >-
                            {%- from 'get_solar_forecast.jinja' import get_first_solar_generation -%}
                            {{now() + timedelta( seconds = states('sensor.battery_runtime_duration')|int(0)) }}
                          firstSustainedHour: >-
                            {%- from 'get_solar_forecast.jinja' import get_first_solar_generation -%}
                            {%- if now().hour > 7 -%}
                            {{ as_timestamp(get_first_solar_generation('sensor.solcast_pv_forecast_forecast_tomorrow', 'detailedForecast', 'period_start', 'pv_estimate', states('sensor.home_electricity_power_daily_average_over_a_week')|float(1)))|int(0) }}
                            {%- else -%}
                            {{ as_timestamp(get_first_solar_generation('sensor.solcast_pv_forecast_forecast_today', 'detailedForecast', 'period_start', 'pv_estimate', states('sensor.home_electricity_power_daily_average_over_a_week')|float(1)))|int(0) }}
                            {%- endif -%}
                          formatted_runtime: >-
                            {%- from 'get_solar_forecast.jinja' import get_first_solar_generation -%}
                            {{ (as_timestamp(runtime) -
                            as_timestamp(get_first_solar_generation('sensor.solcast_pv_forecast_forecast_today', 'detailedForecast', 'period_start', 'pv_estimate')))|round(0) }}
                          formatted_sustained_runtime: >-
                            {{ (as_timestamp(runtime) - firstSustainedHour)|round(0) }}
                          weather_forecast_condition: >-
                            {%- if now() > today_at("22:00") and now() <= today_at("23:59")  -%}
                            {{ weather['weather.home'].forecast[1].condition }}
                            {%- else -%}
                            {{ weather['weather.home'].forecast[0].condition }}
                            {%- endif -%}
                      - parallel:
                          - if:
                              - condition: template
                                value_template: "{{ event == 'time'}}"
                            then:
                              - service: script.send_direct_notification
                                data:
                                  message: >-
                                    Scheduled to charge
                                    {{ solar_forecast_data.charge_hours }}({{ solar_forecast_data.charge_hours_rounded }})
                                    hour{{ iif(solar_forecast_data.charge_hours > 1,'s','') }}
                                    and inverter has not switched to battery first mode.
                                  title: Solar Assistant
                                  people:
                                    entity_id:
                                      - person.danny
                            else:
                              - service: script.send_direct_notification
                                data:
                                  message: >-
                                    {%- from 'get_solar_forecast.jinja' import get_first_solar_generation -%}
                                    Scheduled to charge
                                    {{ solar_forecast_data.charge_hours }}({{ solar_forecast_data.charge_hours_rounded }})
                                    hour{{ iif(solar_forecast_data.charge_hours > 1,'s','') }}.
                                    Charging house battery ({{ states('sensor.growatt_sph_battery_state_of_charge', with_unit=True) }}).


                                    Weather condition: {{ weather_forecast_condition }}


                                    Estimate battery runtime: {{ as_timestamp(runtime)|timestamp_custom('%Y-%m-%d %H:%M:%S') }}

                                    First Generation at: {{ as_timestamp(get_first_solar_generation('sensor.solcast_pv_forecast_forecast_today', 'detailedForecast', 'period_start', 'pv_estimate'))|timestamp_custom('%Y-%m-%d %H:%M:%S') }}

                                    Runtime > Generation: {{ as_timestamp(runtime) > as_timestamp(get_first_solar_generation('sensor.solcast_pv_forecast_forecast_today', 'detailedForecast', 'period_start', 'pv_estimate')) }}

                                    Time Over First Generation: {{ '{:02d}:{:02d}:{:02d}'.format(formatted_runtime // 3600, (formatted_runtime % 3600) // 60, (formatted_runtime % 3600) % 60) }}


                                    First Self Sustainable Generation: {{ firstSustainedHour|timestamp_custom('%H:%M:%S') }}

                                    Runtime > Self Sustainable Generation: {{ as_timestamp(runtime) > firstSustainedHour }}

                                    Time Over Sustainable Generation: {{ '{:02d}:{:02d}:{:02d}'.format(formatted_sustained_runtime // 3600, (formatted_sustained_runtime % 3600) // 60, (formatted_sustained_runtime % 3600) % 60) }}
                                  title: Solar Assistant
                                  people:
                                    entity_id:
                                      - person.danny
                                  continue_on_error: true
                          - service: script.battery_first_priority_mode
                            data:
                              max_charge: "{{ solar_forecast_data.estimate_charge_percentage|int(100) }}"
          - alias: Rates go above export fail safe
            conditions:
              - condition: numeric_state
                entity_id: sensor.electricity_current_rate
                above: sensor.electricity_export_current_rate
              - not:
                  - condition: state
                    entity_id: select.growatt_sph_work_mode_priority
                    state: Load first
              - condition: template
                value_template: "{{ event == 'time'}}"
            sequence:
              - parallel:
                  - service: script.send_direct_notification
                    data:
                      message: >-
                        Electrictity rate has gove above export
                        ({{ states('sensor.electricity_export_current_rate', with_unit=True) }})
                        {{ states('sensor.electricity_current_rate', with_unit=True) }}
                        and inverter has not switched from
                        {{ states('sensor.growatt_sph_inverter_mode') }} to load first mode.


                        Switching.
                      title: Solar Assistant
                      people:
                        entity_id:
                          - person.danny
                  - service: script.load_first_priority_mode
                    data: {}
          - alias: Default mode
            conditions:
              - not:
                  - condition: state
                    entity_id: sensor.growatt_sph_inverter_mode
                    state: "Load first"
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: >-
                        Default mode: Changing to Load first.
                      title: Solar Assistant
                      debug: "Debug"
                  - service: script.load_first_priority_mode
                    data: {}
        default: []
    mode: restart

sensor:
  - platform: statistics
    name: "Home Electricity Power Average Over An Hour"
    unique_id: 97f8c377-acd2-4d92-a2f2-6bbf5ca0b110
    entity_id: sensor.growatt_sph_load_power
    state_characteristic: mean
    max_age:
      hours: 1
  - platform: statistics
    name: "Home Electricity Power Average Over A Day"
    unique_id: 74b261eb-6feb-473d-87b4-8eca961be99d
    entity_id: sensor.growatt_sph_load_power
    state_characteristic: mean
    max_age:
      hours: 24
  - platform: statistics
    name: "Home Electricity Power Average Over A Week"
    unique_id: 47f78be2-bea5-499c-926b-50b48f92f202
    entity_id: sensor.growatt_sph_load_power
    state_characteristic: mean
    max_age:
      days: 7
  - platform: statistics
    name: "Home Electricity Power Average Over A Month"
    unique_id: c0b7e702-5468-4cb1-8221-8067cf44c3e1
    entity_id: sensor.growatt_sph_load_power
    state_characteristic: mean
    max_age:
      days: 30
  - platform: statistics
    name: "Home Electricity Power Median Over An Hour"
    unique_id: b9256d7e-504c-43e2-ac7d-f77ed5b69aaa
    entity_id: sensor.growatt_sph_load_power
    state_characteristic: median
    max_age:
      hours: 1
  - platform: statistics
    name: "Home Electricity Power Median Over A Day"
    unique_id: 82ff2fd7-2694-4171-b0ec-3cafc52205cf
    entity_id: sensor.growatt_sph_load_power
    state_characteristic: median
    max_age:
      hours: 24
  - platform: statistics
    name: "Home Electricity Power Median Over A Week"
    unique_id: fe221135-0a10-414b-8954-137ea83aa73f
    entity_id: sensor.growatt_sph_load_power
    state_characteristic: median
    max_age:
      days: 7
  - platform: statistics
    name: "Home Electricity Power Median Over A Month"
    unique_id: 5891e92f-7bbc-4c51-941e-aa005fba93f9
    entity_id: sensor.growatt_sph_load_power
    state_characteristic: median
    max_age:
      days: 30
  - platform: statistics
    name: "Home Electricity Power Standard Deviation Over An Hour"
    unique_id: 3b115d2e-f765-4e47-b53d-03ff61ca6ada
    entity_id: sensor.growatt_sph_load_power
    state_characteristic: standard_deviation
    max_age:
      hours: 1
  - platform: statistics
    name: "Home Electricity Power Standard Deviation Over A Day"
    unique_id: 3a0d219c-2dc3-4ef5-8964-23e739768499
    entity_id: sensor.growatt_sph_load_power
    state_characteristic: standard_deviation
    max_age:
      hours: 24
  - platform: statistics
    name: "Home Electricity Power Standard Deviation Over A Week"
    unique_id: c5a650f5-7d46-4918-a484-485831c7a922
    entity_id: sensor.growatt_sph_load_power
    state_characteristic: standard_deviation
    max_age:
      days: 7
  - platform: statistics
    name: "Home Electricity Power Standard Deviation Over A Month"
    unique_id: 15d61ca0-bf3f-4959-a526-bb4c5b9f851b
    entity_id: sensor.growatt_sph_load_power
    state_characteristic: standard_deviation
    max_age:
      days: 30

template:
  # Solar Assistant
  - trigger:
      - platform: state
        entity_id:
          - sensor.growatt_sph_battery_power
    sensor:
      - name: "Growatt SPH Battery Discharge Power"
        unique_id: 251bd989-90a2-4e1b-81d0-b6d87f934eeb
        state: >-
          {{ iif(states('sensor.growatt_sph_battery_power')|float(0) < 0, states('sensor.growatt_sph_battery_power')|float(0)|abs, 0) }}
        availability: "{{ states('sensor.growatt_sph_battery_power')|is_number }}"
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
  - trigger:
      - platform: state
        entity_id:
          - sensor.growatt_sph_battery_power
    sensor:
      - name: "Growatt SPH Battery Charge Power"
        unique_id: fe4f9f9c-4a61-4b27-9122-9c17ce5da164
        state: >-
          {% if states('sensor.growatt_sph_battery_power')|float(0) > 0 -%}
            {{ states('sensor.growatt_sph_battery_power')|float(0) }}
          {%- else -%}
            0
          {%- endif -%}
        availability: "{{ states('sensor.growatt_sph_battery_power')|is_number }}"
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
  - trigger:
      - platform: state
        entity_id:
          - number.growatt_sph_battery_first_stop_charge
          - switch.growatt_sph_battery_first_slot_1_enabled
          - switch.growatt_sph_grid_first_slot_1_enabled
          - select.growatt_sph_work_mode_priority
    sensor:
      - name: "Growatt SPH Inverter Mode"
        unique_id: da2d35ac-8c82-4d85-8529-25f28d3e7712
        state: >-
          {%- if states('switch.growatt_sph_battery_first_slot_1_enabled') == 'on' and
          states('number.growatt_sph_battery_first_stop_charge')|int(100) < 100 -%}
          Maintain
          {%- elif states('switch.growatt_sph_battery_first_slot_1_enabled') == 'on' -%}
          Battery first
          {%- elif states('switch.growatt_sph_grid_first_slot_1_enabled') == 'on' -%}
          Grid first
          {%- else -%}
          {{ states('select.growatt_sph_work_mode_priority') }}
          {%- endif -%}
        icon: >-
          {%- if states('switch.growatt_sph_battery_first_slot_1_enabled') == 'on' and
          states('number.growatt_sph_battery_first_stop_charge')|int(100) < 100 -%}
          mdi:power-plug-battery
          {%- elif states('switch.growatt_sph_battery_first_slot_1_enabled') == 'on' -%}
          mdi:battery-charging
          {%- elif states('switch.growatt_sph_grid_first_slot_1_enabled') == 'on' -%}
          mdi:battery-minus-variant
          {%- else -%}
          mdi:home-battery
          {%- endif -%}
  - trigger:
      - platform: state
        entity_id:
          - number.growatt_sph_load_first_stop_discharge
          - sensor.growatt_sph_battery_state_of_charge
    sensor:
      - name: "Usable Battery State of Charge"
        unique_id: a681cc96-bfb5-407c-bc9d-d93f4a0f854f
        state: "{{ ((states('sensor.growatt_sph_battery_state_of_charge')|float(0)) - (states('number.growatt_sph_load_first_stop_discharge')|float(0)))/100 }}"
        attributes:
          discharge_stop_soc: >-
            {{ states('number.growatt_sph_load_first_stop_discharge') }}
          soc: >-
            {{ states('sensor.growatt_sph_battery_state_of_charge') }}
        device_class: "battery"
        unit_of_measurement: "%"
  - trigger:
      - platform: state
        entity_id:
          - input_number.solar_battery_size
          - sensor.growatt_sph_load_power
          - sensor.usable_battery_state_of_charge
    sensor:
      - name: "Battery Runtime"
        unique_id: c5955655-eb91-4bd7-9f8f-afc4e4f0c58c
        # Formula:
        # (Battery Size x useable charge remaining) / current usage = kWh remaining
        state: "{{ now() + timedelta( seconds = (((states('input_number.solar_battery_size')|float(0) * states('sensor.usable_battery_state_of_charge')|float(0)) / (states('sensor.growatt_sph_load_power')|replace('0','1')|float(1))) * 60 * 60)|round(0)) }}"
        icon: mdi:battery-clock-outline
        attributes:
          duration: >-
            {% set ts = (((states('input_number.solar_battery_size')|float(0) * states('sensor.usable_battery_state_of_charge')|float(0)) / (states('sensor.growatt_sph_load_power')|replace('0','1')|float(1))) * 60 * 60)|round(0) %}
            {{ '{:02d}:{:02d}:{:02d}'.format(ts // 3600, (ts % 3600) // 60, (ts % 3600) % 60) }}
        device_class: "timestamp"
  - trigger:
      - platform: state
        entity_id:
          - input_number.solar_battery_size
          - sensor.growatt_sph_load_power
          - sensor.usable_battery_state_of_charge
    sensor:
      - name: "Battery Runtime Duration"
        unique_id: b3055c12-734f-4091-8d1b-c995d25f815e
        # Formula:
        # (Battery Size x useable charge remaining) / current usage = kWh remaining
        state: >-
          {{ (((states('input_number.solar_battery_size')|float(0) * states('sensor.usable_battery_state_of_charge')|float(0)) / (states('sensor.growatt_sph_load_power')|replace('0','1')|float(1))) * 60 * 60)|round(0) }}
        icon: mdi:battery-clock-outline
        unit_of_measurement: "s"
        device_class: "duration"
  - trigger:
      - platform: state
        entity_id:
          - input_number.solar_battery_size
          - sensor.growatt_battery_charge_power
          - sensor.growatt_sph_battery_state_of_charge
    sensor:
      - name: "Time To Charge Battery"
        unique_id: 78ea1413-0d1c-4b89-b109-c961fc30f84d
        # 359999 seconds = 99:99:99 suration (H:M:S)
        state: "{{ now() + timedelta( seconds = (((((states('input_number.solar_battery_size')|float(0)) * (1 - (states('sensor.growatt_sph_battery_state_of_charge')|float(0)/100))) /([states('sensor.growatt_battery_charge_power')|float(1),1]|max|float(1)))*60*60)|round(0)) if (states('sensor.growatt_battery_charge_power')|float(0)) != 0 else 359999) }}"
        icon: mdi:battery-clock
        attributes:
          duration: >-
            {% set ts = (((((states('input_number.solar_battery_size')|float(0)) * (1 - (states('sensor.growatt_sph_battery_state_of_charge')|float(0)/100))) /([states('sensor.growatt_battery_charge_power')|float(1),1]|max|float(1)))*60*60)|round(0)) if (states('sensor.growatt_battery_charge_power')|float(0)) != 0 else 359999 %}
            {{ '{:02d}:{:02d}:{:02d}'.format(ts // 3600, (ts % 3600) // 60, (ts % 3600) % 60) }}
        device_class: "timestamp"
