# Created by Danny Tsang <danny@tsang.uk>
# Integration: https://github.com/tolwi/hassio-ecoflow-cloud
automation:
  - id: "1689437015870"
    alias: "EcoFlow: Solar Below House Consumption"
    description: ""
    triggers:
      - trigger: numeric_state
        entity_id: sensor.ecoflow_solar_excess
        below: 0
        for:
          hours: 0
          minutes: 5
          seconds: 0
    conditions:
      - or:
          - condition: numeric_state
            entity_id: sensor.electricity_current_rate
            above: sensor.electricity_export_current_rate
          - condition: state
            entity_id: sensor.electricity_current_rate
            state: "unavailable"
      - or:
          - and:
              - condition: numeric_state
                entity_id: number.ecoflow_kitchen_backup_reserve_level
                above: input_number.ecoflow_kitchen_minimum_backup_reserve
              - condition: state
                entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
                state: "on"
          - and:
              - condition: numeric_state
                entity_id: number.ecoflow_office_backup_reserve_level
                above: input_number.ecoflow_office_minimum_backup_reserve
              - condition: state
                entity_id: switch.ecoflow_office_backup_reserve_enabled
                state: "on"
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
    actions:
      - action: script.ecoflow_check_charging_mode
        data:
          current_electricity_import_rate: "{{ states('sensor.electricity_current_rate') }}"
          current_electricity_import_rate_unit: "{{ state_attr('sensor.electricity_current_rate', 'unit_of_measurement') }}"
          current_electricity_export_rate: "{{ states('sensor.electricity_export_current_rate') }}"
      - if:
          - condition: state
            entity_id: timer.check_solar_excess
            state: "active"
        then:
          - action: timer.cancel
            data: {}
            target:
              entity_id: timer.check_solar_excess
    mode: restart
  - id: "1689437015871"
    alias: "EcoFlow: Solar Above House Consumption"
    description: ""
    triggers:
      - trigger: numeric_state
        entity_id: sensor.ecoflow_solar_excess
        above: input_number.ecoflow_charge_solar_threshold
        for:
          hours: 0
          minutes: 5
          seconds: 0
      - trigger: event
        event_type: timer.finished
        event_data:
          entity_id: timer.check_solar_excess
    conditions:
      - condition: state
        entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
    actions:
      - parallel:
          - action: script.ecoflow_check_charging_mode
            data:
              current_electricity_import_rate: "{{ states('sensor.electricity_current_rate') }}"
              current_electricity_import_rate_unit: "{{ state_attr('sensor.electricity_current_rate', 'unit_of_measurement') }}"
              current_electricity_export_rate: "{{ states('sensor.electricity_export_current_rate') }}"
          - choose:
              - conditions:
                  - condition: numeric_state
                    entity_id: sensor.grid_power
                    below: 0
                  - not:
                      - condition: state
                        entity_id: timer.check_solar_excess
                        state: "active"
                sequence:
                  - action: timer.start
                    data:
                      duration: "00:05:00"
                    target:
                      entity_id: timer.check_solar_excess
    mode: queued
    max: 10
  # region Monitoring
  - id: "1695566530591"
    alias: "EcoFlow: Battery Low And Plug Is Off"
    description: ""
    triggers:
      - trigger: numeric_state
        entity_id: sensor.ecoflow_kitchen_battery_level
        below: sensor.ecoflow_kitchen_minimum_backup_reserve_low_threshold
      - trigger: numeric_state
        entity_id: sensor.ecoflow_office_battery_level
        below: sensor.ecoflow_office_minimum_backup_reserve_low_threshold
    conditions:
      - or:
          - condition: state
            entity_id: switch.ecoflow_kitchen_plug
            state: "off"
          - condition: state
            entity_id: switch.ecoflow_office_plug
            state: "off"
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
    actions:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.entity_id == 'sensor.ecoflow_kitchen_battery_level'}}"
              - condition: state
                entity_id: switch.ecoflow_kitchen_plug
                state: "off"
            sequence:
              - parallel:
                  - action: script.send_direct_notification
                    data:
                      message: >-
                        Fridge Freezer switch is off and battery level ({{ states('sensor.ecoflow_kitchen_battery_level') }})
                        below minimum ({{ states('sensor.ecoflow_kitchen_minimum_backup_reserve_low_threshold') }}).
                        Turning on.
                      title: EcoFlow
                      people:
                        entity_id:
                          - person.danny
                  - action: switch.turn_on
                    metadata: {}
                    data: {}
                    target:
                      entity_id: switch.ecoflow_kitchen_plug
                  - action: script.ecoflow_set_charge_rate
                    data:
                      entity_id: number.ecoflow_kitchen_ac_charging_power
                      target_charge_rate: 200
                  - action: script.ecoflow_set_backup_reserve
                    data:
                      entity_id: number.ecoflow_kitchen_backup_reserve_level
                      target_reserve_amount: input_number.ecoflow_kitchen_minimum_backup_reserve
          - conditions:
              - condition: template
                value_template: "{{ trigger.entity_id == 'sensor.ecoflow_office_battery_level'}}"
              - condition: state
                entity_id: switch.ecoflow_office_plug
                state: "off"
            sequence:
              - parallel:
                  - action: script.send_direct_notification
                    data:
                      message: >-
                        Office switch is off and battery level ({{ states('sensor.ecoflow_office_battery_level') }})
                        below minimum ({{ states('sensor.ecoflow_office_minimum_backup_reserve_low_threshold') }}).
                        Turning on.
                      title: EcoFlow
                      people:
                        entity_id:
                          - person.danny
                  - action: switch.turn_on
                    metadata: {}
                    data: {}
                    target:
                      entity_id: switch.ecoflow_office_plug
        default: []
    mode: single
  - id: "1719062430507"
    alias: "EcoFlow: Kitchen Plug Offline"
    description: ""
    triggers:
      - trigger: numeric_state
        entity_id:
          - sensor.ecoflow_kitchen_battery_level
        below: sensor.ecoflow_kitchen_minimum_backup_reserve_low_threshold
    conditions:
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
      - condition: or
        conditions:
          - condition: state
            entity_id: switch.ecoflow_kitchen_plug
            state: unavailable
          - condition: state
            entity_id: switch.ecoflow_kitchen_plug
            state: unknown
    actions:
      - action: script.send_direct_notification
        metadata: {}
        data:
          people:
            entity_id:
              - person.danny
          title: EcoFlow
          message: Kitchen plug is offline!
    mode: single
  - id: "1719062430508"
    alias: "EcoFlow: Office Plug Offline"
    description: ""
    triggers:
      - trigger: numeric_state
        entity_id:
          - sensor.ecoflow_office_battery_level
        below: sensor.ecoflow_office_minimum_backup_reserve_low_threshold
    conditions:
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
      - condition: or
        conditions:
          - condition: state
            entity_id: switch.ecoflow_office_plug
            state: unavailable
          - condition: state
            entity_id: switch.ecoflow_office_plug
            state: unknown
    actions:
      - action: script.send_direct_notification
        metadata: {}
        data:
          people:
            entity_id:
              - person.danny
          title: EcoFlow
          message: Office plug is offline!
    mode: single
  - id: "1719061926981"
    alias: "Ecoflow: Kitchen Battery Low And Switch Comes Online"
    description: ""
    triggers:
      - trigger: state
        entity_id:
          - switch.ecoflow_kitchen_plug
        from: unavailable
        to: "off"
    conditions:
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
      - condition: numeric_state
        entity_id: sensor.ecoflow_kitchen_battery_level
        below: sensor.ecoflow_kitchen_minimum_backup_reserve_low_threshold
    actions:
      - parallel:
          - action: script.send_direct_notification
            metadata: {}
            data:
              title: EcoFlow
              message: >-
                Kitchen Battery Below minimum threshold
                {{ states('sensor.ecoflow_kitchen_battery_level') }}({{ states('sensor.ecoflow_kitchen_minimum_backup_reserve_low_threshold') }})
                and switch has become available. Turning switch on.
              people:
                entity_id:
                  - person.danny
          - action: switch.turn_on
            data: {}
            target:
              entity_id: switch.ecoflow_kitchen_plug
    mode: single
  - id: "1719061926982"
    alias: "Ecoflow: Office Battery Low And Switch Comes Online"
    description: ""
    triggers:
      - trigger: state
        entity_id:
          - switch.ecoflow_office_plug
        from: unavailable
        to: "off"
    conditions:
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
      - condition: numeric_state
        entity_id: sensor.ecoflow_office_battery_level
        below: sensor.ecoflow_office_minimum_backup_reserve_low_threshold
    actions:
      - parallel:
          - action: script.send_direct_notification
            metadata: {}
            data:
              title: EcoFlow
              message: >-
                Office Battery Below minimum threshold
                {{ states('sensor.ecoflow_office_battery_level') }}({{ states('sensor.ecoflow_office_minimum_backup_reserve_low_threshold') }})
                and switch has become available. Turning switch on.
              people:
                entity_id:
                  - person.danny
          - action: switch.turn_on
            data: {}
            target:
              entity_id: switch.ecoflow_office_plug
    mode: single
  - id: "1714563193661"
    alias: "EcoFlow: Battery Ultra Low And Plug Is Off"
    description: ""
    triggers:
      - trigger: numeric_state
        entity_id:
          - sensor.ecoflow_kitchen_battery_level
        below: 6
    conditions:
      - condition: state
        entity_id: switch.ecoflow_kitchen_plug
        state: "off"
    actions:
      - parallel:
          - action: script.send_direct_notification
            metadata: {}
            data:
              message: Ecoflow battery is ultra low and unable to turn the plug on.
              title: ":cook: Kitchen"
              people:
                entity_id:
                  - person.danny
                  - person.terina
    mode: single
  - id: "1714641195916"
    alias: "Ecoflow: Goes Offline"
    description: ""
    triggers:
      - trigger: state
        entity_id:
          - sensor.ecoflow_kitchen_main_battery_level
        to: unknown
        for:
          minutes: 30
      - trigger: state
        entity_id:
          - sensor.ecoflow_kitchen_main_battery_level
        to: unavailable
        for:
          minutes: 30
    conditions:
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
    actions:
      - if:
          - condition: state
            entity_id: switch.ecoflow_kitchen_plug
            state: "off"
        then:
          - parallel:
              - action: script.send_to_home_log
                data:
                  message: >-
                    Kitchen has been offline for more than 30 minutes and the plug is switched off.
                    Turning Fridge Freeze plug on.
                  title: EcoFlow
                  log_level: "Debug"
              - action: switch.turn_on
                metadata: {}
                data: {}
                target:
                  entity_id: switch.ecoflow_kitchen_plug
    mode: single
  - id: "1734262347581"
    alias: "Ecoflow: No Power Drawn By Device"
    description: ""
    triggers:
      - trigger: numeric_state
        entity_id:
          - sensor.ecoflow_kitchen_power_over_12_hours
        below: 9.9
    conditions: []
    actions:
      - action: script.send_direct_notification
        metadata: {}
        data:
          message: Check Ecoflow In the kitchen for power.
          title: Kitchen
          people:
            entity_id:
              - person.terina
              - person.danny
    mode: single
  # Timed / Scheduled
  - id: "1745329568830"
    alias: "Ecoflow: Sunset"
    description: ""
    triggers:
      - trigger: sun
        event: sunset
    conditions: []
    actions:
      - parallel:
          - action: script.ecoflow_office_turn_off_plug
            data: {}
          - action: script.ecoflow_kitchen_turn_off_plug
            data: {}
    mode: single

script:
  ecoflow_set_backup_reserve:
    alias: Ecoflow Set Backup Reserve
    fields:
      entity_id:
        description: Back up reserve entity to apply to.
        selector:
          entity:
            filter:
              integration: "ecoflow_cloud"
              domain: number
      target_reserve_amount:
        description: Reserve amount to be set from 10-100%.
        required: true
        selector:
          number:
            min: 10
            max: 100
            step: 1
            unit_of_measurement: "%"
            mode: "box"
    sequence:
      - variables:
          input_number_entity_id: >-
            {%- if entity_id == 'number.ecoflow_kitchen_backup_reserve_level' -%}
            input_number.target_ecoflow_kitchen_backup_reserve
            {%- elif entity_id == 'number.ecoflow_office_backup_reserve_level' -%}
            input_number.target_ecoflow_office_backup_reserve
            {%- endif -%}
      - action: input_number.set_value
        data:
          value: "{{ target_reserve_amount|int(10) }}"
        target:
          entity_id: "{{ input_number_entity_id }}"
      - action: script.ecoflow_update_backup_reserve
        data:
          entity_id: "{{ entity_id }}"
          reserve_amount: "{{ states(input_number_entity_id)|int(100) }}"
    mode: queued
    max: 10
  ecoflow_update_backup_reserve:
    alias: Ecoflow Update Backup Reserve
    fields:
      entity_id:
        description: Back up reserve entity to apply to.
        required: true
        selector:
          entity:
            filter:
              integration: "ecoflow_cloud"
              domain: number
      reserve_amount:
        description: Reserve amount to be set from 10-100%.
        required: true
        selector:
          number:
            min: 10
            max: 100
            step: 1
            unit_of_measurement: "%"
            mode: "box"
    sequence:
      - action: retry.call
        target:
          entity_id: "{{ entity_id }}"
        data:
          service: number.set_value
          value: "{{ reserve_amount|int(10) }}"
          expected_state: "{{ reserve_amount|int(10) }}"
          retries: 5
          state_delay: 60
          on_error:
            - action: script.send_direct_notification
              data:
                message: Retry failed to set backup for {{ state_attr(entity_id, 'friendly_name') }} to {{ reserve_amount }}%.
                title: Ecoflow
                people:
                  entity_id:
                    - person.danny
    mode: queued
    max: 10
  ecoflow_set_backup_reserve_to_target:
    alias: Ecoflow Set Backup Reserve To Target
    fields:
      entity_id:
        description: Back up reserve entity to apply to.
        selector:
          entity:
            filter:
              integration: "ecoflow_cloud"
              domain: number
    sequence:
      - variables:
          input_number_entity_id: >-
            {%- if entity_id == 'number.ecoflow_kitchen_backup_reserve_level' -%}
            input_number.target_ecoflow_kitchen_backup_reserve
            {%- elif entity_id == 'number.target_ecoflow_kitchen_backup_reserve' -%}
            input_number.target_ecoflow_office_backup_reserve
            {%- endif -%}
      - action: script.ecoflow_update_backup_reserve
        data:
          entity_id: "{{ entity_id }}"
          reserve_amount: "{{ states(input_number_entity_id)|int(100) }}"
    mode: queued
    max: 10
  ecoflow_set_charge_rate:
    alias: Ecoflow Set Charge Rate
    fields:
      entity_id:
        description: Back up reserve entity to apply to.
        required: true
        selector:
          entity:
            filter:
              integration: "ecoflow_cloud"
              domain: number
      target_charge_rate:
        description: Rate of charge expressed in watts from 200-1200.
        required: true
        selector:
          number:
            min: 200
            max: 1200
            step: 200
            unit_of_measurement: "w"
            mode: "box"
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: >-
                  {{ entity_id == 'number.ecoflow_kitchen_ac_charging_power' }}
            sequence:
              - action: input_number.set_value
                data:
                  value: "{{ target_charge_rate|int(200) }}"
                target:
                  entity_id: input_number.target_ecoflow_kitchen_charge_rate
              - action: script.ecoflow_update_charge_rate
                data:
                  entity_id: number.ecoflow_kitchen_ac_charging_power
                  charge_rate: "{{ states('input_number.target_ecoflow_kitchen_charge_rate')|int(200) }}"
          - conditions:
              - condition: template
                value_template: >-
                  {{ entity_id == 'number.ecoflow_office_ac_charging_power' }}
            sequence:
              - action: input_number.set_value
                data:
                  value: "{{ target_charge_rate|int(200) }}"
                target:
                  entity_id: input_number.target_ecoflow_office_charge_rate
              - action: script.ecoflow_update_charge_rate
                data:
                  entity_id: number.ecoflow_office_ac_charging_power
                  charge_rate: "{{ states('input_number.target_ecoflow_office_charge_rate')|int(200) }}"
        default: []
    mode: queued
    max: 10
  ecoflow_update_charge_rate:
    alias: Ecoflow Update Charge Rate
    fields:
      entity_id:
        description: Charge rate entity to apply to.
        required: true
        selector:
          entity:
            filter:
              integration: "ecoflow_cloud"
              domain: number
      charge_rate:
        description: Rate of charge expressed in watts from 200-1200.
        required: true
        selector:
          number:
            min: 200
            max: 1200
            step: 200
            unit_of_measurement: "w"
            mode: "box"
    sequence:
      - action: retry.call
        target:
          entity_id: "{{ entity_id }}"
        data:
          service: number.set_value
          value: "{{ charge_rate|int(200) }}"
          expected_state: "{{ charge_rate|int(200) }}"
          retries: 5
          state_delay: 60
          on_error:
            - action: script.send_direct_notification
              data:
                message: Retry failed to set {{ state_attr(entity_id, 'friendly_name') }} charge rate to {{ charge_rate }} kWh.
                title: Ecoflow
                people:
                  entity_id:
                    - person.danny
    mode: queued
    max: 10
  ecoflow_set_charge_rate_to_target:
    alias: Ecoflow Set Charge Rate To Target
    fields:
      entity_id:
        description: Charge rate entity to apply to.
        example: number.ecoflow_kitchen_ac_charging_power
        selector:
          entity:
            filter:
              integration: "ecoflow_cloud"
              domain: number
    sequence:
      - variables:
          input_number_entity_id: >-
            {%- if entity_id == 'number.ecoflow_kitchen_ac_charging_power' -%}
            input_number.target_ecoflow_kitchen_charge_rate
            {%- elif entity_id == 'number.ecoflow_office_ac_charging_power' -%}
            input_number.target_ecoflow_office_charge_rate
            {%- endif -%}
      - action: script.ecoflow_update_charge_rate
        data:
          entity_id: "{{ entity_id }}"
          charge_rate: "{{ states(input_number_entity_id)|int(200) }}"
    mode: queued
    max: 10
  ecoflow_excess_solar_detected:
    alias: Ecoflow Excess Solar Detected
    trace:
      stored_traces: 30
    sequence:
      - variables:
          excess_solar: "{{ states('sensor.ecoflow_solar_excess')|float(0) * 1000 }}"
          kitchen_target_charge_rate: >-
            {%- from 'calculate_ecoflow_delta2_charge_rate.jinja' import calculate_ecoflow_delta2_charge_rate -%}
            {{ calculate_ecoflow_delta2_charge_rate(
            (excess_solar + states('sensor.ecoflow_ac_in_power')|float(0) + states('sensor.ecoflow_office_ac_in_power')|float(0)),
            200,
            1200)|int(0) }}
          office_target_charge_rate: >-
            {%- from 'calculate_ecoflow_delta2_charge_rate.jinja' import calculate_ecoflow_delta2_charge_rate -%}
            {{ calculate_ecoflow_delta2_charge_rate(
            (excess_solar - kitchen_target_charge_rate|float(0)),
            200,
            1200)|int(0) }}
      - alias: Check charge level by priority
        if:
          - alias: Kitchen fully charged
            condition: numeric_state
            entity_id: sensor.ecoflow_kitchen_battery_level
            above: 99
        then:
          - alias: Give full excess to office
            variables:
              office_target_charge_rate: >-
                {%- from 'calculate_ecoflow_delta2_charge_rate.jinja' import calculate_ecoflow_delta2_charge_rate -%}
                {{ calculate_ecoflow_delta2_charge_rate(
                excess_solar,
                200,
                1200)|int(0) }}
      - parallel:
          - alias: Ecoflow Kitchen
            choose:
              - alias: Battery fully charged
                conditions:
                  - condition: numeric_state
                    entity_id: sensor.ecoflow_kitchen_battery_level
                    above: 99
                sequence:
                  - if:
                      - not:
                          - condition: state
                            entity_id: number.ecoflow_kitchen_backup_reserve_level
                            state: "100"
                    then:
                      - action: script.send_to_home_log
                        data:
                          message: >-
                            Battery fully charged. Setting backup reserve to 100% ({{ states('number.ecoflow_kitchen_backup_reserve_level', with_unit=True) }}).
                          title: EcoFlow
                          log_level: "Debug"
                      - action: script.ecoflow_set_backup_reserve
                        data:
                          entity_id: number.ecoflow_kitchen_backup_reserve_level
                          target_reserve_amount: 100
                    else:
                      - action: script.send_to_home_log
                        data:
                          message: >-
                            Battery fully charged. No changes to charging rate required.
                          title: EcoFlow
                          log_level: "Debug"
              - alias: No excess for Kitchen
                conditions:
                  - condition: template
                    value_template: "{{ kitchen_target_charge_rate <= 0 }}"
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        No solar excess for Kitchen.
                      title: EcoFlow
                      log_level: "Debug"
              - alias: Kitchen not fully charged
                conditions:
                  - condition: numeric_state
                    entity_id: sensor.ecoflow_kitchen_battery_level
                    below: 100
                  - or:
                      - condition: template
                        value_template: >-
                          {{ kitchen_target_charge_rate|int(0) > 0 and kitchen_target_charge_rate != states('number.ecoflow_kitchen_ac_charging_power')|int(0) }}
                      - condition: numeric_state
                        entity_id: number.ecoflow_kitchen_backup_reserve_level
                        below: 100
                sequence:
                  - if:
                      - condition: state
                        entity_id: switch.ecoflow_kitchen_plug
                        state: "off"
                    then:
                      - parallel:
                          - action: script.send_to_home_log
                            data:
                              message: >-
                                Solar production is above household consumption. Turning plug on and setting backup to 100% with
                                charge rate {{ kitchen_target_charge_rate }}w.
                              title: EcoFlow
                              log_level: "Debug"
                          - action: switch.turn_on
                            metadata: {}
                            data: {}
                            target:
                              entity_id: switch.ecoflow_kitchen_plug
                    else:
                      - action: script.send_to_home_log
                        data:
                          message: >-
                            Solar production is above household consumption. Setting backup to 100% with
                            charge rate {{ kitchen_target_charge_rate }}w.
                          title: EcoFlow
                          log_level: "Debug"
                  - if:
                      - not:
                          - condition: state
                            entity_id: number.ecoflow_kitchen_ac_charging_power
                            state: "{{ kitchen_target_charge_rate }}"
                    then:
                      - action: script.ecoflow_set_charge_rate
                        data:
                          entity_id: number.ecoflow_kitchen_ac_charging_power
                          target_charge_rate: "{{ kitchen_target_charge_rate }}"
                  - if:
                      - not:
                          - condition: state
                            entity_id: number.ecoflow_kitchen_backup_reserve_level
                            state: "100"
                    then:
                      - action: script.ecoflow_set_backup_reserve
                        data:
                          entity_id: number.ecoflow_kitchen_backup_reserve_level
                          target_reserve_amount: 100
            default:
              - action: script.send_to_home_log
                data:
                  message: >-
                    Charge rate ({{ kitchen_target_charge_rate }}w) is already set correctly.
                  title: EcoFlow
                  log_level: "Debug"
          - alias: Ecoflow Office
            choose:
              - alias: Battery fully charged
                conditions:
                  - condition: numeric_state
                    entity_id: sensor.ecoflow_office_battery_level
                    above: 99
                sequence:
                  - if:
                      - not:
                          - condition: state
                            entity_id: number.ecoflow_office_backup_reserve_level
                            state: "100"
                    then:
                      - action: script.send_to_home_log
                        data:
                          message: >-
                            Battery fully charged. Setting backup reserve to 100% ({{ states('number.ecoflow_kitchen_backup_reserve_level', with_unit=True) }}).
                          title: EcoFlow
                          log_level: "Debug"
                      - action: script.ecoflow_set_backup_reserve
                        data:
                          entity_id: number.ecoflow_office_backup_reserve_level
                          target_reserve_amount: 100
                    else:
                      - action: script.send_to_home_log
                        data:
                          message: >-
                            Battery fully charged. No changes to charging rate required.
                          title: EcoFlow
                          log_level: "Debug"
              - alias: No excess for Office
                conditions:
                  - condition: template
                    value_template: "{{ office_target_charge_rate <= 0 }}"
                sequence:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        No solar excess for Office.
                      title: EcoFlow
                      log_level: "Debug"
              - alias: Battery not fully charged
                conditions:
                  - condition: numeric_state
                    entity_id: sensor.ecoflow_office_battery_level
                    below: 100
                  - or:
                      - condition: template
                        value_template: >-
                          {{ office_target_charge_rate|int(0) > 0 and office_target_charge_rate != states('number.ecoflow_office_ac_charging_power')|int(0) }}
                      - condition: numeric_state
                        entity_id: number.ecoflow_office_backup_reserve_level
                        below: 100
                sequence:
                  - if:
                      - condition: state
                        entity_id: switch.ecoflow_office_plug
                        state: "off"
                    then:
                      - parallel:
                          - action: script.send_to_home_log
                            data:
                              message: >-
                                Solar production is above household consumption. Turning plug on and setting backup to 100% with
                                charge rate {{ office_target_charge_rate }}w.
                              title: EcoFlow
                              log_level: "Debug"
                          - action: switch.turn_on
                            metadata: {}
                            data: {}
                            target:
                              entity_id: switch.ecoflow_office_plug
                    else:
                      - action: script.send_to_home_log
                        data:
                          message: >-
                            Solar production is above household consumption. Setting backup to 100% with
                            charge rate {{ office_target_charge_rate }}w.
                          title: EcoFlow
                          log_level: "Debug"
                  - action: script.ecoflow_set_charge_rate
                    data:
                      entity_id: number.ecoflow_office_ac_charging_power
                      target_charge_rate: "{{ office_target_charge_rate }}"
                  - action: script.ecoflow_set_backup_reserve
                    data:
                      entity_id: number.ecoflow_office_backup_reserve_level
                      target_reserve_amount: 100
            default:
              - action: script.send_to_home_log
                data:
                  message: >-
                    Charge rate ({{ office_target_charge_rate }}w) is already set correctly.
                  title: EcoFlow
                  log_level: "Debug"
    mode: single
  ecoflow_check_charging_mode:
    alias: EcoFlow Check Charging Mode
    description: ""
    trace:
      stored_traces: 80
    fields:
      current_electricity_import_rate:
        description: Pounds per kiloWatt for importing.
        example: "0.15"
        selector:
          number:
            min: -15
            max: 100
            step: 2
      current_electricity_import_rate_unit:
        description: Unit describing the unit rate.
        example: "GBP/kWh"
        selector:
          text:
      current_electricity_export_rate:
        description: Pence per kiloWatt for exporting.
        example: "0.15"
        selector:
          number:
            min: 0
            max: 50
            step: 2
    sequence:
      - variables:
          current_import_rate: "{{ current_electricity_import_rate|default(states('sensor.electricity_current_rate'), true) }}"
          current_export_rate: "{{ current_electricity_export_rate|default(states('sensor.electricity_current_rate'), true) }}"
      - choose:
          - alias: Holiday Mode
            conditions:
              - condition: state
                entity_id: input_select.home_mode
                state: "Holiday"
            sequence:
              - if:
                  - condition: numeric_state
                    entity_id: sensor.ecoflow_kitchen_battery_level
                    below: "99"
                then:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        In Holiday mode. Charging.
                      title: EcoFlow
                      log_level: "Normal"
                  - if:
                      - condition: state
                        entity_id: switch.ecoflow_kitchen_plug
                        state: "off"
                    then:
                      - action: switch.turn_on
                        target:
                          entity_id: switch.ecoflow_kitchen_plug
                  - action: script.ecoflow_set_backup_reserve
                    data:
                      entity_id: number.ecoflow_kitchen_backup_reserve_level
                      target_reserve_amount: 100
                  - action: script.ecoflow_set_charge_rate
                    data:
                      entity_id: number.ecoflow_kitchen_ac_charging_power
                      target_charge_rate: 1200
                else:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        In Holiday mode. Skipping.
                      title: EcoFlow
                      log_level: "Debug"
          - alias: Inverter in export mode
            conditions:
              - condition: state
                entity_id: switch.ecoflow_backup_reserve_enabled
                state: "on"
              - condition: state
                entity_id: sensor.growatt_sph_inverter_mode
                state: Grid first
            sequence:
              - parallel:
                  - sequence:
                      - alias: Check if fridge freezer plug has been switched off
                        if:
                          - condition: state
                            entity_id: switch.ecoflow_kitchen_plug
                            state: "on"
                          - condition: numeric_state
                            entity_id: sensor.ecoflow_kitchen_battery_level
                            above: input_number.ecoflow_kitchen_low_battery_reserve
                        then:
                          - parallel:
                              - action: script.send_to_home_log
                                data:
                                  message: >-
                                    Inverter in export mode. Disable charging for fridge freezer battery.
                                  title: EcoFlow
                                  log_level: "Debug"
                              - action: switch.turn_off
                                target:
                                  entity_id: switch.ecoflow_kitchen_plug
                        else:
                          - action: script.send_to_home_log
                            data:
                              message: >-
                                Inverter in export mode. Disable charging for fridge freezer battery.
                              title: EcoFlow
                              log_level: "Debug"
                      - if:
                          - not:
                              - condition: state
                                entity_id: number.ecoflow_kitchen_backup_reserve_level
                                state: input_number.ecoflow_kitchen_low_battery_reserve
                        then:
                          - action: script.ecoflow_set_backup_reserve
                            data:
                              entity_id: number.ecoflow_kitchen_backup_reserve_level
                              target_reserve_amount: "{{ states('input_number.ecoflow_kitchen_low_battery_reserve') }}"
                      - if:
                          - not:
                              - condition: state
                                entity_id: number.ecoflow_kitchen_ac_charging_power
                                state: "200"
                        then:
                          - action: script.ecoflow_set_charge_rate
                            data:
                              entity_id: number.ecoflow_kitchen_ac_charging_power
                              target_charge_rate: 200
                  - sequence:
                      - alias: Check if office plug has been switched off
                        if:
                          - condition: state
                            entity_id: switch.ecoflow_office_plug
                            state: "on"
                          - condition: numeric_state
                            entity_id: sensor.ecoflow_office_battery_level
                            above: input_number.ecoflow_office_low_battery_reserve
                        then:
                          - parallel:
                              - action: script.send_to_home_log
                                data:
                                  message: >-
                                    Inverter in export mode. Disable charging for office battery.
                                  title: EcoFlow
                                  log_level: "Debug"
                              - action: switch.turn_off
                                target:
                                  entity_id: switch.ecoflow_office_plug
                        else:
                          - action: script.send_to_home_log
                            data:
                              message: >-
                                Inverter in export mode. Disable charging for office battery.
                              title: EcoFlow
                              log_level: "Debug"
                      - if:
                          - not:
                              - condition: state
                                entity_id: number.ecoflow_office_backup_reserve_level
                                state: input_number.ecoflow_office_low_battery_reserve
                        then:
                          - action: script.ecoflow_set_backup_reserve
                            data:
                              entity_id: number.ecoflow_office_backup_reserve_level
                              target_reserve_amount: "{{ states('input_number.ecoflow_office_low_battery_reserve') }}"
                      - if:
                          - not:
                              - condition: state
                                entity_id: number.ecoflow_office_ac_charging_power
                                state: "200"
                        then:
                          - action: script.ecoflow_set_charge_rate
                            data:
                              entity_id: number.ecoflow_office_ac_charging_power
                              target_charge_rate: 200
          - alias: Electricity rate below 0p/kw
            conditions:
              - condition: state
                entity_id: switch.ecoflow_backup_reserve_enabled
                state: "on"
              - condition: state
                entity_id: input_boolean.ecoflow_kitchen_charge_electricity_below_nothing
                state: "on"
              - condition: template
                value_template: "{{ current_import_rate < 0}}"
            sequence:
              - alias: Check if fridge freezer plug has been switched off
                if:
                  - condition: state
                    entity_id: switch.ecoflow_kitchen_plug
                    state: "off"
                then:
                  - parallel:
                      - action: script.send_to_home_log
                        data:
                          message: >-
                            Electricity rate is below 0p/kw ({{ current_import_rate ~ ' ' ~ current_electricity_import_rate_unit }}).
                            Setting backup reserve to 100% and maximum charge rate (1200w).

                            Turning Fridge Freezer plug.
                          title: EcoFlow
                          log_level: "Debug"
                      - action: switch.turn_on
                        target:
                          entity_id: switch.ecoflow_kitchen_plug
                else:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        Electricity rate is below 0p/kw ({{ current_import_rate ~ ' ' ~ current_electricity_import_rate_unit }}).
                        Setting backup reserve to 100% and maximum charge rate (1200w).
                      title: EcoFlow
                      log_level: "Debug"
              - action: script.ecoflow_set_backup_reserve
                data:
                  entity_id: number.ecoflow_kitchen_backup_reserve_level
                  target_reserve_amount: 100
              - action: script.ecoflow_set_charge_rate
                data:
                  entity_id: number.ecoflow_kitchen_ac_charging_power
                  target_charge_rate: 1200
          - alias: Electricity rate 0p/kw
            conditions:
              - condition: state
                entity_id: switch.ecoflow_backup_reserve_enabled
                state: "on"
              - condition: state
                entity_id: input_boolean.ecoflow_kitchen_charge_below_export
                state: "on"
              - condition: template
                value_template: "{{ current_import_rate == 0}}"
            sequence:
              - parallel:
                  - sequence:
                      - alias: Check if fridge freezer plug has been switched off
                        if:
                          - condition: state
                            entity_id: switch.ecoflow_kitchen_plug
                            state: "off"
                        then:
                          - parallel:
                              - action: script.send_to_home_log
                                data:
                                  message: >-
                                    Electricity rate is 0p/kw ({{ current_import_rate ~ ' ' ~ current_electricity_import_rate_unit }}).
                                    Setting backup reserve to 100% and maximum charge rate (1200w).

                                    Turning Fridge Freezer plug.
                                  title: EcoFlow
                                  log_level: "Debug"
                              - action: switch.turn_on
                                target:
                                  entity_id: switch.ecoflow_kitchen_plug
                        else:
                          - action: script.send_to_home_log
                            data:
                              message: >-
                                Electricity rate is 0p/kw ({{ current_import_rate ~ ' ' ~ current_electricity_import_rate_unit }}).
                                Setting kitchen backup reserve to 100% and maximum charge rate (1200w).
                              title: EcoFlow
                              log_level: "Debug"
                      - action: script.ecoflow_set_backup_reserve
                        data:
                          entity_id: number.ecoflow_kitchen_backup_reserve_level
                          target_reserve_amount: 100
                      - action: script.ecoflow_set_charge_rate
                        data:
                          entity_id: number.ecoflow_kitchen_ac_charging_power
                          target_charge_rate: 1200
                  - sequence:
                      - alias: Check if office Ecoflow plug has been switched off
                        if:
                          - condition: state
                            entity_id: switch.ecoflow_office_plug
                            state: "off"
                        then:
                          - parallel:
                              - action: script.send_to_home_log
                                data:
                                  message: >-
                                    Electricity rate is 0p/kw ({{ current_import_rate ~ ' ' ~ current_electricity_import_rate_unit }}).
                                    Setting backup reserve to 100% and maximum charge rate (1200w).

                                    Turning office battery plug.
                                  title: EcoFlow
                                  log_level: "Debug"
                              - action: switch.turn_on
                                target:
                                  entity_id: switch.ecoflow_office_plug
                        else:
                          - action: script.send_to_home_log
                            data:
                              message: >-
                                Electricity rate is 0p/kw ({{ current_import_rate ~ ' ' ~ current_electricity_import_rate_unit }}).
                                Setting office backup reserve to 100% and maximum charge rate (1200w).
                              title: EcoFlow
                              log_level: "Debug"
                      - action: script.ecoflow_set_backup_reserve
                        data:
                          entity_id: number.ecoflow_office_backup_reserve_level
                          target_reserve_amount: 100
                      - action: script.ecoflow_set_charge_rate
                        data:
                          entity_id: number.ecoflow_office_ac_charging_power
                          target_charge_rate: 1200
          - alias: Excess solar detected
            conditions:
              - condition: state
                entity_id: switch.ecoflow_backup_reserve_enabled
                state: "on"
              - condition: numeric_state
                entity_id: sensor.ecoflow_solar_excess
                above: input_number.ecoflow_charge_solar_threshold
            sequence:
              - action: script.ecoflow_excess_solar_detected
                data: {}
          - alias: Electricity rates below export
            conditions:
              - condition: state
                entity_id: switch.ecoflow_backup_reserve_enabled
                state: "on"
              - condition: state
                entity_id: input_boolean.ecoflow_kitchen_charge_below_export
                state: "on"
              - condition: template
                value_template: "{{ current_import_rate < current_export_rate }}"
            sequence:
              - if:
                  - condition: numeric_state
                    entity_id: number.ecoflow_kitchen_backup_reserve_level
                    below: 100
                then:
                  - alias: Check if fridge freezer plug has been switched off
                    if:
                      - condition: state
                        entity_id: switch.ecoflow_kitchen_plug
                        state: "off"
                    then:
                      - parallel:
                          - action: script.send_to_home_log
                            data:
                              message: >-
                                Electricity unit rate is the same or below export rate
                                ({{ current_import_rate ~'<=' ~
                                current_export_rate }}). Charging kitchen Ecoflow.

                                Turning Fridge Freezer plug on.
                              title: EcoFlow
                              log_level: "Debug"
                          - action: switch.turn_on
                            metadata: {}
                            data: {}
                            target:
                              entity_id: switch.ecoflow_kitchen_plug
                    else:
                      - action: script.send_to_home_log
                        data:
                          message: >-
                            Electricity unit rate is the same or below export rate
                            ({{ current_import_rate ~'<=' ~ current_export_rate }}). Charging kitchen Ecoflow.
                          title: EcoFlow
                          log_level: "Debug"
                  - action: script.ecoflow_set_charge_rate
                    data:
                      entity_id: number.ecoflow_kitchen_ac_charging_power
                      target_charge_rate: 1200
                  - action: script.ecoflow_set_backup_reserve
                    data:
                      entity_id: number.ecoflow_kitchen_backup_reserve_level
                      target_reserve_amount: 100
                else:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        Electricity unit rate is the same or below export rate
                        ({{ current_import_rate ~'<=' ~ current_export_rate }}) but backup reserve
                        already set to 100%. Skipping.
                      title: EcoFlow
                      log_level: "Debug"
          - alias: No Excess Solar
            conditions:
              - condition: numeric_state
                entity_id: sensor.grid_power
                above: 0
              - condition: template
                value_template: "{{ current_import_rate > current_export_rate }}"
              - or:
                  - and:
                      - condition: numeric_state
                        entity_id: number.ecoflow_kitchen_backup_reserve_level
                        above: input_number.ecoflow_kitchen_minimum_backup_reserve
                      - condition: state
                        entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
                        state: "on"
                  - and:
                      - condition: numeric_state
                        entity_id: number.ecoflow_office_backup_reserve_level
                        above: input_number.ecoflow_office_minimum_backup_reserve
                      - condition: state
                        entity_id: switch.ecoflow_office_backup_reserve_enabled
                        state: "on"
            sequence:
              - choose:
                  - alias: Reduce charge rate
                    conditions:
                      - condition: numeric_state
                        entity_id: number.ecoflow_kitchen_ac_charging_power
                        above: input_number.ecoflow_charge_solar_threshold
                      - condition: template
                        value_template: >-
                          {{ ((states('sensor.ecoflow_solar_excess')|float(-1) * 1000) +
                          states('sensor.ecoflow_kitchen_ac_in_power')|float(0)) >=
                          states('input_number.ecoflow_charge_solar_threshold')|float(0) }}
                    sequence:
                      - parallel:
                          - action: script.send_to_home_log
                            data:
                              message: >-
                                Solar production dipped below household consumption. Reducing charge rate from
                                {{ states('number.ecoflow_kitchen_ac_charging_power') }}
                                to
                                {{ (((states('sensor.ecoflow_solar_excess')|float(0) * 1000) / 200)|int(0)) * 200 }}w.
                              title: Solar
                              log_level: "Debug"
                          - action: script.ecoflow_set_charge_rate
                            data:
                              entity_id: number.ecoflow_kitchen_ac_charging_power
                              target_charge_rate: >-
                                {%-if ((((states('sensor.ecoflow_solar_excess')|float(0) * 1000) +
                                states('sensor.ecoflow_kitchen_ac_in_power')|float(0)) / 200)|int(0)) * 200
                                > 1200 -%}
                                1200
                                {%- elif ((((states('sensor.ecoflow_solar_excess')|float(0) * 1000) +
                                states('sensor.ecoflow_kitchen_ac_in_power')|float(0)) / 200)|int(0)) * 200 > 200 -%}
                                {{ ((((states('sensor.ecoflow_solar_excess')|float(0) * 1000) +
                                states('sensor.ecoflow_kitchen_ac_in_power')|float(0)) / 200)|int(0)) * 200 }}
                                {%- else -%}
                                200
                                {%- endif -%}
                  - alias: Set to lowest backup reserve
                    conditions:
                      - or:
                          - not:
                              - condition: state
                                entity_id: number.ecoflow_kitchen_backup_reserve_level
                                state: input_number.ecoflow_kitchen_low_battery_reserve
                          - not:
                              - condition: state
                                entity_id: number.ecoflow_office_backup_reserve_level
                                state: input_number.ecoflow_office_low_battery_reserve
                    sequence:
                      - parallel:
                          - action: script.send_to_home_log
                            data:
                              message: >-
                                Solar production dipped below household consumption. Setting backup to
                                {{ states('input_number.ecoflow_kitchen_low_battery_reserve') }}%.
                              title: Solar
                              log_level: "Debug"
                          - action: script.ecoflow_set_backup_reserve
                            data:
                              entity_id: number.ecoflow_kitchen_backup_reserve_level
                              target_reserve_amount: "{{ states('input_number.ecoflow_kitchen_low_battery_reserve')|int(10) }}"
                          - action: script.ecoflow_set_backup_reserve
                            data:
                              entity_id: number.ecoflow_office_backup_reserve_level
                              target_reserve_amount: "{{ states('input_number.ecoflow_office_low_battery_reserve')|int(10) }}"
                default: []
          - alias: Electricity start to cost
            conditions:
              - condition: state
                entity_id: switch.ecoflow_backup_reserve_enabled
                state: "on"
              - condition: template
                value_template: "{{ current_import_rate > current_export_rate }}"
            sequence:
              - alias: Check Ecoflow Kitchen
                if:
                  - condition: numeric_state
                    entity_id: number.ecoflow_kitchen_backup_reserve_level
                    above: input_number.ecoflow_kitchen_minimum_backup_reserve
                  - condition: state
                    entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
                    state: "on"
                then:
                  - parallel:
                      - action: script.send_to_home_log
                        data:
                          message: >-
                            Electricity rate has gone above 0
                            ({{ current_import_rate ~ ' ' ~ current_electricity_import_rate_unit }})
                            and no excess electricity detected
                            ({{ states('sensor.ecoflow_solar_excess', with_unit=True) }}).
                            Setting backup reserve to
                            {{ states('input_number.ecoflow_kitchen_low_battery_reserve')|int(0) }}
                            {{ state_attr('input_number.ecoflow_kitchen_low_battery_reserve', 'unit_of_measurement')}}.
                          title: EcoFlow
                          log_level: "Debug"
                      - action: script.ecoflow_set_backup_reserve
                        data:
                          entity_id: number.ecoflow_kitchen_backup_reserve_level
                          target_reserve_amount: >-
                            {{ states('input_number.ecoflow_kitchen_low_battery_reserve')|int(0) }}
                else:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        Electricity rate has gone above 0
                        ({{ current_import_rate ~ ' ' ~ current_electricity_import_rate_unit }})
                        and no excess electricity detected
                        ({{ states('sensor.ecoflow_solar_excess', with_unit=True) }}).
                        Kitchen battery reserve already set
                        {{ states('input_number.ecoflow_kitchen_low_battery_reserve')|int(0) }}
                        {{ state_attr('input_number.ecoflow_kitchen_low_battery_reserve', 'unit_of_measurement')}}
                        skipping.
                      title: EcoFlow
                      log_level: "Debug"
              - alias: Check Ecoflow Office
                if:
                  - condition: numeric_state
                    entity_id: number.ecoflow_office_backup_reserve_level
                    above: input_number.ecoflow_office_minimum_backup_reserve
                  - condition: state
                    entity_id: switch.ecoflow_office_backup_reserve_enabled
                    state: "on"
                then:
                  - parallel:
                      - action: script.send_to_home_log
                        data:
                          message: >-
                            Electricity rate has gone above 0
                            ({{ current_import_rate ~ ' ' ~ current_electricity_import_rate_unit }})
                            and no excess electricity detected
                            ({{ states('sensor.ecoflow_solar_excess', with_unit=True) }}).
                            Setting backup reserve to
                            {{ states('input_number.ecoflow_kitchen_low_battery_reserve')|int(0) }}
                            {{ state_attr('input_number.ecoflow_kitchen_low_battery_reserve', 'unit_of_measurement')}}.
                          title: EcoFlow
                          log_level: "Debug"
                      - action: script.ecoflow_set_backup_reserve
                        data:
                          entity_id: number.ecoflow_office_backup_reserve_level
                          target_reserve_amount: >-
                            {{ states('input_number.ecoflow_office_low_battery_reserve')|int(0) }}
                else:
                  - action: script.send_to_home_log
                    data:
                      message: >-
                        Electricity rate has gone above 0
                        ({{ current_import_rate ~ ' ' ~ current_electricity_import_rate_unit }})
                        and no excess electricity detected
                        ({{ states('sensor.ecoflow_solar_excess', with_unit=True) }}).
                        Office battery reserve already set
                        {{ states('input_number.ecoflow_office_low_battery_reserve')|int(0) }}
                        {{ state_attr('input_number.ecoflow_office_low_battery_reserve', 'unit_of_measurement')}}
                        skipping.
                      title: EcoFlow
                      log_level: "Debug"
        default: []
    mode: single
  ecoflow_office_turn_off_plug:
    alias: EcoFlow Office Turn Off Plug
    description: ""
    sequence:
      - if:
          - condition: template
            value_template: >-
              {{ states('number.ecoflow_office_backup_reserve_level')|int(100) ==
              states('input_number.ecoflow_office_minimum_backup_reserve')|int(10)}}
          - condition: state
            entity_id: switch.ecoflow_office_backup_reserve_enabled
            state: "on"
          - condition: state
            entity_id: switch.ecoflow_office_plug
            state: "on"
        then:
          - choose:
              - alias: Office computer is still on
                conditions:
                  - or:
                      - condition: state
                        entity_id: device_tracker.jd
                        state: "home"
                      - condition: state
                        entity_id: group.dannys_work_computer
                        state: "home"
                sequence:
                  - action: script.send_direct_notification
                    data:
                      message: >-
                        Computer in the office is still on:


                        Home: {{ states('device_tracker.jd')}}

                        Work: {{ states('group.dannys_work_computer')}}
                      title: Ecoflow
                      people:
                        entity_id:
                          - person.danny
              - alias: Office computer is still on
                conditions:
                  - condition: numeric_state
                    entity_id: sensor.ecoflow_solar_excess
                    above: input_number.ecoflow_charge_solar_threshold
                sequence:
                  - action: script.send_direct_notification
                    data:
                      message: >-
                        Solar detected!


                        {{ states('sensor.ecoflow_solar_excess') > states('input_number.ecoflow_charge_solar_threshold') }}
                      title: Ecoflow
                      people:
                        entity_id:
                          - person.danny
            default:
              - parallel:
                  - action: script.send_direct_notification
                    data:
                      message: Turning off office plug.
                      title: Ecoflow
                      people:
                        entity_id:
                          - person.danny
                  - action: switch.turn_off
                    data: {}
                    target:
                      entity_id: switch.ecoflow_office_plug
  ecoflow_kitchen_turn_off_plug:
    alias: EcoFlow Kitchen Turn Off Plug
    description: ""
    sequence:
      - if:
          - condition: template
            value_template: >-
              {{ states('number.ecoflow_kitchen_backup_reserve_level')|int(100) ==
              states('input_number.ecoflow_kitchen_minimum_backup_reserve')|int(10)}}
          - condition: state
            entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
            state: "on"
          - condition: state
            entity_id: switch.ecoflow_kitchen_plug
            state: "on"
        then:
          - choose:
              - alias: No one home
                conditions:
                  - condition: state
                    entity_id: group.adult_people
                    state: "not_home"
                sequence:
                  - action: script.send_direct_notification
                    data:
                      message: >-
                        No one home. Skipping turning off kitchen plug.
                      title: Ecoflow
                      people:
                        entity_id:
                          - person.danny
            default:
              - parallel:
                  - action: script.send_direct_notification
                    data:
                      message: Turning off kitchen plug.
                      title: Ecoflow
                      people:
                        entity_id:
                          - person.danny
                  - action: switch.turn_off
                    data: {}
                    target:
                      entity_id: switch.ecoflow_kitchen_plug

template:
  - trigger:
      - trigger: state
        entity_id:
          - sensor.eddi_power
          - sensor.house_grid_export_power
          - sensor.zappi_power
    sensor:
      - name: "EcoFlow Solar Excess"
        unique_id: 947e22f4-5213-4440-8da2-6c3a089f3743
        state: >-
          {#- Make sure ecess is only calculated when there is sun. -#}
          {%- if states('sensor.growatt_sph_pv_power') | float(0) > (states('sensor.home_electricity_power_daily_average_over_a_day') | float(1))/2 -%}
          {#- Add exceptions such as EV -#}
          {{ states('sensor.house_grid_export_power')|float(0) - 0.2 + (states('sensor.zappi_power')|float(0))/1000
          + (states('sensor.eddi_power')|float(0))/1000 }}
          {%- else -%}
          0
          {%- endif -%}
        unit_of_measurement: kW
  - trigger:
      - trigger: state
        entity_id:
          - sensor.ecoflow_kitchen_total_in_power
          - sensor.ecoflow_kitchen_total_out_power
    sensor:
      - name: "EcoFlow Kitchen Charging Rate"
        unique_id: d809c2e4-e50b-499b-ac3a-796cef4806d8
        state: >-
          {{ states('sensor.ecoflow_kitchen_total_in_power')|float(0) - states('sensor.ecoflow_kitchen_total_out_power')|float(0) }}
        unit_of_measurement: w
  - trigger:
      - trigger: state
        entity_id:
          - input_number.ecoflow_kitchen_minimum_backup_reserve
    sensor:
      - name: "EcoFlow Kitchen Minimum Backup Reserve Low Threshold"
        unique_id: 04b0a9f8-f381-4c92-a41d-7433f1d63c8c
        state: "{{ states('input_number.ecoflow_kitchen_minimum_backup_reserve')|int(10) + 1 }}"
        unit_of_measurement: "%"
  - trigger:
      - trigger: state
        entity_id:
          - input_number.ecoflow_office_minimum_backup_reserve
    sensor:
      - name: "EcoFlow Office Minimum Backup Reserve Low Threshold"
        unique_id: e8a432e2-7e54-46f9-ba4c-eba216555b83
        state: "{{ states('input_number.ecoflow_office_minimum_backup_reserve')|int(10) + 1 }}"
        unit_of_measurement: "%"
