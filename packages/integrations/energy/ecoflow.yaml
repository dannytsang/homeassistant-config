# Created by Danny Tsang <danny@tsang.uk>
# Integration: https://github.com/tolwi/hassio-ecoflow-cloud
automation:
  - id: "1689437015870"
    alias: "EcoFlow: Solar Below House Consumption"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: sensor.ecoflow_kitchen_solar_excess
        below: 0
        for:
          hours: 0
          minutes: 5
          seconds: 0
    condition:
      - or:
          - condition: numeric_state
            entity_id: sensor.electricity_current_rate
            above: sensor.electricity_export_current_rate
          - condition: state
            entity_id: sensor.electricity_current_rate
            state: "unavailable"
      - condition: numeric_state
        entity_id: number.ecoflow_kitchen_backup_reserve_level
        above: 5
      - condition: state
        entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
    action:
      - service: script.ecoflow_check_charging_mode
        data: {}
      - if:
          - condition: state
            entity_id: timer.check_solar_excess
            state: "active"
        then:
          - service: timer.cancel
            data: {}
            target:
              entity_id: timer.check_solar_excess
    mode: restart
  - id: "1689437015871"
    alias: "EcoFlow: Solar Above House Consumption"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: sensor.ecoflow_kitchen_solar_excess
        above: input_number.ecoflow_kitchen_charge_solar_threshold
        for:
          hours: 0
          minutes: 10
          seconds: 0
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.check_solar_excess
    condition:
      - condition: numeric_state
        entity_id: number.ecoflow_kitchen_backup_reserve_level
        below: 100
      - condition: state
        entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
    action:
      - parallel:
          - if:
              - condition: trigger
                id:
                  - period_of_time
            then:
              - service: script.ecoflow_check_charging_mode
                data: {}
          - choose:
              - conditions:
                  - condition: numeric_state
                    entity_id: sensor.ecoflow_kitchen_solar_excess
                    above: input_number.ecoflow_kitchen_charge_solar_threshold
                  - not:
                      - condition: state
                        entity_id: timer.check_solar_excess
                        state: "active"
                sequence:
                  - parallel:
                      - service: script.ecoflow_check_charging_mode
                        data: {}
                      - service: timer.start
                        data:
                          duration: "00:10:00"
                        target:
                          entity_id: timer.check_solar_excess
    mode: queued
    max: 10
  # Unit rate related automations
  - id: "1689626117476"
    alias: "Ecoflow: Electricity Rates Low To Cost Nothing"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: sensor.electricity_current_rate
        below: sensor.electricity_export_current_rate
      - platform: state
        entity_id: sensor.electricity_current_rate
        to: sensor.electricity_export_current_rate
      - platform: numeric_state
        entity_id: sensor.electricity_current_rate
        below: 0
      - platform: state
        entity_id: sensor.electricity_current_rate
        to: "0.0"
      - platform: time_pattern
        minutes: "0"
        seconds: "30"
      - platform: time_pattern
        minutes: "30"
    condition:
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
    action:
      - parallel:
          - service: script.ecoflow_check_charging_mode
            data: {}
          - alias: Check if fridge freezer plug has been switched off
            if:
              - condition: state
                entity_id: switch.fridge_freezer
                state: "off"
            then:
              - service: script.send_direct_notification
                data:
                  message: >-
                    Fridge freezer plug has been switched off!


                    Electricity unit rate is the same or below export rate
                    ({{ states('sensor.electricity_current_rate') ~'<=' ~
                    states('sensor.electricity_export_current_rate') }}).
                  title: EcoFlow
                  people:
                    entity_id:
                      - person.danny
                      - person.terina
    mode: single
  # Battery level
  - id: "1695566530591"
    alias: "EcoFlow: Battery Low And Plug Is Off"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: sensor.kitchen_ecoflow_battery_level
        below: "6"
    condition:
      - condition: state
        entity_id: switch.fridge_freezer
        state: "off"
    action:
      - service: script.send_direct_notification
        data:
          message: Fridge Freezer switch is off.
          title: EcoFlow
          people:
            entity_id:
              - person.danny
              - person.terina
    mode: single

script:
  ecoflow_set_backup_reserve:
    alias: Ecoflow Set Backup Reserve
    fields:
      target_reserve_amount:
        description: Reserve amount to be set from 5-100%.
        required: true
        selector:
          number:
            min: 5
            max: 100
            step: 1
            unit_of_measurement: "%"
            mode: "box"
    sequence:
      - service: input_number.set_value
        data:
          value: "{{ reserve_amount|int(5) }}"
        target:
          entity_id: input_number.target_ecoflow_kitchen_backup_reserve
      - service: script.ecoflow_update_backup_reserve
        data: {}
    mode: single
  ecoflow_update_backup_reserve:
    alias: Ecoflow Update Backup Reserve
    sequence:
      - repeat:
          until:
            - or:
                - condition: template
                  value_template: >-
                    {{ repeat.index > 6 }}
                - condition: template
                  value_template: >-
                    {{ states('number.ecoflow_kitchen_backup_reserve_level')|int(0) ==
                    states('input_number.target_ecoflow_kitchen_backup_reserve')|int(0) }}
          sequence:
            - service: number.set_value
              data:
                value: >-
                  {{ states('input_number.target_ecoflow_kitchen_backup_reserve')|int(5) }}
              target:
                entity_id: number.ecoflow_kitchen_backup_reserve_level
            - delay:
                hours: 0
                minutes: 0
                seconds: 40
                milliseconds: 0
      - if:
          - condition: template
            value_template: >-
              {{ states('number.ecoflow_kitchen_backup_reserve_level')|int(0) !=
              states('input_number.target_ecoflow_kitchen_backup_reserve')|int(0) }}
        then:
          - service: script.send_direct_notification
            data:
              message: Retry failed to set backup to {{ states('input_number.target_ecoflow_kitchen_backup_reserve', with_unit=True) }}.
              title: Solar
              people:
                entity_id:
                  - person.danny
    mode: single
  ecoflow_set_charge_rate:
    alias: Ecoflow Set Charge Rate
    fields:
      target_charge_rate:
        description: Rate of charge expressed in watts from 200-1200.
        required: true
        selector:
          number:
            min: 200
            max: 1200
            step: 200
            unit_of_measurement: "w"
            mode: "box"
    sequence:
      - service: input_number.set_value
        data:
          value: "{{ target_charge_rate|int(200) }}"
        target:
          entity_id: input_number.target_ecoflow_kitchen_charge_rate
      - service: script.ecoflow_update_charge_rate
        data: {}
    mode: single
  ecoflow_update_charge_rate:
    alias: Ecoflow Update Charge Rate
    sequence:
      - repeat:
          until:
            - or:
                - condition: template
                  value_template: >-
                    {{ repeat.index > 6 }}
                - condition: template
                  value_template: >-
                    {{ states('number.ecoflow_kitchen_ac_charging_power')|int(0) ==
                    states('input_number.target_ecoflow_kitchen_charge_rate')|int(0) }}
          sequence:
            - if:
                - condition: template
                  value_template: >-
                    {{ repeat.index % 2 == 0 }}
              then:
                - service: homeassistant.reload_config_entry
                  data: {}
                  target:
                    entity_id: sensor.kitchen_ecoflow_battery_level
                - wait_for_trigger:
                    - platform: template
                      value_template: >-
                        {{ states('sensor.kitchen_ecoflow_battery_level')|int(-1) >= 0 }}
                  timeout:
                    hours: 0
                    minutes: 0
                    seconds: 40
                    milliseconds: 0
            - service: number.set_value
              data:
                value: >-
                  {{ states('input_number.target_ecoflow_kitchen_charge_rate')|int(5) }}
              target:
                entity_id: number.ecoflow_kitchen_ac_charging_power
            - delay:
                hours: 0
                minutes: 0
                seconds: 40
                milliseconds: 0
      - if:
          - condition: template
            value_template: >-
              {{ states('number.ecoflow_kitchen_ac_charging_power')|int(0) !=
              states('input_number.target_ecoflow_kitchen_charge_rate')|int(0) }}
        then:
          - service: script.send_direct_notification
            data:
              message: Retry failed to set charge rate to {{ states('input_number.target_ecoflow_kitchen_charge_rate', with_unit=True) }}
              title: Solar
              people:
                entity_id:
                  - person.danny
    mode: single
  excess_solar_detected:
    alias: Excess Solar Detected
    variables:
      target_charge_rate: >-
        {%- from 'calculate_ecoflow_delta2_charge_rate.jinja' import calculate_ecoflow_delta2_charge_rate -%}
        {{ calculate_ecoflow_delta2_charge_rate(
        (states('sensor.ecoflow_kitchen_solar_excess')|float(0) + states('sensor.ecoflow_kitchen_ac_in_power')|float(0)),
        200,
        1200)|int(0) }}
    sequence:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.kitchen_ecoflow_battery_level
                above: 99
            sequence:
              - service: script.send_to_home_log
                data:
                  message: >-
                    Battery fully charged. No changes to charging rate required.
                  title: EcoFlow
                  log_level: "Debug"
          - conditions:
              - condition: template
                value_template: >-
                  {{ target_charge_rate|int(0) > 0 and target_charge_rate != states('number.ecoflow_kitchen_ac_charging_power')|int(0) }}
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: >-
                        Solar production is above household consumption. Setting backup to 100% with
                        charge rate {{ target_charge_rate }}w.
                      title: EcoFlow
                      log_level: "Debug"
                  - sequence:
                      - service: script.ecoflow_set_charge_rate
                        data:
                          target_charge_rate: "{{ target_charge_rate }}"
                      - service: script.ecoflow_set_backup_reserve
                        data:
                          reserve_amount: 100
        default:
          - service: script.send_to_home_log
            data:
              message: >-
                Charge rate ({{ target_charge_rate }}w) is already set correctly.
              title: EcoFlow
              log_level: "Debug"
    mode: single
  ecoflow_check_charging_mode:
    alias: EcoFlow Check Charging Mode
    description: ""
    sequence:
      - choose:
          - alias: Inverter in export mode
            conditions:
              - condition: state
                entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
                state: "on"
              - condition: state
                entity_id: sensor.growatt_sph_inverter_mode
                state: Grid first
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: >-
                        Inverter in export mode. Disable charging.
                      title: EcoFlow
                      log_level: "Debug"
                  - service: script.ecoflow_set_backup_reserve
                    data:
                      reserve_amount: "{{ states('input_number.ecoflow_kitchen_low_battery_reserve') }}"
                  - service: script.ecoflow_set_charge_rate
                    data:
                      target_charge_rate: 200
          - alias: Electricity rate below 0p/kw
            conditions:
              - condition: state
                entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
                state: "on"
              - condition: state
                entity_id: input_boolean.ecoflow_kitchen_charge_electricity_below_nothing
                state: "on"
              - condition: numeric_state
                entity_id: sensor.electricity_current_rate
                below: "0"
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: >-
                        Electrictity rate is below 0p/kw ({{ states('sensor.electricity_current_rate', with_unit=True)}}).
                        Setting backup reserve to 100% and maximum charge rate (1200w).
                      title: EcoFlow
                      log_level: "Debug"
                  - service: script.ecoflow_set_backup_reserve
                    data:
                      reserve_amount: 100
                  - service: script.ecoflow_set_charge_rate
                    data:
                      target_charge_rate: 1200
          - alias: Electricity rate 0p/kw
            conditions:
              - condition: state
                entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
                state: "on"
              - condition: state
                entity_id: input_boolean.ecoflow_kitchen_charge_below_export
                state: "on"
              - condition: state
                entity_id: sensor.electricity_current_rate
                state: "0.0"
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: >-
                        Electrictity rate is 0p/kw ({{ states('sensor.electricity_current_rate', with_unit=True)}}).
                        Setting backup reserve to 100% and maximum charge rate (1200w).
                      title: EcoFlow
                      log_level: "Debug"
                  - service: script.ecoflow_set_backup_reserve
                    data:
                      reserve_amount: 100
                  - service: script.ecoflow_set_charge_rate
                    data:
                      target_charge_rate: 1200
          - alias: No Excess Solar
            conditions:
              - or:
                  - condition: numeric_state
                    entity_id: sensor.electricity_current_rate
                    above: sensor.electricity_export_current_rate
                  - condition: state
                    entity_id: sensor.electricity_current_rate
                    state: "unavailable"
              - condition: numeric_state
                entity_id: number.ecoflow_kitchen_backup_reserve_level
                above: 5
              - condition: state
                entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
                state: "on"
            sequence:
              - if:
                  - condition: numeric_state
                    entity_id: number.ecoflow_kitchen_ac_charging_power
                    above: input_number.ecoflow_kitchen_charge_solar_threshold
                  - condition: template
                    value_template: >-
                      {{ (states('sensor.ecoflow_kitchen_solar_excess')|float(-1) +
                      states('sensor.ecoflow_kitchen_ac_in_power')|float(0)) >=
                      states('input_number.ecoflow_kitchen_charge_solar_threshold')|float(0) }}
                then:
                  - service: script.send_to_home_log
                    data:
                      message: >-
                        Solar production dipped below household consumption. Reducing charge rate from
                        {{ states('number.ecoflow_kitchen_ac_charging_power') }}
                        to
                        {{ ((states('sensor.ecoflow_kitchen_solar_excess')|float(0) / 200)|int(0)) * 200 }}w.
                      title: Solar
                      log_level: "Debug"
                  - service: script.ecoflow_set_charge_rate
                    data:
                      reserve_amount: >-
                        {{ (((states('sensor.ecoflow_kitchen_solar_excess')|float(0) +
                        states('sensor.ecoflow_kitchen_ac_in_power')|float(0)) /
                        200)|int(0)) * 200 }}
                else:
                  - parallel:
                      - service: script.send_to_home_log
                        data:
                          message: Solar production dipped below household consumption. Setting backup to 5%.
                          title: Solar
                          log_level: "Debug"
                      - service: script.ecoflow_set_backup_reserve
                        data:
                          reserve_amount: 5
          - alias: Excess solar detected
            conditions:
              - condition: numeric_state
                entity_id: number.ecoflow_kitchen_backup_reserve_level
                below: 100
              - condition: state
                entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
                state: "on"
              - condition: numeric_state
                entity_id: sensor.ecoflow_kitchen_solar_excess
                above: input_number.ecoflow_kitchen_charge_solar_threshold
            sequence:
              - service: script.excess_solar_detected
                data: {}
          - alias: Electricity rates below export
            conditions:
              - condition: state
                entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
                state: "on"
              - condition: state
                entity_id: input_boolean.ecoflow_kitchen_charge_below_export
                state: "on"
              - condition: numeric_state
                entity_id: sensor.electricity_current_rate
                below: sensor.electricity_export_current_rate
            sequence:
              - if:
                  - condition: numeric_state
                    entity_id: number.ecoflow_kitchen_backup_reserve_level
                    below: 100
                then:
                  - service: script.send_to_home_log
                    data:
                      message: >-
                        Electricity unit rate is the same or below export rate
                        ({{ states('sensor.electricity_current_rate') ~'<=' ~
                        states('sensor.electricity_export_current_rate') }}). Charging kitchen Ecoflow.
                      title: EcoFlow
                      log_level: "Debug"
                  - service: script.ecoflow_set_charge_rate
                    data:
                      target_charge_rate: 1200
                  - service: script.ecoflow_set_backup_reserve
                    data:
                      reserve_amount: 100
                else:
                  - service: script.send_to_home_log
                    data:
                      message: >-
                        Electricity unit rate is the same or below export rate
                        ({{ states('sensor.electricity_current_rate') ~'<=' ~
                        states('sensor.electricity_export_current_rate') }}) but backup reserve
                        already set to 100%. Skipping.
                      title: EcoFlow
                      log_level: "Debug"
          - alias: Electricity start to cost
            conditions:
              - condition: state
                entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
                state: "on"
              - condition: numeric_state
                entity_id: sensor.electricity_current_rate
                above: sensor.electricity_export_current_rate
            sequence:
              - if:
                  - condition: numeric_state
                    entity_id: number.ecoflow_kitchen_backup_reserve_level
                    above: input_number.ecoflow_kitchen_low_battery_reserve
                then:
                  - parallel:
                      - service: script.send_to_home_log
                        data:
                          message: >-
                            Electrictity rate has gove above 0
                            ({{ states('sensor.electricity_current_rate', with_unit=True) }})p/kw
                            and no excess electricity detected
                            ({{ states('sensor.ecoflow_kitchen_solar_excess', with_unit=True) }}).
                            Setting backup reserve to
                            {{ states('input_number.ecoflow_kitchen_low_battery_reserve')|int(0) }}
                            {{ state_attr('input_number.ecoflow_kitchen_low_battery_reserve', 'unit_of_measurement')}}.
                          title: EcoFlow
                          log_level: "Debug"
                      - service: script.ecoflow_set_backup_reserve
                        data:
                          reserve_amount: >-
                            {{ states('input_number.ecoflow_kitchen_low_battery_reserve')|int(0) }}
                else:
                  - service: script.send_to_home_log
                    data:
                      message: >-
                        Electrictity rate has gove above 0
                        ({{ states('sensor.electricity_current_rate', with_unit=True) }})p/kw
                        and no excess electricity detected
                        ({{ states('sensor.ecoflow_kitchen_solar_excess', with_unit=True) }}).
                        Reserve already set
                        {{ states('input_number.ecoflow_kitchen_low_battery_reserve')|int(0) }}
                        {{ state_attr('input_number.ecoflow_kitchen_low_battery_reserve', 'unit_of_measurement')}}
                        skipping.
                      title: EcoFlow
                      log_level: "Debug"
        default: []
    mode: single

template:
  - trigger:
      - platform: state
        entity_id:
          - input_number.ecoflow_kitchen_charge_solar_threshold
          - sensor.house_grid_export_power
          - sensor.growatt_sph_pv_power
          - sensor.growatt_sph_load_power
    sensor:
      - name: "EcoFlow Kitchen Solar Excess"
        unique_id: 947e22f4-5213-4440-8da2-6c3a089f3743
        state: >-
          {%- if states('sensor.house_grid_export_power')|float(0) > 100 -%}
          {{ states('sensor.house_grid_export_power')|float(0)*1000 }}
          {%- else -%}
          {{ states('sensor.house_grid_import_power')|float(0) - 100 }}
          {%- endif -%}
        unit_of_measurement: w
        attributes:
          calculation_method: >-
            {%- if states('sensor.house_grid_export_power')|float(0) > 100 -%}
            grid export
            {%- else -%}
            consumption
            {%- endif -%}
  - trigger:
      - platform: state
        entity_id:
          - sensor.ecoflow_kitchen_total_in_power
          - sensor.ecoflow_kitchen_total_out_power
    sensor:
      - name: "EcoFlow Kitchen Charging Rate"
        unique_id: d809c2e4-e50b-499b-ac3a-796cef4806d8
        state: >-
          {{ states('sensor.ecoflow_kitchen_total_in_power')|float(0) - states('sensor.ecoflow_kitchen_total_out_power')|float(0) }}
        unit_of_measurement: w
