# Created by Danny Tsang <danny@tsang.uk>
automation:
  # Solar
  - id: "1660317032653"
    alias: "^Energy: Growatt Unavailable"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.growatt_sph6000_last_data_update
        to: unavailable
        for:
          hours: 0
          minutes: 5
          seconds: 0
    condition:
      - condition: state
        entity_id: input_boolean.enable_growatt_update_check
        state: "on"
    action:
      - service: script.send_direct_notification
        data:
          message: Growatt is unavilable.
          title: ":sunny: :zap: :electric_plug: Solar"
          people:
            - person.danny
    mode: single
  - id: "1660403632839"
    alias: "^Energy: Growatt Updating"
    description: "Needed to work around https://github.com/home-assistant/core/issues/76451"
    trigger:
      - platform: state
        entity_id: sensor.growatt_sph6000_last_data_update
        for:
          hours: 0
          minutes: 20
          seconds: 0
      - platform: time_pattern
        minutes: "55"
    condition:
      - condition: state
        entity_id: input_boolean.enable_growatt_update_check
        state: "on"
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.growatt_sph6000_last_data_update
            state: "unavailable"
          # https://community.home-assistant.io/t/how-to-calculate-subtract-two-date-time-from-eachother/8197/14?u=tuxinator94
          - condition: template
            value_template: >-
              "{% set duration = as_timestamp(now()) - ((as_timestamp(states('sensor.growatt_sph6000_last_data_update')))|float(0)) %}
              {{duration|int(0) >= (states('input_number.growatt_max_last_updated')|float(0) * 60) }}"
    action:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: "Growatt integration has not been updated for over
                {% set duration = as_timestamp(now()) -
                ((as_timestamp(states('sensor.growatt_sph6000_last_data_update')))|float(0)) %}
                {{ states('input_number.growatt_max_last_updated')|int(0) }} (
                {{ (duration / 60)|round(0, 'floor') }})
                {{ state_attr('input_number.growatt_max_last_updated', 'unit_of_measurement') }}.
                Reloading integration."
              title: ":sunny: :zap: :electric_plug: Solar"
          # https://community.home-assistant.io/t/can-i-write-an-automation-to-reload-restart-an-integration/301020/35?u=tuxinator94
          - service: homeassistant.reload_config_entry
            data: {}
            target:
              entity_id:
                - sensor.growatt_sph6000_last_data_update
    mode: single

template:
  - sensor:
      - name: "Total Solar Forecast Estimated energy production - next hour"
        state: "{{ states('sensor.energy_next_hour_2')|float(0) + states('sensor.energy_next_hour_2')|float(0) }}"
        unit_of_measurement: "kWh"
        device_class: "energy"
      - name: "Total Solar Forecast Estimated energy production - this hour"
        state: "{{ states('sensor.energy_current_hour')|float(0) + states('sensor.energy_current_hour_2')|float(0) }}"
        unit_of_measurement: "kWh"
        device_class: "energy"
      - name: "Total Solar Forecast Estimated energy production - today"
        state: "{{ states('sensor.energy_production_today')|float(0) + states('sensor.energy_production_today_2')|float(0) }}"
        unit_of_measurement: "kWh"
        device_class: "energy"
      - name: "Total Solar Forecast Estimated Energy Production - tomorrow"
        state: "{{ states('sensor.energy_production_tomorrow')|float(0) + states('sensor.energy_production_tomorrow_2')|float(0) }}"
        unit_of_measurement: "kWh"
        device_class: "energy"
      - name: "Total Solar Forecast Estimated power production - now"
        state: "{{ states('sensor.power_production_now')|float(0) + states('sensor.power_production_now_2')|float(0) }}"
        unit_of_measurement: "kWh"
        device_class: "energy"
      - name: "Total Solar Forecast Estimated power production next 12 hours"
        state: "{{ states('sensor.power_production_next_12hours')|float(0) + states('sensor.power_production_next_12hours_2')|float(0) }}"
        unit_of_measurement: "kWh"
        device_class: "energy"
      - name: "Total Solar Forecast Estimated power production next 24 hours"
        state: "{{ states('sensor.power_production_next_24hours')|float(0) + states('sensor.power_production_next_24hours_2')|float(0) }}"
        unit_of_measurement: "kWh"
        device_class: "energy"
