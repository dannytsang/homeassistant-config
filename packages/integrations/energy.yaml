# Created by Danny Tsang <danny@tsang.uk>
# https://community.home-assistant.io/t/templates-in-command-line-sensor-octopus-energy-api/96141/133
input_text:
  dno_region_code:
    initial: !secret dno_region_code
  electricity_mpan:
    initial: !secret electricity_mpan
  electricity_serial:
    initial: !secret electricity_serial
  gas_mprn:
    initial: !secret gas_mprn
  gas_serial:
    initial: !secret gas_serial
sensor:
  - platform: rest
    name: Gas consumption yesterday
    resource_template: >-
      {% set mprn = states('input_text.gas_mprn') %}
      {% set serial = states('input_text.gas_serial') %}
      {% set date = as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') %}
      https://api.octopus.energy/v1/gas-meter-points/{{ mprn }}/meters/{{ serial }}/consumption/?period_from={{ date + 'T00:00:00' }}&period_to={{ date + 'T23:59:59' }}
    headers:
      Authorization: !secret octopus_key
    value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
    unit_of_measurement: "mÂ³"
    json_attributes:
      - "results"

  - platform: rest
    name: Go rates today
    resource_template: >-
      {% set region = states('input_text.dno_region_code') %}
      {% set from = as_timestamp(as_timestamp(now())|timestamp_custom('%Y-%m-%d') + 'T00:00:00') %}
      {% set to = from + 24 * 60 * 60 %}
      {% set format = '%Y-%m-%dT%H:%M:%SZ' %}
      https://api.octopus.energy/v1/products/GO-21-05-13/electricity-tariffs/E-1R-GO-21-05-13-{{ region }}/standard-unit-rates/?period_from={{ from|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) }}&period_to={{ to|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) }}
    value_template: >-
      {% set from = ((as_timestamp(utcnow()) / 1800)|round(0, 'floor') | int * 1800)|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) %}
      {% if value_json.results is defined and value_json.results|count > 0 %}
        {{ as_timestamp(value_json.results[-1].valid_from)|timestamp_custom('%Y-%m-%d') }}
      {% else %}
        Unknown
      {% endif %}
    json_attributes:
      - "results"

  - platform: rest
    name: Go rates off peak
    resource_template: >-
      {% set region = states('input_text.dno_region_code') %}
      {% set from = as_timestamp(as_timestamp(now())|timestamp_custom('%Y-%m-%d') + 'T00:30:00') %}
      {% set to = from + 4 %}
      {% set format = '%Y-%m-%dT%H:%M:%SZ' %}
      https://api.octopus.energy/v1/products/GO-21-05-13/electricity-tariffs/E-1R-GO-21-05-13-{{ region }}/standard-unit-rates/?period_from={{ from|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) }}&period_to={{ to|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) }}
    value_template: >-
      {% set from = ((as_timestamp(utcnow()) / 1800)|round(0, 'floor') | int * 1800)|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) %}
      {% if value_json.results is defined and value_json.results|count > 0 %}
        {{ as_timestamp(value_json.results[-1].valid_from)|timestamp_custom('%Y-%m-%d') }}
      {% else %}
        Unknown
      {% endif %}
    json_attributes:
      - "results"

  - platform: template
    sensors:
      go_current_rate:
        friendly_name: Go current rate
        icon_template: mdi:flash
        value_template: >-
          {% set from = ((as_timestamp(utcnow()) / 1800)|round(0, 'floor') | int * 1800)|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) %}
          {{ ((state_attr('sensor.go_rates_today', 'results')|selectattr('valid_from', 'eq', from)|first).value_inc_vat)|round(2) }}
        unit_of_measurement: "p/kWh"
        attribute_templates:
          valid_from: >-
            {% set from = ((as_timestamp(utcnow()) / 1800)|round(0, 'floor') | int * 1800)|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) %}
            {{ (state_attr('sensor.go_rates_today', 'results')|selectattr('valid_from', 'eq', from)|first).valid_from }}
          valid_to: >-
            {% set from = ((as_timestamp(utcnow()) / 1800)|round(0, 'floor')|int * 1800)|timestamp_custom('%Y-%m-%dT%H:%M:%SZ', False) %}
            {{ (state_attr('sensor.go_rates_today', 'results')|selectattr('valid_from', 'eq', from)|first).valid_to }}

  - platform: rest
    name: Gas consumption
    resource_template: >-
      {% set mprn = states('input_text.gas_mprn') %}
      {% set serial = states('input_text.gas_serial') %}
      {% set date = as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') %}
      https://api.octopus.energy/v1/gas-meter-points/{{ mprn }}/meters/{{ serial }}/consumption/?period_from={{ date + 'T00:00:00' }}&period_to={{ date + 'T23:59:59' }}
    headers:
      Authorization: !secret octopus_key
    value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
    unit_of_measurement: "kWh"
    device_class: energy
    json_attributes:
      - "results"

  - platform: rest
    name: Electricity consumption
    resource_template: >-
      {% set mpan = states('input_text.electricity_mpan') %}
      {% set serial = states('input_text.electricity_serial') %}
      {% set date = as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') %}
      https://api.octopus.energy/v1/electricity-meter-points/{{ mpan }}/meters/{{ serial }}/consumption/?period_from={{ date + 'T00:00:00' }}&period_to={{ date + 'T23:59:59' }}
    headers:
      Authorization: !secret octopus_key
    value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
    unit_of_measurement: "kWh"
    device_class: energy
    json_attributes:
      - "results"

  - platform: rest
    name: Electricity consumption midnight
    resource_template: >-
      {% set mpan = states('input_text.electricity_mpan') %}
      {% set serial = states('input_text.electricity_serial') %}
      {% set date = as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') %}
      https://api.octopus.energy/v1/electricity-meter-points/{{ mpan }}/meters/{{ serial }}/consumption/?period_from={{ date + 'T00:00:00' }}&period_to={{ date + 'T00:29:59' }}
    headers:
      Authorization: !secret octopus_key
    value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
    unit_of_measurement: "kWh"
    device_class: energy
    json_attributes:
      - "results"

  - platform: rest
    name: Electricity consumption off peak
    resource_template: >-
      {% set mpan = states('input_text.electricity_mpan') %}
      {% set serial = states('input_text.electricity_serial') %}
      {% set date = as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') %}
      https://api.octopus.energy/v1/electricity-meter-points/{{ mpan }}/meters/{{ serial }}/consumption/?period_from={{ date + 'T00:30:00' }}&period_to={{ date + 'T04:29:59' }}
    headers:
      Authorization: !secret octopus_key
    value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
    unit_of_measurement: "kWh"
    device_class: energy
    json_attributes:
      - "results"

  - platform: rest
    name: Electricity consumption graveyard
    resource_template: >-
      {% set mpan = states('input_text.electricity_mpan') %}
      {% set serial = states('input_text.electricity_serial') %}
      {% set date = as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') %}
      https://api.octopus.energy/v1/electricity-meter-points/{{ mpan }}/meters/{{ serial }}/consumption/?period_from={{ date + 'T04:30:00' }}&period_to={{ date + 'T08:29:59' }}
    headers:
      Authorization: !secret octopus_key
    value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
    unit_of_measurement: "kWh"
    device_class: energy
    json_attributes:
      - "results"

  - platform: rest
    name: Electricity consumption morning
    resource_template: >-
      {% set mpan = states('input_text.electricity_mpan') %}
      {% set serial = states('input_text.electricity_serial') %}
      {% set date = as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') %}
      https://api.octopus.energy/v1/electricity-meter-points/{{ mpan }}/meters/{{ serial }}/consumption/?period_from={{ date + 'T08:30:00' }}&period_to={{ date + 'T12:29:59' }}
    headers:
      Authorization: !secret octopus_key
    value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
    unit_of_measurement: "kWh"
    device_class: energy
    json_attributes:
      - "results"

  - platform: rest
    name: Electricity consumption afternoon
    resource_template: >-
      {% set mpan = states('input_text.electricity_mpan') %}
      {% set serial = states('input_text.electricity_serial') %}
      {% set date = as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') %}
      https://api.octopus.energy/v1/electricity-meter-points/{{ mpan }}/meters/{{ serial }}/consumption/?period_from={{ date + 'T12:30:00' }}&period_to={{ date + 'T16:29:59' }}
    headers:
      Authorization: !secret octopus_key
    value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
    unit_of_measurement: "kWh"
    device_class: energy
    json_attributes:
      - "results"

  - platform: rest
    name: Electricity consumption evening
    resource_template: >-
      {% set mpan = states('input_text.electricity_mpan') %}
      {% set serial = states('input_text.electricity_serial') %}
      {% set date = as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') %}
      https://api.octopus.energy/v1/electricity-meter-points/{{ mpan }}/meters/{{ serial }}/consumption/?period_from={{ date + 'T16:30:00' }}&period_to={{ date + 'T20:29:59' }}
    headers:
      Authorization: !secret octopus_key
    value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
    unit_of_measurement: "kWh"
    device_class: energy
    json_attributes:
      - "results"

  - platform: rest
    name: Electricity consumption night
    resource_template: >-
      {% set mpan = states('input_text.electricity_mpan') %}
      {% set serial = states('input_text.electricity_serial') %}
      {% set date = as_timestamp(now() - timedelta(days = 1))|timestamp_custom('%Y-%m-%d') %}
      https://api.octopus.energy/v1/electricity-meter-points/{{ mpan }}/meters/{{ serial }}/consumption/?period_from={{ date + 'T20:30:00' }}&period_to={{ date + 'T23:59:59' }}
    headers:
      Authorization: !secret octopus_key
    value_template: "{{ value_json.results|sum(attribute='consumption')|round(3) }}"
    unit_of_measurement: "kWh"
    device_class: energy
    json_attributes:
      - "results"

  # Total energy usage using energy@home <https://github.com/dannytsang/energyathome>
  - platform: sql
    db_url: !secret energyathome
    queries:
      - name: House Power Meter
        query: "SELECT id,date_time,channel_id,data FROM energyathome.historical_data WHERE channel_id = (SELECT channel_id FROM channel WHERE channel_id = (SELECT channel_id FROM channel WHERE device_id = 18 LIMIT 1) LIMIT 1) AND unit = 'W' AND date_time >= NOW() - INTERVAL 30 MINUTE ORDER BY date_time DESC LIMIT 1;"
        column: "data"
        unit_of_measurement: W
  # Computer A
  #- platform: sql
  #  db_url: !secret energyathome
  #  queries:
  #    - name: JD Power Meter
  #      query: "SELECT id,date_time,channel_id,data FROM energyathome.historical_data WHERE channel_id = (SELECT channel_id FROM channel WHERE device_id = 19 LIMIT 1) AND date_time >= NOW() - INTERVAL 30 MINUTE ORDER BY date_time DESC LIMIT 1;"
  #      column: "data"
  #      unit_of_measurement: W
  # Computer B
  #- platform: sql
  #  db_url: !secret energyathome
  #  queries:
  #    - name: Server Power Meter
  #      query: "SELECT id,date_time,channel_id,data FROM energyathome.historical_data WHERE channel_id = (SELECT channel_id FROM channel WHERE device_id = 37 LIMIT 1) AND date_time >= NOW() - INTERVAL 30 MINUTE ORDER BY date_time DESC LIMIT 1;"
  #      column: "data"
  #      unit_of_measurement: W
  # Telephony
  #- platform: sql
  #  db_url: !secret energyathome
  #  queries:
  #    - name: Telephony Power Meter
  #      query: "SELECT id,date_time,channel_id,data FROM energyathome.historical_data WHERE channel_id = (SELECT channel_id FROM channel WHERE device_id = 26 LIMIT 1) AND date_time >= NOW() - INTERVAL 30 MINUTE ORDER BY date_time DESC LIMIT 1;"
  #      column: "data"
  #      unit_of_measurement: W
  # Fridge Freezer
  #- platform: sql
  #  db_url: !secret energyathome
  #  queries:
  #    - name: Fridge Freezer Power Meter
  #      query: "SELECT id,date_time,channel_id,data/1000 as data FROM energyathome.historical_data WHERE channel_id = (SELECT channel_id FROM channel WHERE device_id = 20 LIMIT 1) AND date_time >= NOW() - INTERVAL 30 MINUTE ORDER BY date_time DESC LIMIT 1;"
  #      column: "data"
  #      unit_of_measurement: W
  # Freezer
  #- platform: sql
  #  db_url: !secret energyathome
  #  queries:
  #    - name: Freezer Power Meter
  #      query: "SELECT id,date_time,channel_id,data as data FROM energyathome.historical_data WHERE channel_id = (SELECT channel_id FROM channel WHERE device_id = 28 LIMIT 1) AND date_time >= NOW() - INTERVAL 30 MINUTE ORDER BY date_time DESC LIMIT 1;"
  #      column: "data"
  #      unit_of_measurement: W
  # Home Entertainment
  #- platform: sql
  #  db_url: !secret energyathome
  #  queries:
  #    - name: Home Entertainment Power Meter
  #      query: "SELECT id,date_time,channel_id,data/1000 as data FROM energyathome.historical_data WHERE channel_id = (SELECT channel_id FROM channel WHERE device_id = 21 LIMIT 1) AND date_time >= NOW() - INTERVAL 30 MINUTE ORDER BY date_time DESC LIMIT 1;"
  #      column: "data"
  #      unit_of_measurement: W
  # Surround Sound
  #- platform: sql
  #  db_url: !secret energyathome
  #  queries:
  #    - name: Surround Sound Power Meter
  #      query: "SELECT id,date_time,channel_id,data as data FROM energyathome.historical_data WHERE channel_id = (SELECT channel_id FROM channel WHERE device_id = 29 LIMIT 1) AND date_time >= NOW() - INTERVAL 30 MINUTE ORDER BY date_time DESC LIMIT 1;"
  #      column: "data"
  #      unit_of_measurement: W
  # Convert power to energy (e.g. W to Wh)
  - platform: integration
    source: sensor.house_power_meter
    name: House Energy Meter
    unit_prefix: k
    round: 2
  - platform: integration
    source: sensor.jd_power_meter
    name: JD Energy Meter
    unit_prefix: k
    round: 2
  - platform: integration
    source: sensor.server_power_meter
    name: House Energy Meter
    unit_prefix: k
    round: 2
  - platform: integration
    source: sensor.telephony_power_meter
    name: Telephony Energy Meter
    unit_prefix: k
    round: 2
  - platform: integration
    source: sensor.fridge_freezer_power_meter
    name: House Energy Meter
    unit_prefix: k
    round: 2
  - platform: integration
    source: sensor.freezer_power_meter
    name: Freezer Energy Meter
    unit_prefix: k
    round: 2
  - platform: integration
    source: sensor.home_entertainment_power_meter
    name: House Energy Meter
    unit_prefix: k
    round: 2
  - platform: integration
    source: sensor.surround_sound_power_meter
    name: Surround Souund Energy Meter
    unit_prefix: k
    round: 2
  - platform: integration
    source: sensor.electicity_consumption_dcc
    name: DCC Electricity
    unit_prefix: k
    round: 2

template:
  - sensor:
      - name: Gas cost
        icon: mdi:cash-multiple
        state: >-
          {% set unit_price = 3.95 %}
          {% set standing_charge = 23.85 %}
          {% set calorific_value = 39.1 %}
          {% set usage = state_attr('sensor.gas_consumption', 'results') %}
          {% if usage is defined and usage|count == 48 %}
            {{ ((states('sensor.gas_consumption') | float * 1.02264 * calorific_value / 3.6) * unit_price / 100 + standing_charge / 100)|round(2) }}
          {% else %}
            Unknown
          {% endif %}
        device_class: energy
        unit_of_measurement: "Â£"
      - name: Electricity Cost
        icon: mdi:cash-multiple
        state: >-
          {% set standing_charge = 25 %}
          {% set usage = state_attr('sensor.electricity_consumption', 'results') %}
          {% if usage is defined and usage|count == 48 %}
            {% set ns = namespace(total=0) %}
            {% for p in range(0, 48) %}
              {% set time = as_timestamp(usage[p].interval_start)|timestamp_custom('%H:%M:%S') %}
              {% set unit_price = 15.59 %}
              {% if '00:30:00' <= time < '04:30:00' %}
                {% set unit_price = 5 %}
              {% endif %}
              {% set ns.total = ns.total + (usage[p].consumption * unit_price / 100) %}
            {% endfor %}
            {{ (ns.total + standing_charge / 100)|round(2) }}
          {% else %}
            Unknown
          {% endif %}
        unit_of_measurement: "Â£"
        device_class: monetary
      - name: Electricity Cost Off Peak
        icon: mdi:cash-multiple
        state: >-
          {% set standing_charge = 0 %}
          {% set usage = state_attr('sensor.electricity_consumption_off_peak', 'results') %}
          {% if usage is defined and usage|count == 8 %}
            {% set ns = namespace(total=0) %}
            {% for p in range(0, 8) %}
              {% set time = as_timestamp(usage[p].interval_start)|timestamp_custom('%H:%M:%S') %}
              {% set unit_price = 5 %}
              {% set ns.total = ns.total + (usage[p].consumption * unit_price / 100) %}
            {% endfor %}
            {{ (ns.total + standing_charge / 100)|round(2) }}
          {% else %}
            Unknown
          {% endif %}
        unit_of_measurement: "Â£"
        device_class: monetary
  - trigger:
      - platform: time
        at: "00:30:00"
      - platform: time
        at: "00:35:00"
      - platform: time
        at: "04:30:00"
      - platform: time
        at: "04:35:00"
    sensor:
      - name: Current Electricity Unit Cost
        state: "{% if [now().hour, now().minute]|join()|int <= 430  %} 0.05 {% else %} 0.1596 {% endif %}"
        unit_of_measurement: "GBP/kWh"
        icon: mdi:cash-multiple
