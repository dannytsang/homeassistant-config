# Created by Danny Tsang <danny@tsang.uk>
# Integration: https://github.com/tolwi/hassio-ecoflow-cloud
automation:
  - id: "1689437015870"
    alias: "EcoFlow: Solar Below House Consumption"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: sensor.ecoflow_kitchen_solar_excess
        below: 0
        for:
          hours: 0
          minutes: 10
          seconds: 0
    condition:
      - condition: numeric_state
        entity_id: sensor.electricity_current_rate
        above: 0
      - condition: numeric_state
        entity_id: number.ecoflow_kitchen_backup_reserve_level
        above: 5
      - condition: state
        entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
    action:
      - if:
          - condition: numeric_state
            entity_id: number.ecoflow_kitchen_ac_charging_power
            above: input_number.ecoflow_kitchen_charge_solar_threshold
          - condition: template
            value_template: >-
              {{ states('sensor.ecoflow_kitchen_solar_excess')|float(-1) >= states('input_number.ecoflow_kitchen_charge_solar_threshold')|float(0) }}
        then:
          - parallel:
              - service: script.send_direct_notification
                data:
                  message: Solar production dipped below household consumption. Setting backup to 5%.
                  title: Solar
                  people:
                    - person.danny
              - service: script.ecoflow_set_charge_rate
                data:
                  reserve_amount: 200
        else:
          - parallel:
              - service: script.send_direct_notification
                data:
                  message: Solar production dipped below household consumption. Setting backup to 5%.
                  title: Solar
                  people:
                    - person.danny
              - service: script.ecoflow_set_backup_reserve
                data:
                  reserve_amount: 5
    mode: restart
  # Unit rate related automations
  - id: "1689626117476"
    alias: "Ecoflow: Electricity Rates Cost Nothing"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: sensor.electricity_current_rate
        below: 0.01
    condition:
      - condition: state
        entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
      - condition: numeric_state
        entity_id: number.ecoflow_kitchen_backup_reserve_level
        below: 100
    action:
      - parallel:
          - service: script.send_direct_notification
            data:
              message: >-
                Electrictity rate is 0 or below ({{ states('sensor.electricity_current_rate', with_unit=True)}}).
                Setting backup reserve to 100% and maximum charging power.
              title: EcoFlow
              people:
                - person.danny
          - service: script.ecoflow_set_backup_reserve
            data:
              reserve_amount: 100
          - service: script.ecoflow_set_charge_rate
            data:
              target_charge_rate: 1200
    mode: single
  - id: "1689626117477"
    alias: "Ecoflow: Electricity Rates Starts To Cost"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id: sensor.electricity_current_rate
        above: 0
    condition:
      - condition: state
        entity_id: switch.ecoflow_kitchen_backup_reserve_enabled
        state: "on"
      - condition: state
        entity_id: input_boolean.enable_ecoflow_automations
        state: "on"
      - condition: numeric_state
        entity_id: number.ecoflow_kitchen_backup_reserve_level
        above: input_number.ecoflow_kitchen_low_battery_reserve
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.ecoflow_kitchen_solar_excess
                below: 0
            sequence:
              - parallel:
                  - service: script.send_direct_notification
                    data:
                      message: >-
                        Electrictity rate has gove above 0 ({{ states('sensor.electricity_current_rate', with_unit=True) }})
                        and no excess electricity detected ({{ states('sensor.ecoflow_kitchen_solar_excess', with_unit=True) }}).
                        Setting backup reserve to
                        {{ states('input_number.ecoflow_kitchen_low_battery_reserve')|int(0), with_unit=True }}.
                      title: EcoFlow
                      people:
                        - person.danny
                  - service: script.ecoflow_set_backup_reserve
                    data:
                      reserve_amount: >-
                        {{ states('input_number.ecoflow_kitchen_low_battery_reserve')|int(0) }}
        default:
          - parallel:
              - service: script.send_direct_notification
                data:
                  message: >-
                    Electrictity rate has gove above 0 ({{ states('sensor.electricity_current_rate', with_unit=True) }})
                    and excess electricity detected ({{ states('sensor.ecoflow_kitchen_solar_excess', with_unit=True) }}).
                    Setting charging rate to 200w.
                  title: EcoFlow
                  people:
                    - person.danny
              - service: script.ecoflow_set_charge_rate
                data:
                  target_charge_rate: 200
    mode: single

script:
  ecoflow_set_backup_reserve:
    alias: Ecoflow Set Backup Reserve
    fields:
      target_reserve_amount:
        description: Reserve amount to be set from 5-100%.
        required: true
    sequence:
      - service: input_number.set_value
        data:
          value: "{{ reserve_amount|int(5) }}"
        target:
          entity_id: input_number.target_ecoflow_kitchen_backup_reserve
      - service: script.ecoflow_update_backup_reserve
        data: {}
    mode: single
  ecoflow_update_backup_reserve:
    alias: Ecoflow Update Backup Reserve
    sequence:
      - repeat:
          until:
            - or:
                - condition: template
                  value_template: >-
                    {{ repeat.index > 6 }}
                - condition: template
                  value_template: >-
                    {{ states('number.ecoflow_kitchen_backup_reserve_level')|int(0) ==
                    states('input_number.target_ecoflow_kitchen_backup_reserve')|int(0) }}
          sequence:
            - service: number.set_value
              data:
                value: >-
                  {{ states('input_number.target_ecoflow_kitchen_backup_reserve')|int(5) }}
              target:
                entity_id: number.ecoflow_kitchen_backup_reserve_level
            - delay:
                hours: 0
                minutes: 0
                seconds: 40
                milliseconds: 0
      - if:
          - condition: template
            value_template: >-
              {{ states('number.ecoflow_kitchen_backup_reserve_level')|int(0) !=
              states('input_number.target_ecoflow_kitchen_backup_reserve')|int(0) }}
        then:
          - service: script.send_direct_notification
            data:
              message: Retry failed to set backup to {{ states('input_number.target_ecoflow_kitchen_backup_reserve', with_unit=True) }}.
              title: Solar
              people:
                - person.danny
    mode: single
  ecoflow_set_charge_rate:
    alias: Ecoflow Set Charge Rate
    fields:
      target_charge_rate:
        description: Rate of charge expressed in watts from 200-1200.
        required: true
    sequence:
      - service: input_number.set_value
        data:
          value: "{{ target_charge_rate|int(200) }}"
        target:
          entity_id: input_number.target_ecoflow_kitchen_charge_rate
      - service: script.ecoflow_update_charge_rate
        data: {}
    mode: single
  ecoflow_update_charge_rate:
    alias: Ecoflow Update Charge Rate
    sequence:
      - repeat:
          until:
            - or:
                - condition: template
                  value_template: >-
                    {{ repeat.index > 6 }}
                - condition: template
                  value_template: >-
                    {{ states('number.ecoflow_kitchen_ac_charging_power')|int(0) ==
                    states('input_number.target_ecoflow_kitchen_charge_rate')|int(0) }}
          sequence:
            - if:
                - condition: template
                  value_template: >-
                    {{ repeat.index % 2 == 0 }}
              then:
                - service: homeassistant.reload_config_entry
                  data: {}
                  target:
                    entity_id: sensor.kitchen_ecoflow_battery_level
                - wait_for_trigger:
                    - platform: template
                      value_template: >-
                        {{ states('sensor.kitchen_ecoflow_battery_level')|int(-1) >= 0 }}
                  timeout:
                    hours: 0
                    minutes: 0
                    seconds: 40
                    milliseconds: 0
            - service: number.set_value
              data:
                value: >-
                  {{ states('input_number.target_ecoflow_kitchen_charge_rate')|int(5) }}
              target:
                entity_id: number.ecoflow_kitchen_ac_charging_power
            - delay:
                hours: 0
                minutes: 0
                seconds: 40
                milliseconds: 0
      - if:
          - condition: template
            value_template: >-
              {{ states('number.ecoflow_kitchen_ac_charging_power')|int(0) !=
              states('input_number.target_ecoflow_kitchen_charge_rate')|int(0) }}
        then:
          - service: script.send_direct_notification
            data:
              message: Retry failed to set charge rate to {{ states('input_number.target_ecoflow_kitchen_charge_rate', with_unit=True) }}
              title: Solar
              people:
                - person.danny
    mode: single

template:
  - trigger:
      - platform: state
        entity_id:
          - input_number.ecoflow_kitchen_charge_solar_threshold
          - sensor.growatt_export_to_grid
          - sensor.growatt_input_watt
          - sensor.growatt_load_consumption
          - sensor.ecoflow_kitchen_ac_in_power
    sensor:
      - name: "EcoFlow Kitchen Solar Excess"
        unique_id: 947e22f4-5213-4440-8da2-6c3a089f3743
        state: >-
          {% if states('sensor.growatt_export_to_grid')|float(0) > 200 %}
          {{ states('sensor.growatt_export_to_grid')|float(0)*1000 }}
          {% elif states('sensor.kitchen_ecoflow_battery_level')|int(0) < 100 %}
          {{ ((states('sensor.growatt_input_watt')|float(0) - states('sensor.growatt_load_consumption')|float(0) - states('sensor.growatt_battery_1_charge_rate')|float(0))
          * 1000 - states('input_number.ecoflow_kitchen_charge_solar_threshold')|int(0))|round(2) }}
          {% else %}
          {{ ((states('sensor.growatt_input_watt')|float(0) - states('sensor.growatt_load_consumption')|float(0) - states('sensor.growatt_battery_1_charge_rate')|float(0))
          * 1000 - states('sensor.ecoflow_kitchen_ac_in_power')|int(0))|round(2) }}
          {% endif %}
        unit_of_measurement: w
        attributes:
          calculation_method: >-
            {% if states('sensor.growatt_export_to_grid')|float(0) > 200 %}
            grid export
            {% elif states('sensor.kitchen_ecoflow_battery_level')|int(0) < 100 %}
            charging
            {% else %}
            charged
            {% endif %}
  - trigger:
      - platform: state
        entity_id:
          - sensor.ecoflow_kitchen_total_in_power
          - sensor.ecoflow_kitchen_total_out_power
    sensor:
      - name: "EcoFlow Kitchen Charging Rate"
        unique_id: d809c2e4-e50b-499b-ac3a-796cef4806d8
        state: >-
          {{ states('sensor.ecoflow_kitchen_total_in_power')|float(0) - states('sensor.ecoflow_kitchen_total_out_power')|float(0) }}
        unit_of_measurement: w
