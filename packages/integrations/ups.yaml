# Created by Danny Tsang <danny@tsang.uk>
automation:
  - id: "1591553714916"
    alias: "^UPS: Fully Charged"
    description: ""
    trigger:
      - entity_id: 
          - sensor.lounge_ups_status_data
          - sensor.computer_ups_status_data
          - sensor.server_ups_status_data
        from: "OL CHRG"
        platform: state
        to: "OL"
    condition: []
    action:
      - data:
          message: ":battery: Battery is fully charged."
          title: ":battery: UPS: {{ {'sensor.lounge_ups_status_data': ':couch_and_lamp: Lounge', 
          'sensor.pc_ups_status_data': ':desktop_computer: PC', 
          'sensor.server_ups_status_data': 'Server'}[trigger.entity_id] | default('') }}"
        service: script.send_to_home_log
  - id: "1590564212294"
    alias: "^UPS: Charging"
    description: ""
    trigger:
      - entity_id:
          - sensor.computer_ups_status_data
          - sensor.computer_ups_status_data
          - sensor.server_ups_status_data
        platform: state
        from: "OB DISCHRG"
        to: "OL CHRG"
        id: battery_to_charge
      - entity_id:
          - sensor.lounge_ups_status_data
          - sensor.computer_ups_status_data
        platform: state
        to: "OL CHRG"
        id: "charge"
    condition: []
    action:
      - parallel:
        - choose:
            - conditions:
                - condition: trigger
                  id: charge
              sequence:
                - service: script.send_to_home_log
                  data:
                    message: ":battery: Battery is :electric_plug: charging."
                    title: ":battery: UPS: {{ {'sensor.lounge_ups_status_data': ':couch_and_lamp: Lounge', 
                    'sensor.pc_ups_status_data': ':desktop_computer: PC', 
                    'sensor.server_ups_status_data': 'Server'}[trigger.entity_id] | default('') }}"
            - conditions:
                - condition: trigger
                  id: battery_to_charge
              sequence:
                - service: script.send_direct_notification
                  data:
                    message: ":battery: UPS went from battery to :electric_plug: charging."
                    title: ":battery: UPS: {{ {'sensor.lounge_ups_status_data': ':couch_and_lamp: Lounge', 
                    'sensor.pc_ups_status_data': ':desktop_computer: PC', 
                    'sensor.server_ups_status_data': 'Server'}[trigger.entity_id] | default('') }}"
          default: []
    mode: single
  - id: "1591963855737"
    alias: "^UPS: Unavailable"
    description: ""
    trigger:
      - entity_id: 
          - sensor.lounge_ups_status_data
          - sensor.computer_ups_status
          - sensor.server_ups_status_data
        platform: state
        to: unavailable
    condition: []
    action:
      - service: script.send_to_home_log
        data:
          message:
            ":battery: Battery is not connected."
          title: ":warning: :battery: UPS: {{ {'sensor.lounge_ups_status_data': ':couch_and_lamp: Lounge', 
          'sensor.pc_ups_status_data': ':desktop_computer: PC', 
          'sensor.server_ups_status_data': 'Server'}[trigger.entity_id] | default('') }} :warning:"
        
  - id: "1590564041899"
    alias: "^UPS: UPS On Battery"
    description: ""
    trigger:
      - entity_id: 
          - sensor.lounge_ups_status_data
          - sensor.computer_ups_status_data
          - sensor.server_ups_status_data
        platform: state
        to: OB DISCHRG
    condition: []
    action:
      - service: script.send_direct_notification
        data:
          message: "Running on :battery: battery."
          title: ":warning: :battery: UPS: {{ {'sensor.lounge_ups_status_data': ':couch_and_lamp: Lounge', 
          'sensor.pc_ups_status_data': ':desktop_computer: PC', 
          'sensor.server_ups_status_data': 'Server'}[trigger.entity_id] | default('') }} :warning:"
    mode: single
  - id: "1591963855738"
    alias: "^UPS: UPS Online Offline"
    description: ""
    trigger:
      - entity_id:
          - sensor.lounge_ups_status_data
          - sensor.computer_ups_status_data
          - sensor.server_ups_status_data
        platform: state
        to: OL OFF
    condition: []
    action:
      - service: script.send_direct_notification
        data:
          message:
            "Running on :battery: battery because it's 'Online Offline' status."
          title: ":warning: :battery: UPS: {{ {'sensor.lounge_ups_status_data': ':couch_and_lamp: Lounge', 
          'sensor.pc_ups_status_data': ':desktop_computer: PC', 
          'sensor.server_ups_status_data': 'Server'}[trigger.entity_id] | default('') }} :warning:"
    mode: single
  - id: "1591705427771"
    alias: "^UPS: Replace Battery Alarm"
    description: ""
    trigger:
      - entity_id:
          - sensor.lounge_ups_status_data
          - sensor.computer_ups_status_data
          - sensor.server_ups_status_data
        platform: state
        to: ALARM OL RB
    condition: []
    action:
      - service: script.send_direct_notification
        data:
          message: "Replace battery alarm."
          title: ":warning: :battery: UPS: {{ {'sensor.lounge_ups_status_data': ':couch_and_lamp: Lounge', 
          'sensor.pc_ups_status_data': ':desktop_computer: PC', 
          'sensor.server_ups_status_data': 'Server'}[trigger.entity_id] | default('') }} :warning:"
    mode: single

template:
  - sensor:
      - name: Lounge UPS Power
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
        state: >
          {% if states('sensor.lounge_ups_status_data') in ['OL', 'OL CHRG'] -%}
            {{ (states('sensor.lounge_ups_load') | float(0) / 100) * states('sensor.lounge_ups_nominal_real_power') | float(0) }}
          {%- else -%}
            0
          {%- endif %}
      - name: Office UPS Power
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
        state: >
          {% if states('sensor.computer_ups_status_data') in ['OL', 'OL CHRG'] -%}
            {{ (states('sensor.computer_ups_load') | float(0) / 100) * states('sensor.computer_ups_nominal_real_power') | float(0) }}
          {%- else -%}
            0
          {%- endif %}
      - name: Server UPS Power
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
        state: >
          {% if states('sensor.server_ups_status_data') in ['OL', 'OL CHRG'] -%}
            {{ (states('sensor.server_ups_load') | float(0) / 100) * states('sensor.server_ups_nominal_real_power') | float(0) }}
          {%- else -%}
            0
          {%- endif %}