# Created by Danny Tsang <danny@tsang.uk>
# Integration: https://www.home-assistant.io/integrations/nut/
automation:
  - id: "1591963855737"
    alias: "UPS: Status Change"
    description: "Notification of interested states"
    triggers:
      - trigger: state
        entity_id:
          - sensor.lounge_ups_status_data
          - sensor.computer_ups_status
          - sensor.server_ups_status_data
          - sensor.threedprinterups_status_data
          - sensor.family_computer_ups_status_data
        to: "unavailable"
    conditions: []
    actions:
      - choose:
          - conditions:
              - alias: Error conditions
                condition: template
                value_template: >-
                  {{ states(trigger.entity_id) in ("OB DISCHRG", "OL OFF", "ALARM OL RB") }}
            sequence:
              - action: script.send_direct_notification
                data:
                  message: ":battery: Battery is {{ states('trigger.entity_id') }}."
                  title: >-
                    :bangbang: :battery: UPS:
                    {%- if trigger.entity_id|default('', true) == 'sensor.lounge_ups_status_data' -%}
                    :couch_and_lamp: Living Room
                    {%- elif trigger.entity_id|default('', true) == 'sensor.server_ups_status_data' -%}
                    Server
                    {%- elif trigger.entity_id|default('', true) == 'sensor.computer_ups_status_data' -%}
                    Computer
                    {%- elif trigger.entity_id|default('', true) == 'sensor.threedprinterups_status_data' -%}
                    3D Printer
                    {%- elif trigger.entity_id|default('', true) == 'sensor.family_computer_ups_status_data' -%}
                    :couch_and_lamp: Family Computer
                    {%- else -%}
                    :warning: Unknown device {{ trigger.entity_id }}
                    {%- endif -%}

                    :bangbang:
          - conditions:
              - alias: Warning conditions
                condition: template
                value_template: >-
                  {{ states(trigger.entity_id) in ("unavailable", "OB DISCHRG", "OL OFF", "ALARM OL RB") }}
            sequence:
              - action: script.send_to_home_log
                data:
                  message: ":battery: Battery is {{ states('trigger.entity_id') }}."
                  title: >-
                    :warning: :battery: UPS:
                    {%- if trigger.entity_id|default('', true) == 'sensor.lounge_ups_status_data' -%}
                    :couch_and_lamp: Living Room
                    {%- elif trigger.entity_id|default('', true) == 'sensor.server_ups_status_data' -%}
                    Server
                    {%- elif trigger.entity_id|default('', true) == 'sensor.computer_ups_status_data' -%}
                    Computer
                    {%- elif trigger.entity_id|default('', true) == 'sensor.threedprinterups_status_data' -%}
                    3D Printer
                    {%- elif trigger.entity_id|default('', true) == 'sensor.family_computer_ups_status_data' -%}
                    :couch_and_lamp: Family Computer
                    {%- else -%}
                    :warning: Unknown device {{ trigger.entity_id }}
                    {%- endif -%}
                    {{ states('trigger.entity_id') }}
                    :warning:
                  log_level: "Normal"
          - conditions:
              - alias: Return to normal conditions
                condition: template
                value_template: >-
                  {{ states(trigger.entity_id) in ("OL CHRG") }}
            sequence:
              - action: script.send_direct_notification
                data:
                  message: ":battery: UPS is {{ states('trigger.entity_id') }}."
                  title: >-
                    :heavy_check_mark: :battery: UPS:
                    {%- if trigger.entity_id|default('', true) == 'sensor.lounge_ups_status_data' -%}
                    :couch_and_lamp: Living Room
                    {%- elif trigger.entity_id|default('', true) == 'sensor.server_ups_status_data' -%}
                    Server
                    {%- elif trigger.entity_id|default('', true) == 'sensor.computer_ups_status_data' -%}
                    Computer
                    {%- elif trigger.entity_id|default('', true) == 'sensor.threedprinterups_status_data' -%}
                    3D Printer
                    {%- elif trigger.entity_id|default('', true) == 'sensor.family_computer_ups_status_data' -%}
                    :couch_and_lamp: Living Room
                    {%- else -%}
                    :warning: Unknown device {{ trigger.entity_id }}
                    {%- endif -%}
                    :heavy_check_mark:
          - conditions:
              - alias: Return to normal conditions
                condition: template
                value_template: >-
                  {{ states(trigger.entity_id) in ("OL") }}
            sequence:
              - action: script.send_to_home_log
                data:
                  message: ":battery: UPS is {{ states('trigger.entity_id') }}."
                  title: >-
                    :battery: UPS:
                    {%- if trigger.entity_id|default('', true) == 'sensor.lounge_ups_status_data' -%}
                    :couch_and_lamp: Living Room
                    {%- elif trigger.entity_id|default('', true) == 'sensor.server_ups_status_data' -%}
                    Server
                    {%- elif trigger.entity_id|default('', true) == 'sensor.computer_ups_status_data' -%}
                    Computer
                    {%- elif trigger.entity_id|default('', true) == 'sensor.threedprinterups_status_data' -%}
                    3D Printer
                    {%- elif trigger.entity_id|default('', true) == 'sensor.family_computer_ups_status_data' -%}
                    :couch_and_lamp: Living Room
                    {%- else -%}
                    :warning: Unknown device {{ trigger.entity_id }}
                    {%- endif -%}
                  log_level: "Normal"

template:
  - sensor:
      - name: 3D Printer UPS Power
        unique_id: 31406205-681f-472d-8be1-a7908383de89
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
        state: >
          {% if states('sensor.threedprinterups_status') in ['OL', 'OL CHRG'] -%}
            {{ (states('sensor.threedprinterups_load') | float(0) / 100) * 405 | float(0) }}
          {%- else -%}
            0
          {%- endif %}
      - name: Family Computer UPS Power
        unique_id: b2271d4a-7456-49b8-9530-7595fdbb6caf
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
        state: >
          {% if states('sensor.family_computer_ups_status_data') in ['OL', 'OL CHRG'] -%}
            {{ (states('sensor.family_computer_ups_load') | float(0) / 100) * states('sensor.family_computer_ups_nominal_real_power') | float(0) }}
          {%- else -%}
            0
          {%- endif %}
      - name: Kitchen UPS Power
        unique_id: aad5419d-c50d-41db-a170-0f1419a4842c
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
        state: >
          {% if states('sensor.kitchen_ups_status_data') in ['OL', 'OL CHRG'] -%}
            {{ (states('sensor.kitchen_ups_load') | float(0) / 100) * states('sensor.kitchen_ups_nominal_real_power') | float(0) }}
          {%- else -%}
            0
          {%- endif %}
      - name: Living Room UPS Power
        unique_id: b34e6d2e-8a46-489a-afcb-551a0e4b9f0a
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
        state: >
          {% if states('sensor.lounge_ups_status_data') in ['OL', 'OL CHRG'] -%}
            {{ (states('sensor.lounge_ups_load') | float(0) / 100) * states('sensor.lounge_ups_nominal_real_power') | float(0) }}
          {%- else -%}
            0
          {%- endif %}
      - name: Office UPS Power
        unique_id: 64c705e9-619e-4cfd-9e97-fa722556041e
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
        state: >
          {% if states('sensor.computer_ups_status_data') in ['OL', 'OL CHRG'] -%}
            {{ (states('sensor.computer_ups_load') | float(0) / 100) * states('sensor.computer_ups_nominal_real_power') | float(0) }}
          {%- else -%}
            0
          {%- endif %}
      - name: Server UPS Power
        unique_id: 6868a338-192a-4f68-949a-9157b434ec4f
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
        state: >
          {% if states('sensor.server_ups_status_data') in ['OL', 'OL CHRG'] -%}
            {{ (states('sensor.server_ups_load') | float(0) / 100) * states('sensor.server_ups_nominal_real_power') | float(0) }}
          {%- else -%}
            0
          {%- endif %}
