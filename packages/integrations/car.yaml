# Created by Danny Tsang <danny@tsang.uk>
# Integration: https://www.home-assistant.io/integrations/bmw_connected_drive/
#
# #Key
# counter.dannys_car_update_attempts - Number of times called to update the car details.
# counter.dannys_car_location_checked - Number of successful location updates.
# input_boolean.check_dannys_car_location - Turns on or off car location updates.
# timer.update_dannys_car - Delays between each request to update car details.
automation:
  - id: "1660598586325"
    alias: "^Car: Travel Time By Car Updated"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - sensor.google_travel_time_by_car
    condition: []
    action:
      - service: script.send_to_home_log
        data:
          message: >-
            Updated.
            Origin: {{ state_attr(''sensor.google_travel_time_by_car'', ''origin_addresses'') }}
            Destination: {{ state_attr(''sensor.google_travel_time_by_car'', ''destination_addresses'') }}
            Distance: {{ state_attr(''sensor.google_travel_time_by_car'', ''distance'') }}
            Time: {{ state_attr(''sensor.google_travel_time_by_car'', ''duration_in_traffic'') }}
          title: "Travel Time By :car: Car"
    mode: single

proximity:
  danny_car_home:
    zone: home
    devices:
      - device_tracker.435i
    tolerance: 100
    unit_of_measurement: mi

script:
  dannys_car_update_location:
    alias: Car Update Danny's Location
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.check_dannys_car_location
                state: "on"
            sequence:
              - parallel:
                  - service: script.send_to_home_log
                    data:
                      message: "Updating location."
                      title: "Danny's :car: Car"
                  - service: button.press
                    data: {}
                    target:
                      entity_id: button.bmw_find_vehicle
                  - service: counter.increment
                    data: {}
                    target:
                      entity_id: counter.car_update_attempts
              - wait_for_trigger:
                  - platform: state
                    entity_id:
                      - device_tracker.435i
                timeout: "300"
              # Wait for car updated automation to reset the counter if the update was successful.
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 5
                  milliseconds: 0
              - choose:
                  # Update car successful due to number of attempts not being reset.
                  - conditions:
                      - condition: numeric_state
                        entity_id: counter.dannys_car_update_attempts
                        below: input_number.dannys_car_max_location_update_attempts
                      - condition: numeric_state
                        entity_id: counter.dannys_car_update_attempts
                        below: 1
                    sequence:
                      - service: script.send_to_home_log
                        data:
                          message: >-
                            Update location was successful
                            ({{ states('counter.dannys_car_update_attempts') }}/{{ states('input_number.dannys_car_max_location_update_attempts')|int }}).
                            Restarting car update timer."
                          title: "Danny's :car: Car"
                      - service: timer.cancel
                        data: {}
                        target:
                          entity_id: timer.update_dannys_car
                      - service: timer.start
                        data: {}
                        target:
                          entity_id: timer.update_dannys_car
                  # Update car failed and below max attempts.
                  - conditions:
                      - condition: numeric_state
                        entity_id: counter.dannys_car_update_attempts
                        below: input_number.dannys_car_max_location_update_attempts
                    sequence:
                      - service: script.send_to_home_log
                        data:
                          message: >-
                            Update location was unsuccessful
                            ({{ states('counter.dannys_car_update_attempts') }}/{{ states('input_number.dannys_car_max_location_update_attempts')|int }}).
                            Restarting car update timer."
                          title: "Danny's :car: Car"
                      - service: timer.cancel
                        data: {}
                        target:
                          entity_id: timer.update_dannys_car
                      - service: timer.start
                        data:
                          # Set timmer to 1 how from now.
                          duration: "{{ (as_timestamp(now()) + 3600) | timestamp_custom('%Y:%m:%d %H:%M:%S') }}"
                        target:
                          entity_id: timer.update_dannys_car
                  # Update car failed and equal to or above max attempt.
                  - conditions:
                      - or:
                          - condition: state
                            entity_id: counter.dannys_car_update_attempts
                            state: input_number.dannys_car_max_location_update_attempts
                          - condition: numeric_state
                            entity_id: counter.dannys_car_update_attempts
                            above: input_number.dannys_car_max_location_update_attempts
                    sequence:
                      - service: script.send_to_home_log
                        data:
                          message: >-
                            Update location was unsuccessful and exceeded maximum attempts
                            ({{ states('counter.dannys_car_update_attempts') }}/{{ states('input_number.dannys_car_max_location_update_attempts')|int }})."
                          title: "Danny's :car: Car"
                default: []
    mode: single
    icon: mdi:car

template:
  - sensor:
      - name: "Danny's Car Longitude"
        state: "{{ state_attr('device_tracker.435i', 'longitude') }}"
      - name: "Danny's Car Latitude"
        state: "{{ state_attr('device_tracker.435i', 'latitude') }}"
