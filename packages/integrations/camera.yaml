# Created by Danny Tsang <danny@tsang.uk>
# Integration: https://github.com/robmarkcole/HASS-Deepstack-face
# Integration: https://github.com/robmarkcole/HASS-Deepstack-object
camera:
  - platform: local_file
    file_path: !secret camera_deepstack_conservatory
    name: deepstack_conservatory_latest
  - platform: local_file
    file_path: !secret camera_deepstack_driveway
    name: deepstack_driveway_latest
  - platform: local_file
    file_path: !secret camera_deepstack_frontdoor
    name: deepstack_dront_door_latest
  - platform: local_file
    file_path: !secret camera_deepstack_kitchen
    name: deepstack_lounge_latest
  - platform: local_file
    file_path: !secret camera_deepstack_lounge
    name: deepstack_lounge_latest
  - platform: local_file
    file_path: !secret camera_deepstack_office
    name: deepstack_office_latest
  - platform: local_file
    file_path: !secret camera_deepstack_upstairs
    name: deepstack_upstairs_latest

image_processing:
  # Object
  - platform: deepstack_object
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    timeout: 20
    api_key: !secret deepstack_api_key
    save_file_folder: !secret image_processing_conservatory
    save_file_format: png
    save_timestamped_file: true
    always_save_latest_file: true
    scale: 0.75
    targets:
      - target: person
        confidence: 50
      - target: cat
        confidence: 50
      - target: dog
        confidence: 50
      - target: knife
        confidence: 25
    source:
      - entity_id: camera.conservatory
  - platform: deepstack_object
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    timeout: 20
    api_key: !secret deepstack_api_key
    save_file_folder: !secret image_processing_driveway
    save_file_format: png
    save_timestamped_file: true
    always_save_latest_file: true
    scale: 0.75
    targets:
      - target: person
      - target: vehicle
        confidence: 60
      - target: car
        confidence: 40
    source:
      - entity_id: camera.driveway
  - platform: deepstack_object
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    timeout: 20
    api_key: !secret deepstack_api_key
    save_file_folder: !secret image_processing_front_door
    save_file_format: png
    save_timestamped_file: true
    always_save_latest_file: true
    scale: 0.75
    targets:
      - target: person
        confidence: 50
      - target: cat
        confidence: 75
      - target: dog
        confidence: 75
      - target: knife
        confidence: 50
    source:
      - entity_id: camera.front_door
  - platform: deepstack_object
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    timeout: 20
    api_key: !secret deepstack_api_key
    save_file_folder: !secret image_processing_kitchen
    save_file_format: png
    save_timestamped_file: true
    always_save_latest_file: true
    scale: 0.75
    targets:
      - target: person
        confidence: 50
      - target: cat
        confidence: 50
      - target: dog
        confidence: 50
      - target: knife
        confidence: 25
    source:
      - entity_id: camera.kitchen
  - platform: deepstack_object
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    timeout: 20
    api_key: !secret deepstack_api_key
    save_file_folder: !secret image_processing_lounge
    save_file_format: png
    save_timestamped_file: true
    always_save_latest_file: true
    scale: 0.75
    targets:
      - target: person
        confidence: 50
      - target: cat
        confidence: 50
      - target: dog
        confidence: 50
      - target: knife
        confidence: 25
    source:
      - entity_id: camera.lounge
  - platform: deepstack_object
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    timeout: 20
    api_key: !secret deepstack_api_key
    save_file_folder: !secret image_processing_office
    save_file_format: png
    save_timestamped_file: true
    always_save_latest_file: true
    scale: 0.75
    targets:
      - target: person
        confidence: 70
      - target: cat
        confidence: 50
      - target: dog
        confidence: 50
      - target: knife
        confidence: 25
    source:
      - entity_id: camera.office_snapshot
  - platform: deepstack_object
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    timeout: 20
    api_key: !secret deepstack_api_key
    save_file_folder: !secret image_processing_upstairs
    save_file_format: png
    save_timestamped_file: true
    always_save_latest_file: true
    scale: 0.75
    targets:
      - target: person
        confidence: 50
      - target: cat
        confidence: 50
      - target: dog
        confidence: 50
      - target: knife
        confidence: 25
    source:
      - entity_id: camera.upstairs
  - platform: deepstack_face
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    api_key: !secret deepstack_api_key
    timeout: 20
    save_file_folder: !secret image_processing_conservatory
    save_timestamped_file: true
    save_faces: true
    save_faces_folder: !secret image_processing_faces
    show_boxes: true
    source:
      - entity_id: camera.conservatory
  - platform: deepstack_face
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    api_key: !secret deepstack_api_key
    timeout: 20
    save_file_folder: !secret image_processing_driveway
    save_timestamped_file: true
    save_faces: true
    save_faces_folder: !secret image_processing_faces
    show_boxes: true
    source:
      - entity_id: camera.driveway
  - platform: deepstack_face
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    api_key: !secret deepstack_api_key
    timeout: 20
    save_file_folder: !secret image_processing_front_door
    save_timestamped_file: true
    save_faces: true
    save_faces_folder: !secret image_processing_faces
    show_boxes: true
    source:
      - entity_id: camera.front_door
  - platform: deepstack_face
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    api_key: !secret deepstack_api_key
    timeout: 20
    save_file_folder: !secret image_processing_lounge
    save_timestamped_file: true
    save_faces: true
    save_faces_folder: !secret image_processing_faces
    show_boxes: true
    source:
      - entity_id: camera.lounge
  - platform: deepstack_face
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    api_key: !secret deepstack_api_key
    timeout: 20
    save_file_folder: !secret image_processing_office
    save_timestamped_file: true
    save_faces: true
    save_faces_folder: !secret image_processing_faces
    show_boxes: true
    source:
      - entity_id: camera.office_snapshot
  - platform: deepstack_face
    ip_address: !secret deepstack_host
    port: !secret deepstack_port
    api_key: !secret deepstack_api_key
    timeout: 20
    save_file_folder: !secret image_processing_upstairs
    save_timestamped_file: true
    save_faces: true
    save_faces_folder: !secret image_processing_faces
    show_boxes: true
    source:
      - entity_id: camera.upstairs

script:
  # Process camera images
  conservatory_camera_process_image:
    alias: Conservatory Camera Process Image
    icon: mdi:camera
    description: "Send conservatory camera image for processing and post a message."
    fields:
      message:
        description: Message to post
      title:
        description: Header to the message posted.
    sequence:
      - service: script.object_process_image
        data:
          message: "{{ message }}"
          title: "{{ title }}"
          entity_id: image_processing.deepstack_object_conservatory
    mode: single
  driveway_camera_process_objects:
    alias: Driveway camera process objects
    icon: mdi:camera
    description: "Send driveway camera image for processing and post a message."
    fields:
      message:
        description: Message to post
      title:
        description: Header to the message posted.
    sequence:
      - service: script.object_process_image
        data:
          message: "{{ message }}"
          title: "{{ title }}"
          entity_id: image_processing.deepstack_object_driveway
    mode: single
  front_garden_door_bell_camera_process_image:
    alias: Front Garden Doorbell Process Camera
    icon: mdi:camera
    description: "Send front garden camera image for processing and post a message."
    fields:
      message:
        description: Message to post
      title:
        description: Header to the message posted.
    sequence:
      - service: script.send_to_home_log
        data:
          message: ":door: :camera: doorbell camera updated."
      - service: input_text.set_value
        data:
          value:
            front_door_{{ now ().year }}_{{ now ().month }}_{{ now().day }}_{{ now().hour
            }}_{{ now ().minute }}.jpg
        target:
          entity_id: input_text.latest_doorbell_photo_file_name
      - service: input_text.set_value
        entity_id: input_text.doorbell_last_video_id
        data_template:
          value: "{{ state_attr('camera.front_door', 'last_video_id') | string }}"
      - service: image_processing.scan
        target:
          entity_id: image_processing.deepstack_object_front_door
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - service: script.send_home_log_with_local_attachments
        data:
          title: Doorbell rung
          message: Doorbell image.
          filePath:
            camera/front_door/front_door_{{ now().year }}_{{ now().month }}_{{
            now().day }}_{{ now().hour }}_{{ now().minute }}.jpg
      - if:
          - condition: numeric_state
            entity_id: image_processing.deepstack_object_front_door
            above: "0"
        then:
          - service: shell_command.copy_front_door_deepstack_files
          - service: script.send_home_log_with_local_attachments
            data:
              title: "{{ title }}"
              message: "{{ message }}"
              filePath: "{{ states('input_text.latest_deepstack_front_door_file_path') }}"
          - if:
              - not:
                - condition: state
                  entity_id: group.adult_people
                  state: "home"
              - condition: template
                value_template: "{{ 'person' in state_attr('image_processing.deepstack_object_front_door','targets_found') }}"
            then:
              - service: script.send_direct_notification
                data:
                  message: >-
                    The following detected at the front door:{% for object in state_attr('image_processing.deepstack_object_front_door','targets_found') %}{% for key, value in object.items() %}{{ '\n* ' ~ key ~ ' (' ~ value ~ '%)' }}{% endfor %}{% endfor %}
                  people:
                    - person.danny
                    - person.terina
            else:
              - service: script.send_to_home_log
                data:
                  message: >-
                    The following detected at the front door:{% for object in state_attr('image_processing.deepstack_object_front_door','targets_found') %}{% for key, value in object.items() %}{{ '\n* ' ~ key ~ ' (' ~ value ~ '%)' }}{% endfor %}{% endfor %}
        else:
          - if:
              - condition: state
                entity_id: input_select.deepstack_notification_level
                state: All
            then:
              - service: script.send_to_home_log
                data:
                  message: ":white_check_mark: Nothing detected at the front door."
                  title: ":brain: Deepstack Results"
    mode: single
  kitchen_camera_process_image:
    alias: kitchen Camera Process Image
    icon: mdi:camera
    description: "Send kitchen camera image for processing and post a message."
    fields:
      message:
        description: Message to post
      title:
        description: Header to the message posted.
    sequence:
      - service: script.object_process_image
        data:
          message: "{{ message }}"
          title: "{{ title }}"
          entity_id: image_processing.deepstack_object_kitchen
    mode: single
  lounge_camera_process_objects:
    alias: Lounge camera process objects
    icon: mdi:camera
    description: "Send lounge camera image for processing and post a message."
    fields:
      message:
        description: Message to post
      title:
        description: Header to the message posted.
    sequence:
      - service: script.object_process_image
        data:
          message: "{{ message }}"
          title: "{{ title }}"
          entity_id: image_processing.deepstack_object_lounge
    mode: single
  office_camera_process_image:
    alias: Office Camera Process Image
    icon: mdi:camera
    description: "Send Office camera image for processing and post a message."
    fields:
      message:
        description: Message to post
      title:
        description: Header to the message posted.
    sequence:
      - service: script.object_process_image
        data:
          message: "{{ message }}"
          title: "{{ title }}"
          entity_id: image_processing.deepstack_object_office
    mode: single
  stairs_camera_process_image:
    alias: Stairs Camera Process Image
    icon: mdi:camera
    description: "Send stairs camera image for processing and post a message."
    fields:
      message:
        description: Message to post
      title:
        description: Header to the message posted.
    sequence:
      - service: script.object_process_image
        data:
          message: "{{ message }}"
          title: "{{ title }}"
          entity_id: image_processing.deepstack_object_upstairs
    mode: single
  object_process_image:
    alias: Process Image
    icon: mdi:camera
    description: "Generic script to process images."
    fields:
      message:
        description: Message to post
        example: example message
      title:
        description: (optional)Header to the message posted.
        example: example title
      entity_id:
        description: image_processing entity ID send to Deepstack.
        example: image_processing.deepstack_object_driveway
    variables:
      device: "{% if 'conservatory' in entity_id %}
      conservatory
      {% elif 'driveway' in entity_id %}
      driveway
      {% elif 'kitchen' in entity_id %}
      kitchen
      {% elif 'lounge' in entity_id %}
      lounge
      {% elif 'upstairs' in entity_id %}
      upstairs
      {% endif%}"
      latestImageFilePathEntityId: "{% if 'conservatory' in entity_id %}
      input_text.latest_deepstack_conservatory_file_path
      {% elif 'driveway' in entity_id %}
      input_text.latest_deepstack_driveway_file_path
      {% elif 'kitchen' in entity_id %}
      input_text.latest_deepstack_kitchen_file_path
      {% elif 'lounge' in entity_id %}
      input_text.latest_deepstack_lounge_file_path
      {% elif 'upstairs' in entity_id %}
      input_text.latest_deepstack_upstairs_file_path
      {% endif%}"
    sequence:
      - service: image_processing.scan
        target:
          entity_id: "{{ entity_id }}"
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - if:
        - condition: template
          value_template: "{{ states(entity_id) > 0}}"
        then:
          - service: script.make_latest_camera_files_public
            data:
              entity_id: entity_id
          - service: script.send_home_log_with_local_attachments
            data:
              title: "{{ title }}"
              message: "{{ message }}"
              filePath: "{{ states(latestImageFilePathEntityId) }}"
          - if:
              - not:
                - condition: state
                  entity_id: group.adult_people
                  state: "home"
              - condition: template
                value_template: "{{ 'person' in state_attr(entity_id, 'targets_found') }}"
            then:
              - service: script.send_direct_notification
                data:
                  message: >-
                    The following detected at the front door:{% for object in state_attr(entity_id, 'targets_found') %}{% for key, value in object.items() %}{{ '\n* ' ~ key ~ ' (' ~ value ~ '%)' }}{% endfor %}{% endfor %}
                  people:
                    - person.danny
                    - person.terina
            else:
              - service: script.send_to_home_log
                data:
                  message: >-
                    The following detected {{ device }}:{% for object in state_attr(entity_id, 'targets_found') %}{% for key, value in object.items() %}{{ '\n* ' ~ key ~ ' (' ~ value ~ '%)' }}{% endfor %}{% endfor %}
        else:
          - if:
              - condition: state
                entity_id: input_select.deepstack_notification_level
                state: All
            then:
              - service: script.send_to_home_log
                data:
                  message: ":white_check_mark: Nothing detected in the {{ device }}."
                  title: ":brain: Deepstack Results"
    mode: queued
    max: 10
  make_latest_camera_files_public:
    alias: Make Latest Camera Files Public
    icon: mdi:file
    fields:
      entity_id:
        description: image_processing entity ID send to Deepstack.
        example: image_processing.deepstack_object_driveway
    sequence:
      - parallel:
          - choose:
            - conditions:
                - condition: template
                  value_template: "{{ entity_id == 'image_processing.deepstack_object_conservatory' }}"
              sequence:
                - service: shell_command.copy_conservatory_deepstack_files
            - conditions:
                - condition: template
                  value_template: "{{ entity_id == 'image_processing.deepstack_object_driveway' }}"
              sequence:
                - service: shell_command.copy_driveway_deepstack_files
            - conditions:
                - condition: template
                  value_template: "{{ entity_id == 'image_processing.deepstack_object_kitchen' }}"
              sequence:
                - service: shell_command.copy_kitchen_deepstack_files
            - conditions:
                - condition: template
                  value_template: "{{ entity_id == 'image_processing.deepstack_object_lounge' }}"
              sequence:
                - service: shell_command.copy_lounge_deepstack_files
            - conditions:
                - condition: template
                  value_template: "{{ entity_id == 'image_processing.deepstack_object_office_snapshot' }}"
              sequence:
                - service: shell_command.copy_office_deepstack_files
            - conditions:
                - condition: template
                  value_template: "{{ entity_id == 'image_processing.deepstack_object_upstairs' }}"
              sequence:
                - service: shell_command.copy_upstairs_deepstack_files
            default:
              - service: script.send_to_home_log
                data:
                  message: "Trying to making camera image public but unknown camera processor {{ entity_id }}."
                  title: ":warning: Copy"
          - service: script.send_to_home_log
            data:
              message: "Making camera {{ entity_id }} image public."
              title: "Copy"
    mode: single
  # General
  turn_on_downstairs_cameras:
    alias: Turn On Downstairs Cameras
    icon: mdi:camera
    description: "Turn on camera detection for all downstairs cameras."
    sequence:
      - parallel:
          - service: script.send_to_home_log
            data:
              message: "Turning on downstairs :camera_with_flash: cameras."
          - service: script.conservatory_turn_on_camera
          - service: script.kitchen_turn_on_camera
          - service: script.lounge_turn_on_camera
          - service: script.front_garden_turn_on_camera

shell_command:
  copy_conservatory_deepstack_files: !secret copy_conservatory_deepstack_files_command
  copy_driveway_deepstack_files: !secret copy_driveway_deepstack_files_command
  copy_front_door_deepstack_files: !secret copy_front_door_deepstack_files_command
  copy_kitchen_deepstack_files: !secret copy_kitchen_deepstack_files_command
  copy_lounge_deepstack_files: !secret copy_lounge_deepstack_files_command
  copy_office_deepstack_files: !secret copy_office_deepstack_files_command
  copy_upstairs_deepstack_files: !secret copy_upstairs_deepstack_files_command
