# Created by Danny Tsang <danny@tsang.uk>
script:
  calendar_event_started:
    alias: Calendar event Started
    fields:
      entity_id:
        name: Entity ID
        description: Calendar entity ID.
        required: true
      name:
        name: Event name
        description: name of the event.
        required: true
      event_type:
        name: Event type
        description: denote if the it's the start or end of a calendar event.
      offset:
        name: Offset
        description: Time before or after the event type.
      all_day:
        name: All day
        description: if it's an all day event it will be set to true.
      location:
        name: Location
        description: Location of the event.
      start_time:
        name: Start time
        description: Date and time of the start of the event
      end_time:
        name: End time
        description: Date and time of the end of the event
    variables:
      duration: "{{ (as_timestamp(end_time)-as_timestamp(start_time))|int(0) }}"
      duration_formatted: >-
        {% set new_ts = (as_timestamp(end_time)-as_timestamp(start_time))|int(0) %}
        {{ '{:02d}:{:02d}:{:02d}'.format(new_ts // 3600, (new_ts % 3600) // 60, (new_ts % 3600) % 60) }}
      parsed_start_time: >-
        {% set dt = start_time.split('T') %}
        {{ strptime(dt[0].strip()~' '~dt[1], '%Y-%m-%d %H:%M:%S%z', none) }}
      parsed_end_time: >-
        {% set dt = end_time.split('T') %}
        {{ strptime(dt[0].strip()~' '~dt[1], '%Y-%m-%d %H:%M:%S%z', none) }}
    sequence:
      - choose:
          - conditions:
              - or:
                  - condition: template
                    value_template: "{{ all_day == false }}"
                  - condition: template
                    value_template: "{{ (as_timestamp(parsed_start_time) | timestamp_custom('%Y-%m-%d')) == (as_timestamp(parsed_end_time) | timestamp_custom('%Y-%m-%d')) }}"
              - condition: template
                value_template: "{{ location is not none }}"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: >-
                    Trigger from {{ state_attr(entity_id, 'friendly_name') }} calendar event.

                    Event: {{ name|default('N/A', true) }}

                    Event Type: {{ event_type|default('N/A', true) }}

                    Offset: {{ offset|default('N/A', true) }}

                    All Day: {{ all_day|default('N/A', true) }}

                    Location: {{ location|default('N/A', true) }}

                    Start Time: {{ start_time|default('N/A', true) }}

                    End Time: {{ end_time|default('N/A', true) }}

                    Duration: {{ duration_formatted }}
                  title: ":date: Calendar"
              - service: script.calendar_calculate_travel
                data:
                  location: "{{ location|default('', true) }}"
          - conditions:
              - or:
                  - condition: template
                    value_template: "{{ all_day == true }}"
                  - condition: template
                    value_template: "{{ (as_timestamp(parsed_start_time) | timestamp_custom('%Y-%m-%d')) != (as_timestamp(parsed_end_time) | timestamp_custom('%Y-%m-%d')) }}"
              - condition: template
                value_template: "{{ location is not none }}"
            sequence:
              - service: script.send_to_home_log
                data:
                  message: >-
                    Trigger all day event from {{ state_attr(entity_id, 'friendly_name') }} calendar.

                    Event: {{ name|default('N/A', true) }}

                    Event Type: {{ event_type|default('N/A', true) }}

                    Offset: {{ offset|default('N/A', true) }}

                    All Day: {{ all_day|default('N/A', true) }}

                    Location: {{ location|default('N/A', true) }}

                    Start Time: {{ start_time|default('N/A', true) }}

                    End Time: {{ end_time|default('N/A', true) }}

                    Duration: {{ duration_formatted }}
                  title: ":date: Calendar"
              - service: script.calendar_calculate_travel
                data:
                  location: "{{ location|default('', true) }}"
        default:
          - service: script.send_to_home_log
            continue_on_error: true
            data:
              message: >-
                Unknown trigger from {{ state_attr(entity_id, 'friendly_name') }} calendar.

                Event: {{ name|default('N/A', true) }}

                Event Type: {{ event_type|default('N/A', true) }}

                Offset: {{ offset|default('N/A', true) }}

                All Day: {{ all_day|default('N/A', true) }}

                Location: {{ location|default('N/A', true) }}

                Start Time: {{ start_time|default('N/A', true) }}

                End Time: {{ end_time|default('N/A', true) }}

                Duration: {{ duration_formatted }}
              title: ":date: Calendar"
  calendar_calculate_travel:
    alias: Calendar Travel Time
    fields:
      location:
        name: Location
        description: Location of the event.
    sequence:
      - if:
          - condition: state
            entity_id: input_boolean.enable_travel_automations
            state: "on"
        then:
          - parallel:
              - service: input_text.set_value
                data:
                  value: zone.home
                target:
                  entity_id: input_text.origin_address
              - service: input_text.set_value
                data:
                  value: "{{ location|default('', true) }}"
                target:
                  entity_id: input_text.destination_address
            alias: Set locations
          - service: homeassistant.update_entity
            data: {}
            target:
              entity_id: sensor.google_travel_time_by_car
          - service: script.send_direct_notification
            data:
              message: |-
                Origin: {{ states('sensor.origin_address') }}
                Destination: {{ states('sensor.destination_address') }}
                Journey Time: {{ state_attr('sensor.google_travel_time_by_car', 'duration') }} ({{ state_attr('sensor.google_travel_time_by_car', 'distance') }})
              title: ":date: Calendar"
              people:
                - person.danny