- id: "1589654392712"
  alias: "Utility: Unifi AP Offline"
  description: ""
  trigger:
    - entity_id: device_tracker.utility_access_point
      for: 00:05:00
      from: home
      platform: state
      to: not_home
  condition:
    - not:
        - condition: state
          entity_id: device_tracker.udm_pro
          state: unavailable
  action:
    - data:
        message: ":warning: Utility wireless access point is offline! :warning:"
      service: script.send_to_home_log
- id: "1590564595890"
  alias: "Lounge: UPS Below 5 Minutes Run time"
  description: ""
  trigger:
    - below: "301"
      entity_id: sensor.lounge_ups_battery_runtime
      platform: numeric_state
  condition:
    - condition: state
      entity_id: sensor.lounge_ups_status_data
      state: OB DISCHRG
  action:
    - service: script.send_direct_notification
      data:
        message: ":warning: Less than 5 minutes left on :battery: :warning:"
        title: ":battery: Lounge UPS"
        people:
          - person.danny
          - person.terina
  mode: single
- id: "1591705795121"
  alias: "Office: Server UPS On Battery With Less Than 5 Minutes"
  description: ""
  trigger:
    - below: "301"
      entity_id: sensor.server_ups_battery_runtime
      platform: numeric_state
  condition:
    - condition: state
      entity_id: sensor.server_ups_status_data
      state: OB DISCHRG
  action:
    - service: script.send_direct_notification
      data:
        message: ":warning: Less than 5 minutes left on :battery: battery :warning:"
        title: ":battery: Server UPS"
        people:
          - person.danny
          - person.terina
  mode: single
- id: "1594146384568"
  alias: "Conservatory: Water Detected"
  description: ""
  trigger:
    - entity_id: binary_sensor.conservatory_bucket_water
      platform: state
      to: "on"
  condition: []
  action:
    - data:
        message: ":warning: :droplet: Water detected in the conservatory :droplet: :warning:"
      service: script.send_to_home_log
  mode: single
- id: "1594148554582"
  alias: "Conservatory: Water Not Detected"
  description: ""
  trigger:
    - entity_id: binary_sensor.conservatory_bucket_water
      from: "on"
      platform: state
      to: "off"
  condition: []
  action:
    - data:
        message: Water no longer detected in the conservatory
      service: script.send_to_home_log
  mode: single
- id: "1604998439600"
  alias: "House: Water detected"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.water_sensors
      to: "on"
  condition: []
  action:
    - service: script.send_to_home_log
      data:
        message: ":warning: :droplet: Potential leak detected :droplet: :warning:"
  mode: single
- id: "1604998512525"
  alias: "House: Water Not Detected"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.water_sensors
      from: "on"
      to: "off"
  condition: []
  action:
    - service: script.send_to_home_log
      data:
        message: Potential leak has stopped
  mode: single
- id: "1613246359438"
  alias: "Office: Computer UPS On Battery With Less Than 5 Minutes"
  description: ""
  trigger:
    - below: "301"
      entity_id: sensor.computer_ups_battery_runtime
      platform: numeric_state
  condition:
    - condition: state
      entity_id: sensor.computer_ups_status_data
      state: OB DISCHRG
  action:
    - service: script.send_direct_notification
      data:
        message: ":warning: Less than 5 minutes left on :battery: battery :warning:"
        title: ":battery: PC UPS"
        people:
          - person.danny
          - person.terina
  mode: single
- id: "1613264719942"
  alias: "Office: Alarm Armed Home Mode & Motion Detected"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.office_area_motion
      to: "on"
  condition:
    - condition: state
      entity_id: alarm_control_panel.house_alarm
      state: armed_home
    - condition: state
      entity_id: group.jd_computer
      state: "off"
  action:
    - service: script.send_to_home_log
      data:
        message: ":paw_prints: Motioned detected in the office!"
  mode: single
- id: "1613264961246"
  alias: "Kitchen: Alarm Armed Home Mode & Motion Detected"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.kitchen_area_motion
      to: "on"
  condition:
    - condition: state
      entity_id: alarm_control_panel.house_alarm
      state: armed_home
    - condition: state
      entity_id: group.jd_computer
      state: "off"
  action:
    - service: script.send_to_home_log
      data:
        message: ":paw_prints: Motioned detected in the kitchen!"
  mode: single
- id: "1614692626417"
  alias: "Bathroom: Humidity Is High"
  description: ""
  trigger:
    - platform: numeric_state
      entity_id: sensor.bathroom_motion_relative_humidity
      above: "54"
      for: 00:01:00
  condition:
    - condition: state
      entity_id: binary_sensor.bathroom_window
      state: "off"
    - condition: state
      entity_id: binary_sensor.bathroom_door
      state: "off"
  action:
    - service: script.send_to_home_log
      data:
        message:
          ":bath: :droplet: :chart_with_upwards_trend: Humidity in the bathroom
          is above 55% with :door:doors and :window:windows closed."
  mode: single
- id: "1615313996827"
  alias: "Game: Counter Strike Bomb Planted"
  description: ""
  trigger:
    - platform: event
      event_type: csgo_bomb_planted
  condition: []
  action:
    - service: script.counter_strike_bomb_planted
  mode: single
- id: "1617742736231"
  alias: "Lounge: Motion Detected And No One Home"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.lounge_area_motion
      from: "off"
      to: "on"
  condition:
    - or:
        - condition: state
          entity_id: group.adult_people
          state: not_home
        - not:
            - condition: state
              entity_id: alarm_control_panel.house_alarm
              state: disarmed
    - condition: state
      entity_id: input_boolean.enable_home_presence_detection
      state: "on"
  action:
    - service: script.lounge_camera_process_objects
      data:
        title: No One Home Or Alarm Is Active
        message: Motion Detected In Lounge
  mode: queued
  max: 10
- id: "1617395256574"
  alias: "Leo's Room: Bed Occupied At Night"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.leos_bed_occupied
      to: "on"
  condition:
    - condition: state
      entity_id: cover.leos_bedroom_blinds
      state: open
    - condition: time
      after: "18:30:00"
    - condition: state
      entity_id: input_boolean.enable_leos_blind_automations
      state: "on"
    - condition: state
      entity_id: input_boolean.enable_leos_bed_sensor
      state: "on"
  action:
    - service: script.send_to_home_log
      data:
        message: ":city_sunrise: :bed: Someone is in Leo's bed. Closing blinds."
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.leos_bedroom_window
              state: "on"
          sequence:
            - service: script.send_to_home_log
              data:
                message:
                  ":warning: :wondow: Leo's bedroom window is still open. Waiting
                  until it's closed before closing blinds. :warning:"
      default:
        - service: cover.close_cover
          target:
            entity_id: cover.leos_bedroom_blinds
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.leos_bedroom_window
          to: "off"
      timeout: 03:00:00
    - service: script.send_to_home_log
      data:
        message: ":white_check_mark: :window: Leo's window closed. Closing blinds."
    - service: cover.close_cover
      target:
        entity_id: cover.leos_bedroom_blinds
  mode: single
- id: "1622973276606"
  alias: "Office: Arm Office Door"
  description: ""
  trigger:
    - platform: state
      entity_id: input_boolean.alarm_office_door
      from: "off"
      to: "on"
  condition: []
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.office_door
              state: "on"
          sequence:
            - service: script.send_to_home_log
              data:
                message:
                  ":warning: :alarm: Unable to arm office door because the door is
                  not closed. Disabling alarm."
            - service: input_boolean.turn_off
              target:
                entity_id: input_boolean.alarm_office_door
      default:
        - service: script.send_to_home_log
          data:
            message: ":bell: :door: Office door armed."
  mode: single
- id: "1622973478458"
  alias: "Office: Trigger Armed Door"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.office_door
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.alarm_office_door
      state: "on"
  action:
    - service: script.send_to_home_log
      data:
        message: ":rotating_light: :door: Office door armed and was opened:rotating_light:"
    - service: script.conservatory_camera_process_image
      data:
        title: Office door alarm triggered
        message: Office door alarm triggered.
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.alarm_office_door
  mode: queued
  max: 10
- id: "1627509008928"
  alias: Enter No Children Mode
  description: ""
  trigger:
    - platform: state
      entity_id: input_select.home_mode
      to: No Children
  condition: []
  action:
    - service: script.send_to_home_log
      data:
        message: ":repeat: Entering No Children mode."
  mode: single
- id: "1634576629865"
  alias: "NFC Tag: Scanned Locked By User"
  description: ""
  trigger:
    - platform: event
      event_type: tag_scanned
      context:
        user_id:
          - 06cbf6deafc54cf0beffa49552a396b1
          - 2df8a2a6e0be4d5d902aad2d39ed4c9b
  condition: []
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ trigger.event.data.tag_id == '47e42f4c-3ffa-463f-ae2f-ed0b97a4fe9c'}}"
          sequence:
            - service: script.send_to_home_log
              data:
                message:
                  ":door: :label: Front door tag scanned by {{ states.person|selectattr('attributes.user_id',
                  '==', trigger.event.context.user_id)|map(attribute='attributes.friendly_name')|first
                  }}."
            - service: script.nfc_front_door
        - conditions:
            - condition: template
              value_template: "{{ trigger.event.data.tag_id == '8b6d6755-b4d5-4b23-8e8b-cf224d221bb7'}}"
          sequence:
            - service: script.send_to_home_log
              data:
                message:
                  ":door: :label: Bedroom right tag scanned by {{ states.person|selectattr('attributes.user_id',
                  '==', trigger.event.context.user_id)|map(attribute='attributes.friendly_name')|first
                  }}."
            - service: script.nfc_bedroom_right
      default: []
  mode: single
- id: "1636203020481"
  alias: "Porch: Some One Leaving"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      from: "off"
      to: "on"
  condition: []
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.porch_motion_occupancy
              state: "on"
          sequence:
            - service: script.send_to_home_log
              data:
                message: ":door: Someone leaving."
        - conditions:
            - condition: state
              entity_id: binary_sensor.porch_motion_occupancy
              state: "off"
          sequence:
            - service: script.send_to_home_log
              data:
                message: ":test_tube: :door: Someone entering."
      default: []
  mode: single
- id: "1637409592193"
  alias: "Double Take: Unknown Face"
  description: ""
  trigger:
    - platform: state
      entity_id: sensor.double_take_unknown
  condition: []
  action:
    - service: script.send_home_log_with_url
      data:
        message: Unknown face detected.
        title: ":busts_in_silhouette: Stranger Detected"
        url: "{{states('input_text.double_take_url')}}/api/storage/matches/{{trigger.to_state.attributes.unknown.filename}}?box=true&token={{trigger.to_state.attributes.token}}"
  mode: queued
  max: 10
- id: "1637409592194"
  alias: "Double Take: Person Detected In Lounge"
  description: ""
  trigger:
    - platform: state
      entity_id: sensor.double_take_ashlee_lounge
      id: ashlee
    - platform: state
      entity_id: sensor.double_take_danny_lounge
      id: danny
    - platform: state
      entity_id: sensor.double_take_terina_lounge
      id: terina
  condition: []
  action:
    - choose:
        - conditions:
            - condition: trigger
              id: ashlee
          sequence:
            - service: script.send_home_log_with_url
              data:
                message: Ashlee In Lounge.
                title: ":girl: Ashlee In Lounge"
                url: "{{states('input_text.double_take_url')}}/api/storage/matches/{{trigger.to_state.attributes.match.filename}}?box=true&token={{trigger.to_state.attributes.token}}"
        - conditions:
            - condition: trigger
              id: danny
          sequence:
            - service: script.send_home_log_with_url
              data:
                message: Danny In Lounge.
                title: ":man: Danny In Lounge"
                url: "{{states('input_text.double_take_url')}}/api/storage/matches/{{trigger.to_state.attributes.match.filename}}?box=true&token={{trigger.to_state.attributes.token}}"
        - conditions:
            - condition: trigger
              id: terina
          sequence:
            - service: script.send_home_log_with_url
              data:
                message: Terina In Lounge.
                title: ":woman: Terina In Lounge"
                url: "{{states('input_text.double_take_url')}}/api/storage/matches/{{trigger.to_state.attributes.match.filename}}?box=true&token={{trigger.to_state.attributes.token}}"
      default: []
  mode: queued
  max: 10
- id: "1647094935963"
  alias: Exit Naughty Step Mode
  description: ""
  trigger:
    - platform: state
      entity_id: input_boolean.naughty_step_mode
      from: "on"
      to: "off"
  condition: []
  action:
    - service: script.send_to_home_log
      data:
        message: Exiting naught step mode.
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id:
          - input_boolean.enable_lounge_motion_triggers
          - input_boolean.enable_stairs_motion_triggers
  mode: single
- id: "1650032888798"
  alias: "Frigate: Event"
  description: ""
  trigger:
    - platform: mqtt
      topic: frigate/events
  condition: []
  action:
    - service: script.send_to_home_log
      data:
        message: "A {{trigger.payload_json['after']['label']}} was detected. id:
          {{trigger.payload_json['after']['id']}}"
    - service: script.send_home_log_with_url
      data:
        title: Frigate event
        message: A {{trigger.payload_json['after']['label']}} was detected.
        url: http://{{states('input_text.frigate_domain')}}:5000/api/frigate/notifications/{{trigger.payload_json['after']['id']}}/thumbnail.jpg?format=android
  mode: queued
- id: "1653857006776"
  alias: "Porch: Heating Turned On Check Entrances"
  description: ""
  trigger:
    - platform: state
      entity_id:
        - climate.thermostat
      attribute: hvac_action
      to: heating
      from: idle
  condition:
    - condition: state
      entity_id: climate.thermostat
      state: auto
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.front_door
              state: "on"
          sequence:
            - service: script.send_direct_notification
              data:
                message: Consider closing the front door or turning the heating off.
                title: "Heating turned on and front :door: door is open."
      default: []
  mode: single
- id: "1658933814561"
  alias: "Danny's Car: Longitude Updated"
  description: ""
  trigger:
    - platform: state
      entity_id:
        - device_tracker.435i
      attribute: longitude
  condition: []
  action:
    - service: script.send_to_home_log
      data:
        message: Longitude updated.
        title: "Danny's :car: Car"
    - service: input_number.set_value
      data:
        value: "{{ trigger.from_state }}"
      target:
        entity_id: input_number.dannys_car_previous_longitude
  mode: single
- id: "1658933814562"
  alias: "Danny's Car: Latitude Updated"
  description: ""
  trigger:
    - platform: state
      entity_id:
        - device_tracker.435i
      attribute: latitude
  condition: []
  action:
    - service: script.send_to_home_log
      data:
        message: Longitude updated.
        title: "Danny's :car: Car"
    - service: input_number.set_value
      data:
        value: "{{ trigger.from_state }}"
      target:
        entity_id: input_number.dannys_car_previous_latitude
  mode: single
- id: "1659198098255"
  alias: "House: Turn On Fake Presence"
  description: ""
  trigger:
    - platform: sun
      event: sunset
      offset: 0
    - platform: time_pattern
      hours: "17"
      minutes: /15
    - platform: time_pattern
      hours: "18"
      minutes: /15
    - platform: time_pattern
      hours: "19"
      minutes: /15
    - platform: time_pattern
      hours: "20"
      minutes: /15
    - platform: time_pattern
      hours: "21"
      minutes: /15
    - platform: time_pattern
      hours: "22"
      minutes: /15
  condition:
    - condition: state
      entity_id: alarm_control_panel.house_alarm
      state: armed_away
    - condition: state
      entity_id: group.adult_people
      state: not_home
    - condition: sun
      after: sunset
      after_offset: -02:00:00
    - or:
        - condition: template
          value_template:
            "{{ states('proximity.terina_home')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
            - 1 }}"
        - condition: template
          value_template:
            "{{ states('proximity.danny_home')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
            - 1 }}"
  action:
    - service: script.send_to_home_log
      data:
        message: Changing lights to pretend someone is at home.
    - service: script.downstairs_random_light
      data: {}
    - service: script.upstairs_random_lights
      data: {}
  mode: single
- id: "1659199066864"
  alias: "Home: Turn Off Scheduled Fake Presence"
  description: ""
  trigger:
    - platform: time
      at: "23:00:00"
  condition:
    - condition: state
      entity_id: alarm_control_panel.house_alarm
      state: armed_away
    - condition: state
      entity_id: group.adult_people
      state: not_home
    - condition: sun
      after: sunset
    - or:
        - condition: template
          value_template:
            "{{ states('proximity.terina_home')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
            - 1 }}"
        - condition: template
          value_template:
            "{{ states('proximity.danny_home')|float(0) > states('input_number.long_distance_away_from_home')|int(0)
            - 1 }}"
  action:
    - service: script.send_to_home_log
      data:
        message: Turning off all lights from faking someone at home.
    - service: script.turn_everything_off
      data: {}
  mode: single
- id: "1659390515112"
  alias: "Conservatory: Leak Detected"
  description: ""
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.conservatory_bucket_water
      from: "off"
      to: "on"
      for:
        hours: 0
        minutes: 1
        seconds: 0
  condition: []
  action:
    - service: script.send_direct_notification
      data:
        message: Leak detected
        title: Conservatory
  mode: single
- id: "1660326219450"
  alias: "Weather: Morning Check For Hot Day Forecast"
  description: ""
  trigger:
    - platform: time
      at: 09:00:00
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: input_select.home_mode
          state: Holiday
    - condition: time
      weekday:
        - fri
        - thu
        - tue
        - mon
        - wed
  action:
    - service: script.send_to_home_log
      data:
        message: Checking if hot water needs to be turned off.
        title: ":sun_small_cloud: Weather"
    - service: script.set_how_water_to_away_mode
      data: {}
  mode: single
- id: "1660326219451"
  alias: "Weather: Afternoon Check For Hot Day Forecast"
  description: ""
  trigger:
    - platform: time
      at: "14:00:00"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: input_select.home_mode
          state: Holiday
    - condition: time
      weekday:
        - fri
        - thu
        - tue
        - mon
        - wed
  action:
    - service: script.send_to_home_log
      data:
        message: Checking if hot water needs to be turned on.
        title: ":sun_small_cloud: Weather"
    - service: script.set_how_water_to_home_mode
      data: {}
  mode: single
- id: "1660894232444"
  alias: "Front Garden: Below Direct Sun Light"
  description: ""
  trigger:
    - platform: numeric_state
      entity_id: sensor.front_garden_motion_illuminance_lux
      for:
        hours: 0
        minutes: 10
        seconds: 0
      below: input_number.close_blinds_brightness_threshold
  condition:
    - condition: state
      entity_id: sensor.season
      state: summer
  action:
    - service: script.send_to_home_log
      data:
        message:
          Sun light has fallen below {{ states('input_number.close_blinds_brightness_threshold')
          }} ({{ states('sensor.front_garden_motion_illuminance_lux', with_unit=True)
          }}). Opening office blinds/curtains.
        title: Front Garden
    - service: cover.set_cover_position
      data:
        position: 25
      target:
        entity_id: cover.office_blinds
    - if:
        - condition: numeric_state
          entity_id: cover.bedroom_blinds
          attribute: current_position
          below: input_number.blind_close_position_threshold
        - condition: sun
          before: sunset
        - condition: state
          entity_id: binary_sensor.bedroom_tv_powered_on
          state: "off"
      then:
        - service: cover.open_cover
          target:
            entity_id: cover.bedroom_blinds
    - if:
        - condition: numeric_state
          entity_id: cover.ashlees_bedroom_blinds_cover
          attribute: current_position
          below: input_number.blind_close_position_threshold
        - condition: time
          before: input_datetime.childrens_bed_time
      then:
        - service: cover.open_cover
          target:
            entity_id: cover.ashlees_bedroom_blinds_cover
  mode: single
- id: "1660894232445"
  alias: "Back Garden: Below Direct Sun Light"
  description: ""
  trigger:
    - platform: numeric_state
      entity_id: sensor.back_garden_motion_illuminance_lux
      for:
        hours: 0
        minutes: 10
        seconds: 0
      below: input_number.close_blinds_brightness_threshold
  condition: []
  action:
    - service: script.send_to_home_log
      data:
        message:
          Sun light has fallen below {{ states('input_number.close_blinds_brightness_threshold')
          }} ({{ states('sensor.back_garden_motion_illuminance') }}){{ state_attr('sensor.back_garden_motion_illuminance',
          'unit_of_measurement') }}. Opening blinds/curtains.
        title: Back Garden
    - if:
        - condition: numeric_state
          entity_id: cover.bedroom_blinds
          attribute: current_position
          below: input_number.blind_close_position_threshold
        - condition: time
          before: input_datetime.childrens_bed_time
      then:
        - service: cover.open_cover
          target:
            entity_id: cover.leos_bedroom_blinds
    - if:
        - condition: numeric_state
          entity_id: cover.ashlees_bedroom_blinds_cover
          attribute: current_position
          below: input_number.blind_close_position_threshold
        - condition: sun
          before: sunset
      then:
        - service: cover.open_cover
          target:
            entity_id: cover.bathroom_blinds
  mode: single
- id: "1664657264986"
  alias: "Home Assistant: Update Available"
  description: ""
  trigger:
    - platform: state
      entity_id:
        - update.home_assistant_core_update
      from: "off"
      to: "on"
  condition: []
  action:
    - choose:
        - conditions:
            - not:
                - condition: state
                  entity_id: input_select.home_assistant_automatic_upgrade
                  state: Disabled
          sequence:
            - service: script.send_actionable_notification_with_2_buttons
              data:
                message:
                  Update from {{ state_attr('update.home_assistant_core_update',
                  'installed_version') }} to {{ state_attr('update.home_assistant_core_update',
                  'latest_version') }}?
                title: Home Assistant
                people:
                  - person.danny
                action1_title: "Yes"
                action1_name: update_home_assistant
                action2_title: "No"
                action2_name: ignore
      default: []
  mode: single
- id: "1664827040573"
  alias: "Attic: Lights On"
  description: ""
  trigger:
    - platform: state
      entity_id:
        - switch.attic_lights
      to: "on"
      for:
        hours: 0
        minutes: 15
        seconds: 0
  condition: []
  action:
    - service: script.send_actionable_notification_with_2_buttons
      data:
        message: Lights have been on for 15 minutes. Turn off?
        title: Attic
        people:
          - person.danny
          - person.terina
        action1_title: "Yes"
        action1_name: switch_off_attic_lights
        action2_title: "No"
        action2_name: ignore
  mode: single
- id: "1674478124534"
  alias: "Conservatory: Cold Temperature"
  description: ""
  trigger:
    - platform: numeric_state
      entity_id: sensor.conservatory_area_mean_temperature
      below: 3
  condition: []
  action:
    - service: climate.set_preset_mode
      data:
        preset_mode: boost
    - service: script.send_to_home_log
      data:
        message: Conservatory fell below 3c. Boosting central heating.
  mode: single
- id: "1674916813112"
  alias: "Bedroom: Lamps Off And Stairs Light On"
  description: ""
  trigger:
    - platform: state
      entity_id:
        - light.bedroom_lamps
      from: "on"
      to: "off"
  condition:
    - condition: or
      conditions:
        - condition: state
          entity_id: light.stairs
          state: "on"
        - condition: state
          entity_id: light.stairs_2
          state: "on"
  action:
    - parallel:
        - service: script.send_to_home_log
          data:
            message: Bedroom light turned off. Turning stairs lights off.
            title: ":bed: Bedroom"
        - service: scene.turn_on
          data:
            transition: 2
          target:
            entity_id: scene.stairs_light_off
  mode: single
- id: "1678271646644"
  alias: "HVAC: Lounge Radiator Below Target Temperature"
  description: ""
  trigger:
    - platform: numeric_state
      entity_id: sensor.lounge_radiator_temperature
      for:
        hours: 0
        minutes: 1
        seconds: 0
      below: input_number.lounge_radiator_heating_threshold
  condition: []
  action:
    - service: script.send_direct_notification
      data:
        message: Radiator to call for heat.
        title: ":couch_and_lamp: Lounge"
        people:
          - person.danny
  mode: single
- id: "1678271646645"
  alias: "HVAC: Office Radiator Below Target Temperature"
  description: ""
  trigger:
    - platform: numeric_state
      entity_id: sensor.office_radiator_temperature
      for:
        hours: 0
        minutes: 1
        seconds: 0
      below: input_number.office_radiator_heating_threshold
  condition: []
  action:
    - service: script.send_direct_notification
      data:
        message: Radiator to call for heat.
        title: ":office: Office"
        people:
          - person.danny
  mode: single
