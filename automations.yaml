- id: "1581867286886"
  alias: "People: Danny Arrives Home And It's Dark"
  description: ""
  trigger:
    - entity_id: person.danny
      from: not_home
      platform: state
      to: home
  condition:
    - condition: state
      entity_id: input_boolean.enable_home_presence_detection
      state: "on"
    - condition: numeric_state
      entity_id: sensor.lounge_motion_light_level
      below: "55"
  action:
    - scene: scene.lounge_lights
    - scene: scene.kitchen_lights_on_2
    - data:
        message:
          ":crescent_moon: :house: :running: :bulb: Danny arrived home and it's
          dark so turning on the lights."
      service: script.post_to_home_log
  mode: single
- id: "1582406380123"
  alias: "Timed: Turn Off Downstairs Lights at 2am"
  description: ""
  trigger:
    - at: 02:00:00
      platform: time
  condition: []
  action:
    - scene: scene.turn_off_downstairs_lights
  mode: single
- id: "1582456019025"
  alias: Turn Off House When Danny Leaves
  description: ""
  trigger:
    - entity_id: person.danny
      from: home
      platform: state
      to: not_home
  condition:
    - condition: state
      entity_id: person.terina
      state: not_home
  action:
    - scene: scene.turn_off_downstairs_lights
    - scene: scene.office_lights_off
    - data:
        message:
          "':running: :house: Danny has left the house and no one is home. Turning
          off lights.'"
      service: script.post_to_home_log
- id: "1582456025977"
  alias: Turn Off Lights When Terina Leaves
  description: ""
  trigger:
    - entity_id: person.terina
      from: home
      platform: state
      to: not_home
  condition:
    - condition: state
      entity_id: person.danny
      state: not_home
  action:
    - scene: scene.turn_off_downstairs_lights
    - scene: scene.office_lights_off
    - data:
        message:
          ":house: :dancer: Terina has left the house and no one is home. Turning
          off lights."
      service: script.post_to_home_log
- id: "1582754128581"
  alias: Terina Arrives Home
  description: ""
  trigger:
    - entity_id: person.terina
      from: not_home
      platform: state
      to: home
  condition:
    - condition: template
      value_template:
        '{{ state_attr("sensor.lounge_motion_light_level","lightlevel")
        < 55 }}'
  action:
    - scene: scene.lounge_lights
    - scene: scene.kitchen_lights_on_2
    - data:
        message:
          ":crescent_moon: :dancer: :house: :bulb: Terina arrived home and its
          dark so turning on the lights."
      service: script.post_to_home_log
- id: "1582754236859"
  alias: "Downstairs: Turn On Lights At Night When Terina Is Home"
  description: ""
  trigger:
    - platform: template
      value_template:
        '{{ state_attr("sensor.conservatory_motion_sensor_light_level","dark")
        == True }}'
  condition:
    - condition: state
      entity_id: person.terina
      state: home
  action:
    - scene: scene.lounge_lights
    - scene: scene.kitchen_lights_on_2
- id: "1584277767373"
  alias: "Office: No Motion Detected And Computer Is Off"
  description: ""
  trigger:
    - entity_id: group.office_motion
      for: 00:06:00
      platform: state
      to: "off"
    - platform: state
      entity_id: input_boolean.enable_office_motion_trigger
      to: "on"
  condition:
    - condition: or
      conditions:
        - condition: state
          entity_id: group.jd_computer
          state: not_home
  action:
    - data:
        message:
          ":no_pedestrians: :bulb: No motion detected in the office for 6 minutes
          and :computer: is not connected. Turning office and desk lights off."
      service: script.post_to_home_log
    - scene: scene.office_turn_off_all_lights
  mode: single
- id: "1587044886886"
  alias: "Office: No Motion Detected And Computer Is On"
  description: ""
  trigger:
    - entity_id: group.office_motion
      for: 00:10:00
      platform: state
      to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.enable_office_motion_trigger
      state: "on"
  action:
    - service: script.post_to_home_log
      data:
        message:
          ":no_pedestrians: No motion detected in the office for 10 minutes and
          :computer: is connected. Turning office light off."
    - scene: scene.office_main_light_off
  mode: single
- id: "1587833877434"
  alias: "Conservatory: Door Open At Night"
  description: ""
  trigger:
    - event: sunset
      platform: sun
  condition:
    - condition: state
      entity_id: binary_sensor.conservatory_door
      state: "on"
  action:
    - data:
        message: "Conservatory :door: is on open and it's dark :full_moon:"
      service: script.post_to_home_log
- id: "1589026420341"
  alias: "Alarm: Triggered"
  description: ""
  trigger:
    - entity_id: alarm_control_panel.stevenage_alarm
      platform: state
      to: burglar-alarm
  condition: []
  action:
    - condition: state
      entity_id: input_boolean.enable_slack_notifications
      state: "on"
    - data:
        data:
          attachments:
            - color: "#a51018"
              fields:
                - short: false
                  title: Priority
                  value: High
              text: Ring alarm has been triggered
              title: ":warning: :bell: :mega:"
        message: "@danny @terina"
        target: "#home_log #general"
      service: notify.slack_notify
  mode: single
- id: "1589654262959"
  alias: "Office: Chromecast Offline"
  description: ""
  trigger:
    - entity_id: device_tracker.chromecast_ultra
      for: 00:05:00
      platform: state
      to: not_home
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: device_tracker.unifi_security_gateway
          state: unavailable
  action:
    - data:
        message: ":warning: Office Chromecast is offline! :warning:"
      service: script.post_to_home_log
- id: "1589654316361"
  alias: "Bedroom: Chromecast Offline"
  description: ""
  trigger:
    - entity_id: device_tracker.chromecast_bedroom
      for: 00:05:00
      platform: state
      to: not_home
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: device_tracker.unifi_security_gateway
          state: unavailable
  action:
    - data:
        message: ":warning: Bedroom Chromecast is offline! :warning:"
      service: script.post_to_home_log
- id: "1589654392712"
  alias: "Utility: Unifi AP Offline"
  description: ""
  trigger:
    - entity_id: device_tracker.utility
      for: 00:05:00
      from: home
      platform: state
      to: not_home
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: device_tracker.unifi_security_gateway
          state: unavailable
  action:
    - data:
        message: ":warning: Utility wireless access point is offline! :warning:"
      service: script.post_to_home_log
- id: "1589654509374"
  alias: "Lounge: Unifi AP Offline"
  description: ""
  trigger:
    - entity_id: device_tracker.lounge
      for: 00:05:00
      from: home
      platform: state
      to: not_home
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: device_tracker.unifi_security_gateway
          state: unavailable
  action:
    - data:
        message: ":warning: Lounge wireless access point is offline! :warning:"
      service: script.post_to_home_log
- id: "1590564041899"
  alias: "Lounge: UPS On Battery"
  description: ""
  trigger:
    - entity_id: sensor.lounge_ups_status_data
      platform: state
      to: OB DISCHRG
  condition: []
  action:
    - data:
        message: ":warning: :battery: Lounge UPS is running on battery :battery: :warning:"
      service: script.post_to_home_log
    - data:
        message:
          ":warning: :battery: Lounge UPS is running on battery mins left :battery:
          :warning:"
      service: script.post_to_direct_notification
  mode: single
- id: "1590564595890"
  alias: "Lounge: UPS Below 5 Minutes Run time"
  description: ""
  trigger:
    - below: "301"
      entity_id: sensor.lounge_ups_battery_runtime
      platform: numeric_state
  condition:
    - condition: state
      entity_id: sensor.lounge_ups_status_data
      state: OB DISCHRG
  action:
    - data:
        message:
          ":warning: :battery: Lounge UPS battery has less than 5 minutes left
          :battery: :warning:"
      service: script.post_to_home_log
    - data:
        message:
          ":warning: :battery: Lounge UPS battery has less than 5 minutes left
          :battery: :warning:"
      service: script.post_to_direct_notification
  mode: single
- id: "1591705427768"
  alias: "Office: Server UPS On Battery"
  description: ""
  trigger:
    - entity_id: sensor.server_ups_status_data
      platform: state
      to: OB DISCHRG
  condition: []
  action:
    - data:
        message:
          ":warning: :battery: Server UPS is running on battery with less than
          5 minutes left :battery: :warning:"
        target: "#general"
      service: notify.slack_notify
    - data:
        message:
          ":warning: :battery: Server UPS is running on battery with less than
          5 minutes left :battery: :warning:"
      service: script.post_to_direct_notification
  mode: single
- id: "1591705795121"
  alias: "Office: Server UPS On Battery With Less Than 5 Minutes"
  description: ""
  trigger:
    - below: "301"
      entity_id: sensor.server_ups_battery_runtime
      platform: numeric_state
  condition:
    - condition: state
      entity_id: sensor.server_ups_status_data
      state: OB DISCHRG
  action:
    - data:
        message:
          ":warning: :battery: Server UPS battery has less than 5 minutes left
          :battery: :warning:"
      service: script.post_to_home_log
    - data:
        message:
          ":warning: :battery: Server UPS battery has less than 5 minutes left
          :battery: :warning:"
        target: "#general"
      service: script.post_to_direct_notification
  mode: single
- id: "1591963855737"
  alias: "Lounge: UPS Unavailable"
  description: ""
  trigger:
    - entity_id: sensor.lounge_ups_status_data
      platform: state
      to: unavailable
  condition: []
  action:
    - data:
        message:
          ":warning: :battery: Lounge UPS battery is not connected :battery:
          :warning:"
      service: script.post_to_home_log
- id: "1591963905748"
  alias: "Office: UPS Unavailable"
  description: ""
  trigger:
    - entity_id: sensor.server_ups_status_data
      platform: state
      to: unavailable
  condition: []
  action:
    - data:
        message:
          ":warning: :battery: Server UPS battery is not connected :battery:
          :warning:"
      service: script.post_to_home_log
  mode: single
- id: "1594146384568"
  alias: "Conservatory: Water Detected"
  description: ""
  trigger:
    - entity_id: binary_sensor.conservatory_water
      platform: state
      to: "on"
  condition: []
  action:
    - data:
        message: ":warning: :droplet: Water detected in the conservatory :droplet: :warning:"
      service: script.post_to_home_log
- id: "1594148554582"
  alias: "Conservatory: Water Not Detected"
  description: ""
  trigger:
    - entity_id: binary_sensor.conservatory_water
      from: "on"
      platform: state
      to: "off"
  condition: []
  action:
    - data:
        message: Water no longer detected in the conservatory
      service: script.post_to_home_log
- id: "1594554327310"
  alias: "People: Everyone Left And House Is Not Locked"
  description: ""
  trigger:
    - entity_id: group.all_people
      for: 00:02:00
      platform: state
      to: not_home
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: device_tracker.unifi_security_gateway
          state: unavailable
    - condition: state
      entity_id: group.alarmed_doors_and_windows
      state: "on"
    - condition: state
      entity_id: input_boolean.enable_home_presence_detection
      state: "on"
  action:
    - service: script.post_to_direct_notification
      data:
        message:
          ":warning: :door: :window: The following entrances are still open:
          {% for entity in state_attr('group.alarmed_doors_and_windows','entity_id')
          %}{% if states(entity) == 'on' %}{{ '* ' ~ state_attr(entity, 'friendly_name')
          }} {% endif %}{% endfor %}"
        title: No one is home and couldn't turn on the alarm
    - service: script.post_to_direct_notification
      data:
        message:
          ":warning: :door: :window: The following entrances are still open:
          {% for entity in state_attr('group.alarmed_doors_and_windows','entity_id')
          %}{% if states(entity) == 'on' %}{{ '* ' ~ state_attr(entity, 'friendly_name')
          }} {% endif %}{% endfor %}"
        title: No one is home and couldn't turn on the alarm
  mode: single
- id: "1595678900777"
  alias: "Utility: Freezer Door Closed"
  description: ""
  trigger:
    - entity_id: binary_sensor.freezer_contact
      from: "on"
      platform: state
      to: "off"
  condition: []
  action:
    - data:
        message: ":door: :snowflake: Freezer door closed"
      service: script.post_to_home_log
  mode: single
- id: "1595679010792"
  alias: "Utility: Freezer Open For A Long Period Of Time"
  description: ""
  trigger:
    - entity_id: binary_sensor.freezer_contact
      for: 00:04:00
      from: "off"
      platform: state
      to: "on"
  condition: []
  action:
    - service: script.post_to_direct_notification
      data:
        message:
          ":warning: :door: :snowflake: Freezer door has been open for more than
          4 minutes!"
    - data:
        message:
          ":warning: :door: :snowflake: Freezer door has been open for more than
          4 minutes!"
      service: script.post_to_home_log
  mode: single
- id: "1600719083284"
  alias: Test2
  description: ""
  trigger:
    - platform: time
      at: "12:00:00"
  condition: []
  action:
    - service: notify.mobile_app_dannys_phone
      data:
        message: 🔔 Alarm is on and turning off devices.
        title: 🏃‍♂️🏃‍♀️🏡 No one is home
        data:
          actions:
            - title: Disarm
              action: disarm
            - title: Leave On
              action: leave_on
            - title: Disarm & Leave On
              action: disarm_leave_on
    - service: notify.mobile_app_terina_s_phone
      data:
        message: 🔔 Alarm is on and turning off devices.
        title: 🏃‍♂️🏃‍♀️🏡 No one is home
        data:
          actions:
            - title: Disarm
              action: disarm
            - title: Leave On
              action: leave_on
            - title: Disarm & Leave On
              action: disarm_leave_on
    - wait_for_trigger:
        - platform: event
          event_type: mobile_app_notification_action
      timeout: "60"
      continue_on_timeout: false
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ wait.trigger.event.data.action == 'disarm' }}"
          sequence:
            - service: script.post_to_home_log
              data:
                message: "TEST: Mobile action: disarm"
        - conditions:
            - condition: template
              value_template: "{{ wait.trigger.event.data.action == 'leave_on' }}"
          sequence:
            - service: script.post_to_home_log
              data:
                message: "TEST: Mobile action: leave on"
        - conditions:
            - condition: template
              value_template:
                "{{ wait.trigger.event.data.action == 'disarm_leave_on'
                }}"
          sequence:
            - service: script.post_to_home_log
              data:
                message: "TEST: Mobile action: disarm and leave on"
      default: []
  mode: single
- id: "1604998439600"
  alias: "House: Water detected"
  description: ""
  trigger:
    - platform: state
      entity_id: group.water_sensors
      to: "on"
  condition: []
  action:
    - service: script.post_to_home_log
      data:
        message: ":warning: :droplet: Potential leak detected :droplet: :warning:"
  mode: single
- id: "1604998512525"
  alias: "House: Water Not Detected"
  description: ""
  trigger:
    - platform: state
      entity_id: group.water_sensors
      from: "on"
      to: "off"
  condition: []
  action:
    - service: script.post_to_home_log
      data:
        message: Potential leak has stopped
  mode: single
- id: "1605924680077"
  alias: "Ashlee's Room: Turn Off Night Light At Sunrise"
  description: ""
  trigger:
    - platform: sun
      event: sunrise
  condition:
    - condition: state
      entity_id: switch.night_light
      state: "on"
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.ashlees_lamp
    - service: script.post_to_home_log
      data:
        message: :sunrise:. Turn off night light
  mode: single
- id: "1606256309890"
  alias: "Office: Computer Turned Off"
  description: ""
  trigger:
    - platform: state
      entity_id: group.jd_computer
      for: 00:10:00
      to: not_home
      from: home
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: device_tracker.unifi_security_gateway
          state: unavailable
  action:
    - service: script.post_to_home_log
      data:
        message: ":computer: :tv: Computer turned off for more than 10 minutes."
    - scene: scene.office_turn_off_desk_light
    - service: script.post_to_home_log
      data:
        messsage: Turned off desk lights.
    - service: switch.turn_off
      target:
        entity_id: switch.goxlr
    - service: script.post_to_home_log
      data:
        message:
          ":computer: :tv: Computer turned off for more than 10 minutes. Turned
          off goXLR"
    - service: script.office_turn_off_backup_drive
  mode: single
- id: "1608655663801"
  alias: "3D Printer: Errored"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.octoprint_printing_error
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.enable_3d_printer_automations
      state: "on"
  action:
    - service: script.post_to_home_log
      data:
        title: 3D printer error
        message: ":warning: :printer: 3D printer has encountered an error :x: :warning:"
    - service: script.post_direct_message_to_danny
      data:
        title: 3D printer error
        message: ":warning: :printer: 3D printer has encountered an error :x: :warning:"
  mode: single
- id: "1610388192224"
  alias: "Lounge: TV Turned On"
  description: ""
  trigger:
    - platform: numeric_state
      entity_id: switch.tv_plug
      above: "35"
      attribute: current_power_w
  condition: []
  action:
    - service: script.post_direct_message_to_danny
      data:
        message: TV turned on.
  mode: single
- id: "1610409803685"
  alias: "Lounge: TV Turned Off 2"
  description: ""
  trigger:
    - platform: numeric_state
      entity_id: switch.tv_plug
      attribute: current_power_w
      for: 00:10:00
      below: "35"
  condition:
    - condition: state
      entity_id: group.lounge_lights
      state: "on"
    - condition: state
      entity_id: group.lounge_motion
      state: "off"
    - condition: template
      value_template:
        " {{ (as_timestamp(now())-as_timestamp(states.group.lounge_motion.last_updated))
        > 300 }}"
  action:
    - service: script.post_to_home_log
      data:
        message: TV turned off for 10 minutes. Turning lounge lights off.
    - scene: scene.lounge_lights_off
  mode: single
- id: "1611063957341"
  alias: "Lounge: Server Fan Running Longer Than 1 Hour"
  description: ""
  trigger:
    - platform: state
      entity_id: switch.server_fan
      to: "on"
      for: 01:00:00
  condition: []
  action:
    - service: script.post_to_home_log
      data:
        message:
          Server fan has been running for more than 1 hour. Consider turning
          Fan off.
    - service: script.post_direct_message_to_danny
      data:
        message:
          Server fan has been running for more than 1 hour. Consider turning
          Fan off.
  mode: single
- id: "1611094285340"
  alias: "Calendar: Terina WFH"
  description: ""
  trigger:
    - platform: state
      entity_id: calendar.family
      attribute: all_day
      to: "on"
  condition:
    - condition: state
      entity_id: calendar.family
      state: Terina WFH
      attribute: message
  action:
    - service: script.post_direct_message_to_danny
      data:
        title: Test Terina WFH
        message: Terina WFH Calendar event.
  mode: single
- id: "1611931052908"
  alias: "Porch: Front Door Open Indicator"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: group.all_people
      state: home
  action:
    - service: script.post_to_home_log
      data:
        message:
          ":people_holding_hands: Someone is home, notifying front :door: door
          is open"
    - service: script.front_door_open_notification
      data: {}
  mode: single
- id: "1611931640441"
  alias: "Porch: Front Door Closed"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      from: "on"
      to: "off"
  condition: []
  action:
    - service: script.post_to_home_log
      data:
        message: ":door: Front door closed."
    - service: script.front_door_closed_notification
      data: {}
  mode: single
- id: "1613246249488"
  alias: "Office: Computer UPS On Battery"
  description: ""
  trigger:
    - entity_id: sensor.computer_ups_status_data
      platform: state
      to: OB DISCHRG
  condition: []
  action:
    - data:
        message:
          ":warning: :battery: Server UPS is running on battery with less than
          5 minutes left :battery: :warning:"
        target: "#general"
      service: notify.slack_notify
    - data:
        message:
          ":warning: :battery: Server UPS is running on battery with less than
          5 minutes left :battery: :warning:"
      service: script.post_to_direct_notification
  mode: single
- id: "1613246359438"
  alias: "Office: Computer UPS On Battery With Less Than 5 Minutes"
  description: ""
  trigger:
    - below: "301"
      entity_id: sensor.computer_ups_status_data
      platform: numeric_state
  condition:
    - condition: state
      entity_id: sensor.computer_ups_status_data
      state: OB DISCHRG
  action:
    - data:
        message:
          ":warning: :battery: Server UPS battery has less than 5 minutes left
          :battery: :warning:"
      service: script.post_to_home_log
    - data:
        message:
          ":warning: :battery: Server UPS battery has less than 5 minutes left
          :battery: :warning:"
        target: "#general"
      service: script.post_to_direct_notification
  mode: single
- id: "1613264719942"
  alias: "Office: Alarm Armed Home Mode & Motion Detected"
  description: ""
  trigger:
    - platform: state
      entity_id: group.office_motion
      to: "on"
  condition:
    - condition: state
      entity_id: alarm_control_panel.stevenage_alarm
      state: armed_home
    - condition: state
      entity_id: group.jd_computer
      state: "off"
  action:
    - service: script.post_to_home_log
      data:
        message: ":paw_prints: Motioned detected in the office!"
  mode: single
- id: "1613264961246"
  alias: "Kitchen: Alarm Armed Home Mode & Motion Detected"
  description: ""
  trigger:
    - platform: state
      entity_id: group.kitchen_motion
      to: "on"
  condition:
    - condition: state
      entity_id: alarm_control_panel.stevenage_alarm
      state: armed_home
    - condition: state
      entity_id: group.jd_computer
      state: "off"
  action:
    - service: script.post_to_home_log
      data:
        message: ":paw_prints: Motioned detected in the kitchen!"
  mode: single
- id: "1613695680298"
  alias: "Bathroom: Light Override Dim"
  description: ""
  trigger:
    - platform: state
      entity_id: input_boolean.bathroom_light_override
      to: "on"
      from: "off"
      for: 00:10:00
  condition: []
  action:
    - service: script.post_to_home_log
      data:
        message: ":bathtub: :bulb: :low_brightness: Dimming bathroom :bulb: lights."
    - scene: scene.bathroom_dim_lights
  mode: single
- id: "1613695788304"
  alias: "Bathroom: Light Override Turn Off"
  description: ""
  trigger:
    - platform: state
      entity_id: input_boolean.bathroom_light_override
      to: "on"
      for: 00:11:00
  condition: []
  action:
    - service: script.post_to_home_log
      data:
        message: "Turning :bathtub: bathroom :bulb: light off."
    - scene: scene.bathroom_turn_off_light
    - service: input_boolean.turn_off
      data: {}
      entity_id: input_boolean.bathroom_light_override
  mode: single
- id: "1613955443909"
  alias: "Stairs: Dark, Leo's Door Closed, After Midnight And Motion Detected"
  description: ""
  trigger:
    - platform: state
      entity_id: group.upstairs_motion
      from: "off"
      to: "on"
  condition:
    - condition: time
      after: 00:00:00
      before: 07:00:00
    - below: "5"
      condition: numeric_state
      entity_id: sensor.stairs_motion_light_level
    - condition: state
      entity_id: input_boolean.enable_stairs_motion_trigger
      state: "on"
  action:
    - scene: scene.landing_dim_light
    - data:
        message:
          ":door: :low_brightness: Motion detected on the landing and it's dark.
          Turning stairs lights on 10%"
      service: script.post_to_home_log
  mode: single
- id: "1614033445487"
  alias: "Porch: Front Door Opened Once For More than 20 seconds"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      to: "on"
      from: "off"
      for: 00:00:20
  condition:
    - condition: numeric_state
      entity_id: counter.front_door
      below: "2"
  action:
    - service: script.post_to_home_log
      data:
        message:
          ':door: :abacus: Front door has been opened for more than 20 secs.
          Resetting counter  from {{ states("counter.front_door") }} to 0'
    - service: counter.reset
      data: {}
      entity_id: counter.front_door
- id: "1614285576722"
  alias: Sleep As Android
  description: ""
  trigger:
    - platform: webhook
      webhook_id: sleep_as_android
  condition: []
  action:
    - service: input_text.set_value
      entity_id: input_text.sleep_as_android
      data:
        value: "{{ trigger.json.event }}"
    - service: script.post_to_home_log
      data:
        message: Sleep as Android has changed to {{ trigger.json.event }}
  mode: queued
  max: 10
- id: "1614555883547"
  alias: "Office: Toggle Key Light"
  description: ""
  trigger:
    - platform: webhook
      webhook_id: keylight_toggle
  condition: []
  action:
    - service: script.post_to_home_log
      data:
        message: ":bulb: Toggle Key light"
    - service: light.toggle
      data: {}
      target:
        entity_id: light.elgato_key_light_left
  mode: single
- id: "1614692626417"
  alias: "Bathroom: Humidity Is High"
  description: ""
  trigger:
    - platform: numeric_state
      entity_id: sensor.bathroom_motion_relative_humidity
      above: "54"
      for: 00:01:00
  condition:
    - condition: state
      entity_id: binary_sensor.bathroom_window
      state: "off"
    - condition: state
      entity_id: binary_sensor.bathroom_door
      state: "off"
  action:
    - service: script.post_to_home_log
      data:
        message:
          ":bath: :droplet: :chart_with_upwards_trend: Humidity in the bathroom
          is above 55% with :door:doors and :window:windows closed."
  mode: single
- id: "1588856667889"
  alias: "MagicMirror: Turn Off Based On Time During Weekday"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.stairs_motion
      to: "off"
      for: 00:05:00
      from: "on"
  condition:
    - condition: time
      after: 09:00:00
      before: "17:30:00"
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
    - condition: state
      entity_id: input_boolean.enable_magic_mirror_automations
      state: "on"
    - condition: state
      entity_id: input_boolean.enable_stairs_motion_trigger
      state: "on"
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.magic_mirror_screen
    - data:
        message:
          ":no_pedestrians: :mirror: Turning off Magic Mirror based on time and
          no motion nearby."
      service: script.post_to_home_log
  mode: single
- id: "1615211009087"
  alias: "Bedroom: Ashlee's Bedroom Door Opens Warning"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.ashlees_door
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: group.bedroom_desk_lights
      state: "on"
  action:
    - data:
        title: Close bedroom blinds
        message:
          ":girl: :door: Ashlee's door opened and bedroom light is on. Sending
          warning."
      service: script.post_to_home_log
    - service: script.bedroom_ashlees_door_opened_notification
  mode: single
- id: "1615224190495"
  alias: "Porch: Front Door Closed For More than 20 seconds"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door
      to: "off"
      from: "on"
      for: 00:00:20
  condition: []
  action:
    - service: script.post_to_home_log
      data:
        message:
          ':door: :abacus: Front  door has been closed for more than 20 secs.
          Resetting counter  from {{ states("counter.front_door") }} to 0'
    - service: counter.reset
      target:
        entity_id: counter.front_door
  mode: single
- id: "1615313996827"
  alias: "Game: Counter Strike Bomb Planted"
  description: ""
  trigger:
    - platform: event
      event_type: csgo_bomb_planted
  condition: []
  action:
    - service: script.counter_strike_bomb_planted
  mode: single
- id: "1616103854416"
  alias: "Deepstack: Object detected"
  description: ""
  trigger:
    - platform: event
      event_type: deepstack.object_detected
      event_data: {}
  condition: []
  action:
    - service: notify.mobile_app_dannys_phone
      data:
        data:
          attachment:
            url: https://{{ trigger.event.data.confidence }}
            content-type: png
            hide-thumbnail: false
  mode: single
- id: "1617742736231"
  alias: "Lounge: Motion Detected And No One Home"
  description: ""
  trigger:
    - platform: state
      entity_id: group.lounge_motion
      from: "off"
      to: "on"
  condition:
    - condition: or
      conditions:
        - condition: state
          entity_id: group.all_people
          state: not_home
        - condition: not
          conditions:
            - condition: state
              entity_id: alarm_control_panel.stevenage_alarm
              state: disarmed
    - condition: state
      entity_id: input_boolean.enable_home_presence_detection
      state: "on"
  action:
    - service: script.lounge_camera_process_objects
      data:
        title: No One Home Or Alarm Is Active
        message: Motion Detected In Lounge
  mode: single
- id: "1618158730212"
  alias: "Shed: Door Opened"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.shed_door
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.enable_slack_notifications
      state: "on"
  action:
    - service: script.post_to_home_log
      data:
        message: ":door: :hut: Shed door opened."
  mode: single
- id: "1618158789152"
  alias: "Shed: Door Closed"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.shed_door
      from: "on"
      to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.enable_slack_notifications
      state: "on"
  action:
    - service: script.post_to_home_log
      data:
        message: ":door: :hut: Shed door closed."
  mode: single
- id: "1618158998129"
  alias: "Shed: Motion Detected When Door Is Closed"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.shed_motion
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.shed_door
      state: "off"
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.enable_slack_notifications
              state: "on"
          sequence:
            - service: script.post_to_home_log
              data:
                message:
                  ":paw_prints: :hut: Motion detected in the shed and the door is
                  shut."
      default: []
    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.enable_slack_direct_messages
              state: "on"
          sequence:
            - service: script.post_to_direct_notification
              data:
                title: Motion detected in shed and door is closed
                message:
                  ":paw_prints: :hut: Motion detected in the shed and the door is
                  shut."
      default: []
  mode: single
- id: "1595524992208"
  alias: "People: No One Home And Locked"
  description: ""
  trigger:
    - entity_id: group.all_people
      for: 00:02:00
      platform: state
      to: not_home
  condition:
    - condition: state
      entity_id: input_boolean.enable_home_presence_detection
      state: "on"
    - condition: state
      entity_id: group.alarmed_doors_and_windows
      state: "off"
    - condition: not
      conditions:
        - condition: state
          entity_id: device_tracker.unifi_security_gateway
          state: unavailable
  action:
    - service: alarm_control_panel.alarm_arm_away
      data: {}
      entity_id: alarm_control_panel.stevenage_alarm
    - choose:
        - conditions:
            - condition: state
              entity_id: group.external_doors_and_windows
              state: "on"
          sequence:
            - service: script.post_to_home_log
              data:
                service: script.post_to_direct_notification
                data:
                  message:
                    ":warning: :door: :window: The following entrances are still
                    open: {% for entity in state_attr('group.external_doors_and_windows','entity_id')
                    %}{% if states(entity) == 'on' %}{{ '* ' ~ state_attr(entity, 'friendly_name')
                    }} {% endif %}{% endfor %}"
      default: []
    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.enable_mobile_direct_notifications
              state: "on"
          sequence:
            - service: notify.mobile_app_dannys_phone
              data:
                message: Alarm armed and turning off devices.
                title: No One Home
                data:
                  actions:
                    - title: Disarm
                      action: disarm
                    - title: Devices On
                      action: leave_on
                    - title: Disarm & Leave On
                      action: disarm_leave_on
            - service: notify.mobile_app_terina_s_phone
              data:
                title: No One Home
                message: Alarm armed and turning off devices.
                data:
                  actions:
                    - title: Disarm
                      action: disarm
                    - title: Leave On
                      action: leave_on
                    - title: Disarm & Leave On
                      action: disarm_leave_on
            - wait_for_trigger:
                - platform: event
                  event_type: mobile_app_notification_action
              timeout: "300"
              continue_on_timeout: true
            - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ wait.trigger.event.data.action == 'disarm' }}"
                  sequence:
                    - service: alarm_control_panel.alarm_disarm
                      target:
                        entity_id: alarm_control_panel.stevenage_alarm
                    - service: script.post_to_home_log
                      data:
                        message: Disarming alarm.
                - conditions:
                    - condition: template
                      value_template: "{{ wait.trigger.event.data.action == 'leave_on' }}"
                  sequence:
                    - service: script.post_to_home_log
                      data:
                        message: Leaving devices on.
                - conditions:
                    - condition: template
                      value_template:
                        "{{ wait.trigger.event.data.action == 'disarm_leave_on'
                        }}"
                  sequence:
                    - service: alarm_control_panel.alarm_disarm
                      target:
                        entity_id: alarm_control_panel.stevenage_alarm
                    - service: script.post_to_home_log
                      data:
                        message: Disarming alarm and skipping turning off devices.
              default:
                - service: script.1588939391030
      default:
        - service: script.1588939391030
  mode: single
- id: "1619254173098"
  alias: "Leo's Room: Window Closed And Bed Occupied At Night"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.leos_window
      to: "off"
      from: "on"
  condition:
    - condition: state
      entity_id: cover.leos_blinds
      state: open
    - condition: time
      after: "18:30:00"
    - condition: state
      entity_id: input_boolean.enable_leos_blind_automations
      state: "on"
    - condition: state
      entity_id: input_boolean.enable_leos_bed_presence
      state: "on"
    - condition: state
      entity_id: binary_sensor.leos_bed_occupied
      state: "on"
  action:
    - service: cover.close_cover
      target:
        entity_id: cover.leos_blinds
    - service: script.post_to_home_log
      data:
        message:
          ":window: :bed: Leo's window closed and someone is in bed. Closing
          blinds."
  mode: single
- id: "1619865008647"
  alias: "Office: Computer Turned On"
  description: ""
  trigger:
    - platform: state
      entity_id: group.jd_computer
      from: not_home
      to: home
  condition: []
  action:
    - service: script.post_to_home_log
      data:
        message: ":tv: Computer turned on."
    - service: switch.turn_on
      target:
        entity_id: switch.goxlr
    - service: script.post_to_home_log
      data:
        message: Turned on GoXLR.
    - service: script.office_turn_on_external_hard_drive
  mode: single
- id: "1621203193434"
  alias: "Bathroom: Open Blinds In The Morning"
  description: ""
  trigger:
    - platform: time
      at: 06:30:00
  condition:
    - condition: state
      entity_id: input_boolean.enable_bathroom_blind_automations
      state: "on"
  action:
    - service: script.post_to_home_log
      data:
        message: opening bathroom blinds
    - service: cover.open_cover
      target:
        entity_id: cover.bathroom_blinds
  mode: single
- id: "1621203351544"
  alias: "Bathroom: Close Blinds At Night"
  description: ""
  trigger:
    - platform: time
      at: 00:00:00
  condition:
    - condition: state
      entity_id: input_boolean.enable_bathroom_blind_automations
      state: "on"
  action:
    - service: script.post_to_home_log
      data:
        message: ":city_sunset: :window: It's getting dark, closing bathroom's blinds."
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.bathroom_window
              state: "on"
          sequence:
            - service: script.post_to_home_log
              data:
                message:
                  ":warning: :window: Bathroom window is still open. Waiting until
                  it's closed before closing blinds. :warning:"
      default:
        - service: cover.set_cover_position
          data:
            position: 20
  mode: single
- id: "1622374233310"
  alias: "Office: Close Office Curtains At Night"
  description: ""
  trigger:
    - platform: sun
      event: sunset
      offset: -01:00:00
  condition:
    - condition: state
      entity_id: input_boolean.enable_office_curtain_automations
      state: "on"
  action:
    - service: script.post_to_home_log
      data:
        message: ":city_sunset: :window: It's getting dark, closing office blinds."
    - choose:
        - conditions:
            - condition: or
              conditions:
                - condition: state
                  entity_id: binary_sensor.office_window_right
                  state: "on"
                - condition: state
                  entity_id: binary_sensor.office_window_left
                  state: "on"
          sequence:
            - service: script.post_to_home_log
              data:
                message:
                  ":warning: :window: Office window is still open so not closing
                  curtains. before closing curtains. :warning:"
      default:
        - service: script.office_close_curtains
  mode: single
- id: "1622374444832"
  alias: "Office: Open Curtains In The Morning"
  description: ""
  trigger:
    - platform: time
      at: 08:00:00
  condition: []
  action:
    - service: script.post_to_home_log
      data:
        message: ":clock8: Opening office curtains."
    - service: script.office_open_curtains
  mode: single
- id: "1617395256574"
  alias: "Leo's Room: Bed Occupied At Night"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.leos_bed_occupied
      to: "on"
  condition:
    - condition: state
      entity_id: cover.leos_blinds
      state: open
    - condition: time
      after: "18:30:00"
    - condition: state
      entity_id: input_boolean.enable_leos_blind_automations
      state: "on"
    - condition: state
      entity_id: input_boolean.enable_leos_bed_presence
      state: "on"
  action:
    - service: script.post_to_home_log
      data:
        message: ":city_sunrise: :bed: Someone is in Leo's bed. Closing blinds."
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.leos_window
              state: "on"
          sequence:
            - service: script.post_to_home_log
              data:
                message:
                  ":warning: :wondow: Leo's bedroom window is still open. Waiting
                  until it's closed before closing blinds. :warning:"
            - service: cover.close_cover
              target:
                entity_id: cover.leos_blinds
      default:
        - service: cover.close_cover
          target:
            entity_id: cover.leos_blinds
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.leos_window
          to: "off"
      timeout: 03:00:00
    - service: script.post_to_home_log
      data:
        message: ":white_check_mark: :window: Leo's window closed. Closing blinds."
    - service: cover.close_cover
      target:
        entity_id: cover.leos_blinds
  mode: single
- id: "1622584959878"
  alias: "Office: High Temperature"
  description: ""
  trigger:
    - platform: numeric_state
      entity_id: sensor.office_area_temperature
      above: "25"
  condition:
    - condition: state
      entity_id: switch.office_fan
      state: "off"
    - condition: state
      entity_id: group.adult_people
      state: home
    - condition: time
      before: "22:00:00"
  action:
    - service: script.post_to_home_log
      data:
        message: "Office temperature is high. Turning on fan :fan:"
    - service: switch.turn_on
      target:
        entity_id: switch.office_fan
  mode: single
- id: "1622667464880"
  alias: "Bedroom: Window Closed At Night"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_window
      from: "on"
      to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.enable_bedroom_blind_automations
      state: "on"
    - condition: sun
      before: sunrise
      after: sunset
    - condition: not
      conditions:
        - condition: state
          entity_id: cover.bedroom_blind
          state: closed
  action:
    - service: script.post_to_home_log
      data:
        message:
          ":window: :city_sunset: Bedroom window closed and it's dark. Closing
          blinds."
    - service: cover.close_cover
      target:
        entity_id: cover.bedroom_blind
  mode: single
- id: "1622891806607"
  alias: "Ashlee's Room: Window Closed After Dark"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.ashlees_window
      from: "on"
      to: "off"
  condition:
    - condition: state
      entity_id: cover.ashlees_blinds
      state: open
    - condition: state
      entity_id: input_boolean.enable_ashlees_blind_automations
      state: "on"
    - condition: time
      after: "19:00:00"
  action:
    - service: script.post_to_home_log
      data:
        message:
          ":window: :city_sunset: Ashlee's bedroom window closed and it's dark.
          Closing blinds."
    - service: cover.close_cover
      target:
        entity_id: cover.ashlees_blinds
  mode: single
- id: "1622934382699"
  alias: "Bathroom: Window Closed At Night"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.bathroom_window
      from: "on"
      to: "off"
  condition:
    - condition: time
      after: 00:00:00
      before: 06:30:00
  action:
    - service: script.post_to_home_log
      data:
        message:
          ":window: :city_sunset: Bathroom window closed and it's dark. Closing
          blinds."
    - service: cover.close_cover
      target:
        entity_id: cover.bathroom_blinds
  mode: single
- id: "1622973276606"
  alias: "Office: Arm Office Door"
  description: ""
  trigger:
    - platform: state
      entity_id: input_boolean.arm_office_door
      from: "off"
      to: "on"
  condition: []
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.office_door
              state: "on"
          sequence:
            - service: script.post_to_home_log
              data:
                message:
                  ":warning: :alarm: Unable to arm office door because the door is
                  not closed. Disabling alarm."
            - service: input_boolean.turn_off
              target:
                entity_id: input_boolean.arm_office_door
      default:
        - service: script.post_to_home_log
          data:
            message: ":bell: :door: Office door armed."
  mode: single
- id: "1622973478458"
  alias: "Office: Trigger Armed Door"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.office_door
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.arm_office_door
      state: "on"
  action:
    - service: script.post_to_home_log
      data:
        message: ":rotating_light: :door: Office door armed and was opened:rotating_light:"
    - service: script.conservatory_camera_process_image
      data:
        title: Office door alarm triggered
        message: Office door alarm triggered.
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.arm_office_door
  mode: queued
  max: 10
- id: "1623087278802"
  alias: "3D Printer: Check If Dark And Printing"
  description: ""
  trigger:
    - platform: time_pattern
      hours: "*"
      seconds: "*"
      minutes: /30
    - platform: sun
      event: sunset
  condition:
    - condition: state
      entity_id: light.prusa
      state: "off"
    - condition: numeric_state
      entity_id: sensor.conservatory_motion_light_level
      below: "100"
    - condition: state
      entity_id: binary_sensor.octoprint_printing
      state: "on"
  action:
    - service: script.post_to_home_log
      data:
        message:
          ":city_sunset: :printer: It's getting dark and 3D printer is printing.
          Turning on lights."
    - scene: scene.3d_printer_light_on
  mode: single
- id: "1609349959402"
  alias: "3D Printer: Print Finished And Hot End Cooled"
  description: ""
  trigger:
    - platform: numeric_state
      entity_id: sensor.octoprint_actual_tool0_temp
      below: "50"
  condition:
    - condition: state
      entity_id: input_boolean.enable_3d_printer_automations
      state: "on"
  action:
    - service: script.post_to_home_log
      data:
        message:
          ":printer: :snowflake: Hot end cooled down. Turning off extruder fan
          and light."
    - service: switch.turn_off
      target:
        entity_id: switch.prusa_fan
    - scene: scene.3d_printer_light_off
  mode: single
- id: "1608655560832"
  alias: "3D Printer: Print Started"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.octoprint_printing
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.enable_3d_printer_automations
      state: "on"
  action:
    - wait_for_trigger:
        - platform: numeric_state
          entity_id: sensor.octoprint_time_remaining
          above: "0"
      timeout: "60"
    - service: script.post_to_home_log
      data:
        message:
          ':printer: 3D printer has started. Estimated time to completion: {{((now().strftime("%s")
          | int + (states("sensor.octoprint_time_remaining") | int)) | timestamp_custom("%H:%M:%S"))}}
          ({{ ((((states("sensor.octoprint_time_remaining") | int) / 60) | float) /
          60) | round(2) }} hours).'
    - service: switch.turn_on
      target:
        entity_id: switch.prusa_fan
    - choose:
        - conditions:
            - condition: sun
              after: sunset
          sequence:
            - service: script.post_to_home_log
              data:
                message:
                  ":printer: :city_sunset: Printing started after sunset. Turning
                  Printer light on."
            - scene: scene.3d_printer_light_on
        - conditions:
            - condition: sun
              before: sunrise
          sequence:
            - service: script.post_to_home_log
              data:
                message:
                  ":printer: :city_sunset: Printing started before sunrise. Turning
                  Printer light on."
            - scene: scene.3d_printer_light_on
      default:
        - service: script.post_to_home_log
          data:
            message:
              ":printer: :sunrise: Printing started after sunrise. Not turning
              on printer light."
  mode: single
- id: "1624194131454"
  alias: "Bedroom: TV Turned On During Bright Day"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_tv_powered_on
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.enable_bedroom_blind_automations
      state: "on"
    - condition: sun
      before: sunset
      after: sunrise
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.enable_mobile_direct_notifications
              state: "on"
            - condition: state
              entity_id: binary_sensor.bedroom_window
              state: "on"
          sequence:
            - service: notify.mobile_app_dannys_phone
              data:
                message: Do you want to close the blinds?
                data:
                  actions:
                    - title: "Yes"
                      action: close_bedroom_blinds
                    - title: "No"
                      action: ignore
                title: 📺🛌TV On & Window Is Open
            - wait_for_trigger:
                - platform: event
                  event_type: mobile_app_notification_action
              timeout: "120"
              continue_on_timeout: true
            - choose:
                - conditions:
                    - condition: template
                      value_template:
                        "{{ wait.trigger.event.data.action == 'close_bedroom_blinds'
                        }}"
                  sequence:
                    - service: cover.set_cover_position
                      target:
                        entity_id: cover.bedroom_blind
                      data:
                        position: 20
                    - service: script.post_to_home_log
                      data:
                        message: ":window: Closing bedroom blinds"
                - conditions:
                    - condition: template
                      value_template: "{{ wait.trigger.event.data.action == 'ignore' }}"
                  sequence: []
              default: []
        - conditions:
            - condition: state
              entity_id: binary_sensor.bedroom_window
              state: "off"
          sequence:
            - service: script.post_to_home_log
              data:
                message:
                  ":tv: :bed: Bedroom TV turned on and it's bright. Lowering bedroom
                  blinds."
            - service: cover.set_cover_position
              target:
                entity_id: cover.bedroom_blind
              data:
                position: 20
      default: []
  mode: single
- id: "1624661497604"
  alias: "Bathroom: Window Closed At Night"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.bathroom_window
      from: "on"
      to: "off"
  condition:
    - condition: time
      after: 00:00:00
    - condition: sun
      before: sunrise
      before_offset: -01:00:00
  action:
    - service: script.post_to_home_log
      data:
        message: ":window: Bathroom window closed. Closing blinds."
    - service: cover.set_cover_position
      data:
        position: 20
  mode: single
- id: "1624918278463"
  alias: "Stairs: Motion Detected"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.stairs_motion
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: light.stairs_2
      state: "off"
    - condition: state
      entity_id: input_boolean.enable_stairs_motion_trigger
      state: "on"
  action:
    - choose:
        - conditions:
            - condition: time
              after: 00:00:00
            - condition: sun
              before: sunrise
          sequence:
            - service: script.post_to_home_log
              data:
                message:
                  ":paw_prints: :low_brightness: Motion detected at the bottom of
                  the stairs and it's night time. Turning stairs light on dim."
            - scene: scene.stairs_light_dim
      default:
        - service: script.post_to_home_log
          data:
            message:
              ":paw_prints: :high_brightness: Motion detected at the bottom of
              the stairs. Turning stairs light."
        - scene: scene.stairs_light_2_on
  mode: single
- id: "1624918387840"
  alias: "Stairs: No Motion Detected"
  description: ""
  trigger:
    - platform: state
      entity_id: binary_sensor.stairs_motion
      to: "off"
      for: 00:01:00
  condition:
    - condition: state
      entity_id: input_boolean.enable_stairs_motion_trigger
      state: "on"
    - condition: state
      entity_id: light.stairs_2
      state: "on"
  action:
    - service: script.post_to_home_log
      data:
        message:
          ":no_pedestrians: :bulb: No motion detected at the bottom of the stairs
          for 1 minute. Turning stairs light off."
    - scene: scene.stairs_light_2_off
  mode: single
- id: "1625924056779"
  alias: Mobile Notification Action Router
  description: ""
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data: {}
  condition: []
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ trigger.event.data.action == 'action_very' }}"
          sequence:
            - service: script.post_to_home_log
              data:
                message: "TEST: Mobile action: Very"
        - conditions:
            - condition: template
              value_template: "{{ trigger.event.data.action == 'action_mod' }}"
          sequence:
            - service: script.post_to_home_log
              data:
                message: "TEST: Mobile action: Mod"
      default:
        - service: script.post_to_home_log
          data:
            message:
              ":warning: :flying_saucer: Unknown mobile action received :flying_saucer:
              :warning:"
  mode: single
- id: "1583956425622"
  alias: "Lounge: Dark And Motion Detected"
  description: Added a second delay https://community.home-assistant.io/t/hue-motion-sensor-with-illuminance-condition/128290
  trigger:
    - entity_id: group.lounge_motion
      platform: state
      to: "on"
      from: "off"
    - platform: state
      entity_id: binary_sensor.lounge_motion
      to: "on"
    - platform: state
      entity_id: binary_sensor.lounge_motion_2
      to: "on"
    - platform: state
      entity_id: binary_sensor.lounge_motion_3
      to: "on"
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.enable_lounge_motion_trigger
          state: "on"
        - condition: or
          conditions:
            - below: "30"
              condition: numeric_state
              entity_id: sensor.lounge_motion_light_level
            - below: "25"
              condition: numeric_state
              entity_id: sensor.lounge_motion_2_light_level
        - condition: or
          conditions:
            - condition: numeric_state
              entity_id: light.lounge_left_lamp
              attribute: brightness
              below: "190"
            - condition: numeric_state
              entity_id: light.lounge_right_lamp
              attribute: brightness
              below: "190"
            - condition: template
              value_template:
                "{{ state_attr('light.lounge_left_lamp', 'brightness')
                == none }}"
            - condition: template
              value_template:
                "{{ state_attr('light.lounge_right_lamp', 'brightness')
                == none }}"
  action:
    - data:
        message:
          ":paw_prints: :bulb: :high_brightness: Motion detected in the lounge
          and it's dark ({{ states('sensor.lounge_motion_light_level') }} & {{ states('sensor.lounge_motion_2_light_level')
          }} lux < 20-25 lux). Turning lounge lights on."
      service: script.post_to_home_log
    - scene: scene.lounge_lights
  mode: queued
  max: 10
