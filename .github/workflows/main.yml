---
name: Home Assistant CI

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  yamllint:
    name: "üßπ YAML Lint"
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Getting your configuration from GitHub
        uses: actions/checkout@v4
      - name: Running YAMLlint
        uses: ibiqlik/action-yamllint@v3
        continue-on-error: true
        with:
          config_file: .github/yamllint-config.yml
          # https://github.com/ibiqlik/action-yamllint/issues/14#issuecomment-796554388
          format: parsable
  remarklint:
    name: "üßπ Remark Lint"
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Getting your configuration from GitHub
        uses: actions/checkout@v4
      - name: Running Remark lint
        uses: "docker://pipelinecomponents/remark-lint:latest"
        continue-on-error: true
        with:
          args: "remark --no-stdout --color --frail --use preset-lint-recommended ."

  ha-stable-check:
    name: "üè° Home Assistant Core Stable Configuration Check"
    needs: [yamllint, remarklint]
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out configuration from GitHub
        uses: actions/checkout@v4
      # Create test directory
      - name: ‚ûï Create test directory
        run: |
          mkdir -p camera
      # Integrations does not exist in custom components during checkout:
      - name: ‚ûñ Remove battery_notes integration
        run: |
          sed -i -e '/battery_notes\:/,+2d' configuration.yaml
      - name: ‚ûñ Remove delete integration
        run: |
          sed -i -e '/delete\:/,+1d' configuration.yaml
      - name: ‚ûñ Remove Powercalc integration
        run: |
          sed -i -e '/powercalc\:/,+2d' configuration.yaml
      - name: ‚ûñ Remove Sonoff integration
        run: |
          sed -i -e '/sonoff\:/,+3d' configuration.yaml
      - name: üöÄ Run Home Assistant Configuration Check
        uses: frenck/action-home-assistant@v1
        with:
          path: "./"
          secrets: ./secrets.yaml.sample
          version: "stable"

  ha-future-checks:
    name: "üè¢ Home Assistant Core ${{ matrix.version }} Configuration Check"
    needs: [yamllint, remarklint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["beta", "dev"]
    steps:
      - name: ‚§µÔ∏è Check out configuration from GitHub
        uses: actions/checkout@v4
      # Create test directory
      - name: ‚ûï Create test directory
        run: |
          mkdir -p camera
      # Integrations does not exist in custom components during checkout:
      - name: ‚ûñ Remove battery_notes integration
        run: |
          sed -i -e '/battery_notes\:/,+2d' configuration.yaml
      - name: ‚ûñ Remove delete integration
        run: |
          sed -i -e '/delete\:/,+1d' configuration.yaml
      - name: ‚ûñ Remove Powercalc integration
        run: |
          sed -i -e '/powercalc\:/,+2d' configuration.yaml
      - name: ‚ûñ Remove Sonoff integration
        run: |
          sed -i -e '/sonoff\:/,+3d' configuration.yaml
      - name: üöÄ Run Home Assistant Configuration Check
        uses: frenck/action-home-assistant@v1
        continue-on-error: true
        with:
          path: "./"
          secrets: ./secrets.yaml.sample
          version: "${{ matrix.version }}"

  deploy:
    name: "üöÄ Deploy changes"
    needs: [ha-stable-check]
    runs-on: ubuntu-latest
    steps:
      - name: üîå Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:homeassistant-ci
      - name: üöö Deploying
        uses: Wandalen/wretry.action@v3.8.0
        with:
          action: fjogeleit/http-request-action@master
          with: |
            url: '${{ secrets.DEPLOYMENT_URL }}'
            method: POST
            customHeaders: '{"Content-Type":"application/json"}'
            data: '{ "key_token":"${{ secrets.PULL_KEY }}" }'
          attempt_limit: 5
          attempt_delay: 2000

  esphome:
    name: "üõ†Ô∏è ESPHome check"
    runs-on: ubuntu-latest
    needs: [yamllint]
    steps:
      - name: ‚§µÔ∏è Check out configuration from GitHub
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install esphome
          pip list
          esphome version
      - name: ‚úçÔ∏è Copy stub files into configuration folder
        run: cp -R ./esphome/secrets.yaml.sample ./esphome/secrets.yaml
      - name: üöÄ Run esphome on all files
        continue-on-error: true
        run: |
          for file in $(find ./esphome -type f -maxdepth 1 -name "*.yaml" -not -name "secrets.yaml"); do esphome config "${file}"; done
