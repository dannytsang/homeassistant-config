name: Home Assistant CI & Deploy

permissions:
  contents: read

# yamllint disable-line rule:truthy
on:
  push:
    branches: [main]
    paths:
      - '**.yaml'
      - '**.yml'
      - 'esphome/**'
      - '!README.md'
  schedule:
    # Weekly heads-up against future channels (times are UTC on GitHub)
    - cron: "0 8 * * 6"

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect file changes
    runs-on: ubuntu-latest
    outputs:
      esphome: ${{ steps.filter.outputs.esphome }}
      hacs: ${{ steps.filter.outputs.hacs }}
    steps:
      - uses: actions/checkout@v5
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            hacs:
              - 'custom_components/**'
            esphome:
              - 'esphome/**'

  validate:
    name: Validate config
    needs: changes
    uses: ./.github/workflows/_ha-validate.yml
    with:
      # Run ESPHome if esphome/** changed, OR on the weekly schedule
      run_esphome: ${{ needs.changes.outputs.esphome == 'true' || github.event_name == 'schedule' }}
      # Run ESPHome if esphome/** changed, OR on the weekly schedule
      run_hacs: ${{ needs.changes.outputs.hacs == 'true' || github.event_name == 'schedule' }}

  deploy:
    name: Deploy changes
    needs: [validate]
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
    steps:
      - name: Connect Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:homeassistant-ci

      - name: Deploy (POST webhook with retries)
        uses: Wandalen/wretry.action@v3.8.0
        with:
          action: fjogeleit/http-request-action@v1
          with: |
            url: '${{ secrets.DEPLOYMENT_URL }}'
            method: 'POST'
            timeout: 30000
            customHeaders: '{"Content-Type":"application/json"}'
            data: '{ "key_token":"${{ secrets.PULL_KEY }}" }'
            preventFailureOnNoResponse: false
          attempt_limit: 5
          attempt_delay: 3000
