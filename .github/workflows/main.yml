---
name: Home Assistant CI

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:

jobs:
  yamllint:
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v4
      - name: Running YAMLlint
        uses: ibiqlik/action-yamllint@v3
        continue-on-error: true
        with:
          config_file: .github/yamllint-config.yml
          # https://github.com/ibiqlik/action-yamllint/issues/14#issuecomment-796554388
          format: parsable
  remarklint:
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v4
      - name: Running Remark lint
        uses: "docker://pipelinecomponents/remark-lint:latest"
        continue-on-error: true
        with:
          args: "remark --no-stdout --color --frail --use preset-lint-recommended ."

  ha-stable-check:
    name: "Home Assistant Core Stable Configuration Check"
    needs: [yamllint, remarklint]
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out configuration from GitHub
        uses: actions/checkout@v4
      # Create test directory
      - name: ‚ûï Create test directory
        run: |
          mkdir -p camera
      # Integrations does not exist in custom components during checkout:
      - name: ‚ûñ Remove battery_notes integration
        run: |
          sed -i -e '/battery_notes\:/,+2d' configuration.yaml
      - name: ‚ûñ Remove delete integration
        run: |
          sed -i -e '/delete\:/,+1d' configuration.yaml
      - name: ‚ûñ Remove Powercalc integration
        run: |
          sed -i -e '/powercalc\:/,+2d' configuration.yaml
      - name: ‚ûñ Remove Sonoff integration
        run: |
          sed -i -e '/sonoff\:/,+3d' configuration.yaml
      - name: üöÄ Run Home Assistant Configuration Check
        uses: frenck/action-home-assistant@v1
        with:
          path: "./"
          secrets: ./secrets.yaml.sample
          version: "stable"

  ha-future-checks:
    name: "Home Assistant Core ${{ matrix.version }} Configuration Check"
    needs: [yamllint, remarklint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["beta", "dev"]
    steps:
      - name: ‚§µÔ∏è Check out configuration from GitHub
        uses: actions/checkout@v4
      # Create test directory
      - name: ‚ûï Create test directory
        run: |
          mkdir -p camera
      # Integrations does not exist in custom components during checkout:
      - name: ‚ûñ Remove battery_notes integration
        run: |
          sed -i -e '/battery_notes\:/,+2d' configuration.yaml
      - name: ‚ûñ Remove delete integration
        run: |
          sed -i -e '/delete\:/,+1d' configuration.yaml
      - name: ‚ûñ Remove Powercalc integration
        run: |
          sed -i -e '/powercalc\:/,+2d' configuration.yaml
      - name: ‚ûñ Remove Sonoff integration
        run: |
          sed -i -e '/sonoff\:/,+3d' configuration.yaml
      - name: üöÄ Run Home Assistant Configuration Check
        uses: frenck/action-home-assistant@v1
        continue-on-error: true
        with:
          path: "./"
          secrets: ./secrets.yaml.sample
          version: "${{ matrix.version }}"

  deploy:
    name: "Deploy changes"
    needs: [ha-stable-check]
    runs-on: ubuntu-latest
    steps:
      - name: üîå Tailscale
        uses: tailscale/github-action@v2
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          version: 1.58.2
      - name: üöö Deploying
        uses: fjogeleit/http-request-action@v1
        with:
          url: '${{ secrets.DEPLOYMENT_URL }}'
          method: POST
          customHeaders: '{"Content-Type":"application/json"}'
          data: '{ "key":"${{ secrets.PULL_KEY }}" }'

  esphome:
    name: "üõ†Ô∏è ESPHome check"
    runs-on: ubuntu-latest
    needs: [yamllint]
    steps:
      - name: ‚§µÔ∏è Check out configuration from GitHub
        uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install esphome
          pip list
          esphome version
      - name: Copy stub files into configuration folder
        run: cp -R ./esphome/secrets.yaml.sample ./esphome/secrets.yaml
      - name: Run esphome on all files
        # yamllint disable rule:line-length
        run: |
          for file in $(find ./esphome -type f -name "*.yaml" -not -name "secrets.yaml"); do esphome "${file}" config; done
